{"version":3,"sources":["/home/schumajr/cosmos/libs/codex-service/src/index.ts","/home/schumajr/cosmos/libs/codex-service/src/lib/codex.service.ts","/home/schumajr/cosmos/libs/igor-service/src/index.ts","/home/schumajr/cosmos/libs/igor-service/src/lib/igor.service.ts","/home/schumajr/cosmos/libs/types/src/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/codex/codex-person.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/codex/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/ipps/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/ipps/ipps-position.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/ipps/ipps-record.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/sparkrock/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/sparkrock/sparkrock-position.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/sparkrock/sparkrock-record.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/trillium/index.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/trillium/trillium-assignment.class.ts","/home/schumajr/cosmos/libs/types/src/lib/entities/trillium/trillium-record.class.ts","/home/schumajr/cosmos/libs/types/src/lib/signalr-connection.model.ts","/home/schumajr/cosmos/libs/types/src/lib/types.ts","/home/schumajr/cosmos/libs/types/src/lib/ui/index.ts","/home/schumajr/cosmos/libs/types/src/lib/ui/theme.model.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["export * from './lib/codex.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, retry, tap } from 'rxjs/operators';\n\nimport { PingFunctionResponse, PingRequestState, Status } from \"@cosmos/types\";\n\nimport { GoogleGroup } from \"@cosmos/types\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodexService {\n  private pingURL = 'https://wrdsb-codex.azurewebsites.net/api/ping';\n\n  private searchURL = 'https://wrdsb-codex.azurewebsites.net/api/igor-groups-groups-search';\n  \n  private pingState: BehaviorSubject<PingFunctionResponse> = new BehaviorSubject({\n    payload: {\n      message: \"\",\n      chatter: \"\",\n      status: 0,\n      timestamp: \"\"\n    }\n  });\n  private pingRequestState: BehaviorSubject<PingRequestState> = new BehaviorSubject({\n    status: Status.UNKNOWN,\n    response: 'response',\n    error: 'error'\n  });\n  public readonly pingState$: Observable<PingFunctionResponse> = this.pingState.asObservable();\n  public readonly pingRequestState$: Observable<PingRequestState> = this.pingRequestState.asObservable();\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  doPing(): void {\n    console.log('Pinging Codex...');\n\n    this.pingRequestState.next({\n      status: Status.LOADING,\n      response: 'unknown',\n      error: 'unknown'\n    });\n\n    this.http.get<PingFunctionResponse>(this.pingURL, this.httpOptions)\n      .pipe(\n        tap(_ => console.log('tap')),\n        retry(2),\n        catchError(error => {\n          console.log('catch error');\n          this.pingRequestState.next({\n            status: Status.ERROR,\n            response: '',\n            error: error\n          });\n          this.pingState.next({\n            payload: {\n              message: \"error\",\n              chatter: \"error\",\n              status: 200,\n              timestamp: \"timestamp\"\n            }\n          });\n          throw 'error pinging Codex';\n        }),\n        tap(_ => {\n          this.pingRequestState.next({\n            status: Status.SUCCESS,\n            response: 'success',\n            error: ''\n          });\n          console.log('success pinging Codex');\n        })\n      )\n      .subscribe(response => this.pingState.next(response));\n  }\n\n  search() {\n    console.log('search codex');\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n\n    let body = {\n      payload: {\n        //count: true,\n        //select: '*',\n        //filter: '',\n        //facets: '',\n        //orderby: '',\n        //search: '',\n        //skip: '',\n        //top: ''\n      }\n    };\n\n    return this.http.post<GoogleGroup[]>(this.searchURL, body, this.httpOptions);\n  }\n}\n","export * from './lib/igor.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, retry, tap } from 'rxjs/operators';\n\nimport { PingFunctionResponse, PingRequestState, Status } from \"@cosmos/types\";\n\nimport { IGORGroup } from '@cosmos/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IGORService {\n  private pingURL = 'https://wrdsb-igor3.azurewebsites.net/api/ping';\n  \n  private googleGroupsCommandURL = 'https://wrdsb-igor3.azurewebsites.net/api/google-group-command';\n  private googleGroupsQueryURL = 'https://wrdsb-igor3.azurewebsites.net/api/group-query';\n  private googleGroupsSearchURL = '';\n\n  private usersURL = '';\n\n  private pingState: BehaviorSubject<PingFunctionResponse> = new BehaviorSubject({\n    payload: {\n      message: \"\",\n      chatter: \"\",\n      status: 0,\n      timestamp: \"\"\n    }\n  });\n  private pingRequestState: BehaviorSubject<PingRequestState> = new BehaviorSubject({\n    status: Status.UNKNOWN,\n    response: 'response',\n    error: 'error'\n  });\n  public readonly pingState$: Observable<PingFunctionResponse> = this.pingState.asObservable();\n  public readonly pingRequestState$: Observable<PingRequestState> = this.pingRequestState.asObservable();\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  doPing(): void {\n    console.log('Pinging IGOR...');\n\n    this.pingRequestState.next({\n      status: Status.LOADING,\n      response: 'unknown',\n      error: 'unknown'\n    });\n\n    this.http.get<PingFunctionResponse>(this.pingURL, this.httpOptions)\n      .pipe(\n        tap(_ => console.log('tap')),\n        retry(2),\n        catchError(error => {\n          console.log('catch error');\n          this.pingRequestState.next({\n            status: Status.ERROR,\n            response: '',\n            error: error\n          });\n          this.pingState.next({\n            payload: {\n              message: \"error\",\n              chatter: \"error\",\n              status: 200,\n              timestamp: \"timestamp\"\n            }\n          });\n          throw 'error pinging IGOR';\n        }),\n        tap(_ => {\n          this.pingRequestState.next({\n            status: Status.SUCCESS,\n            response: 'success',\n            error: ''\n          });\n          console.log('success pinging IGOR');\n        })\n      )\n      .subscribe(response => this.pingState.next(response));\n  }\n\n  listGroups(list: string): Observable<IGORGroup[]> {\n    console.log('IGOR: list groups');\n\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n      params: new HttpParams()\n        .set('operation', 'list')\n        .set('payload', list)\n    };\n    let groups = this.http.get<IGORGroup[]>(this.googleGroupsQueryURL, httpOptions);\n    return groups;\n  }\n}\n","export * from './lib/types';\nexport * from './lib/signalr-connection.model';\n\nexport * from './lib/entities';\nexport * from './lib/azure-functions';\n\nexport * from './lib/ui';","import { Person } from \"../conceptual/person.interface\";\nimport { IPPSRecord } from \"../ipps/ipps-record.class\";\nimport { TrilliumRecord } from \"../trillium/trillium-record.class\";\n\nclass CodexPerson implements Person {\n    id: string;\n    ein: string;\n    email: string;\n    pal: string;\n\n    name: string;\n    first_name: string;\n    last_name: string;\n    sortable_name: string;\n\n    people_set_memberships: Array<string>;\n\n    school_codes: Array<string>;\n    location_codes: Array<string>;\n\n    ippsRecord: IPPSRecord;\n    trilliumRecord: TrilliumRecord;\n\n    its_field_tech_for: string[];\n    dlst_for: string[];\n    catc_contact_for: string[];\n    its_program_manager_for: string[];\n}\n\nexport { CodexPerson };\n","export * from './codex-person.class';","export * from './conceptual';\n\nexport * from './aad';\nexport * from './codex';\nexport * from './google';\nexport * from './hagar';\nexport * from './igor';\nexport * from './ipps';\nexport * from './sorting-hat';\nexport * from './sparkrock';\nexport * from './team-viewer';\nexport * from './trillium';","export * from './ipps-position.class';\nexport * from './ipps-record.class';","import { Position } from \"../conceptual/position.interface\";\n\nclass IPPSPosition implements Position {\n    id: string;\n    ein: string;\n    activity_code: string;\n    employee_group_category: string;\n    employee_group_code: string;\n    employee_group_description: string;\n    extension: string;\n    job_code: string;\n    job_description: string;\n    location_code: string;\n    location_description: string;\n    panel: string;\n    phone_no: string;\n    school_code: string;\n    school_type: string;\n    home_location_indicator: string;\n    position_start_date: string;\n    position_end_date: string;\n}\n\nexport { IPPSPosition };","import { HRISRecord } from \"../conceptual/hris-record.interface\";\nimport { IPPSPosition } from \"./ipps-position.class\";\n\nclass IPPSRecord implements HRISRecord {\n    id: string;\n    ein: string;\n    email: string;\n    username: string;\n    first_name: string;\n    last_name: string;\n    name: string;\n    sortable_name: string;\n    directory: string;\n    phone: string;\n    extension: string;\n    mbxnumber: string;\n    created_at: string;\n    updated_at: string;\n    deleted_at: string;\n    deleted: boolean\n    positions: Array<IPPSPosition>;\n}\n\nexport { IPPSRecord };","export * from './sparkrock-position.class';\nexport * from './sparkrock-record.class';","import { Position } from \"../conceptual/position.interface\";\n\nclass SparkrockPosition implements Position {\n    id: string;\n    ein: string;\n    activity_code: string;\n    employee_group_category: string;\n    employee_group_code: string;\n    employee_group_description: string;\n    extension: string;\n    job_code: string;\n    job_description: string;\n    location_code: string;\n    location_description: string;\n    panel: string;\n    phone_no: string;\n    school_code: string;\n    school_type: string;\n    home_location_indicator: string;\n    position_start_date: string;\n    position_end_date: string;\n}\n\nexport { SparkrockPosition };","import { HRISRecord } from \"../conceptual/hris-record.interface\";\nimport { SparkrockPosition } from \"./sparkrock-position.class\";\n\nclass SparkrockRecord implements HRISRecord {\n    id: string;\n    ein: string;\n    email: string;\n    username: string;\n    first_name: string;\n    last_name: string;\n    name: string;\n    sortable_name: string;\n    directory: string;\n    phone: string;\n    extension: string;\n    mbxnumber: string;\n    created_at: string;\n    updated_at: string;\n    deleted_at: string;\n    deleted: boolean\n    positions: Array<SparkrockPosition>;\n}\n\nexport { SparkrockRecord };","export * from './trillium-assignment.class';\nexport * from './trillium-record.class';","import { TeachingAssignment } from \"../conceptual/teaching-assignment.interface\";\n\nclass TrilliumAssignment implements TeachingAssignment {\n    id: string;\n    school_code: string;\n    class_code: string;\n    teacher_ein: string;\n    teacher_email: string;\n    created_at: string;\n    updated_at: string;\n    deleted_at: string;\n    deleted: boolean\n}\n\nexport { TrilliumAssignment };","import { SISRecord } from \"../conceptual/sis-record.interface\";\nimport { TrilliumAssignment } from \"./trillium-assignment.class\";\n\nclass TrilliumRecord implements SISRecord {\n    id: string;\n    ein: string;\n    school_code: string;\n    school_year: string;\n    staff_type: string;\n    status: string;\n    created_at: string;\n    updated_at: string;\n    deleted_at: string;\n    deleted: boolean\n    assignments: Array<TrilliumAssignment>\n}\n\nexport { TrilliumRecord };","export class SignalRConnection {\n    url: string;\n    accessToken: string;\n }","import { Observable } from \"rxjs\";\n\nexport interface Environment {\n  production: boolean;\n  appName: string;\n\n  aadClientId: string;\n  aadAuthority: string;\n  aadValidateAuthority: boolean;\n  aadRedirectUri: string;\n  aadPostLogoutRedirectUri: string;\n  aadNavigateToLoginRequestUrl: boolean;\n}\n\nexport interface PingRequestState {\n  status: Status;\n  response?: string;\n  error?: string;\n}\n\nexport enum Status {\n  UNKNOWN = 'UNKNOWN',\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  ERROR = 'ERROR'\n}","export * from './menu.model';\nexport * from './theme.model';","export class Theme {\n    name: string;\n}"],"sourceRoot":"webpack:///"}