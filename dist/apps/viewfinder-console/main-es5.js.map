{"version":3,"sources":["webpack:///home/schumajr/cosmos/libs/chassis/src/index.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/chassis.module.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/chassis.service.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/chassis/chassis.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/chassis/chassis.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/footer/footer.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/footer/footer.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/header/header.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/header/header.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-inner-left/sidebar-inner-left.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-inner-left/sidebar-inner-left.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-inner-right/sidebar-inner-right.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-inner-right/sidebar-inner-right.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-outer-left/sidebar-outer-left.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-outer-left/sidebar-outer-left.component.html","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-outer-right/sidebar-outer-right.component.ts","webpack:///home/schumajr/cosmos/libs/chassis/src/lib/sidebar-outer-right/sidebar-outer-right.component.html","webpack:///home/schumajr/cosmos/libs/environment/src/index.ts","webpack:///home/schumajr/cosmos/libs/environment/src/lib/environment.module.ts","webpack:///home/schumajr/cosmos/libs/environment/src/lib/environment.service.ts","webpack:///home/schumajr/cosmos/libs/guards/src/index.ts","webpack:///home/schumajr/cosmos/libs/guards/src/lib/guards.module.ts","webpack:///home/schumajr/cosmos/libs/guards/src/lib/roles.guard.ts","webpack:///home/schumajr/cosmos/libs/http-interceptors/src/index.ts","webpack:///home/schumajr/cosmos/libs/http-interceptors/src/lib/logging-interceptor.ts","webpack:///home/schumajr/cosmos/libs/http-interceptors/src/lib/noop-interceptor.ts","webpack:///home/schumajr/cosmos/libs/msgraph-service/src/index.ts","webpack:///home/schumajr/cosmos/libs/msgraph-service/src/lib/graph.service.ts","webpack:///home/schumajr/cosmos/libs/msgraph-service/src/lib/msgraph-service.module.ts","webpack:///home/schumajr/cosmos/libs/notifications/src/index.ts","webpack:///home/schumajr/cosmos/libs/notifications/src/lib/notifications.module.ts","webpack:///home/schumajr/cosmos/libs/notifications/src/lib/notifications.service.ts","webpack:///home/schumajr/cosmos/libs/pages/src/index.ts","webpack:///home/schumajr/cosmos/libs/pages/src/lib/home-page/home-page.component.ts","webpack:///home/schumajr/cosmos/libs/pages/src/lib/home-page/home-page.component.html","webpack:///home/schumajr/cosmos/libs/pages/src/lib/not-found-page/not-found-page.component.ts","webpack:///home/schumajr/cosmos/libs/pages/src/lib/not-found-page/not-found-page.component.html","webpack:///home/schumajr/cosmos/libs/pages/src/lib/pages.module.ts","webpack:///home/schumajr/cosmos/libs/panels/src/index.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/apps-menu-panel/apps-menu-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/apps-menu-panel/apps-menu-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/feedback-panel/feedback-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/feedback-panel/feedback-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/footer-panel/footer-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/footer-panel/footer-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/header-panel/header-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/header-panel/header-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/help-panel/help-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/help-panel/help-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/menu-panel/menu-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/menu-panel/menu-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/notifictaions-panel/notifictaions-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/notifictaions-panel/notifictaions-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/panels.module.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/panels.service.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/profile-panel/profile-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/profile-panel/profile-panel.component.html","webpack:///home/schumajr/cosmos/libs/panels/src/lib/settings-panel/settings-panel.component.ts","webpack:///home/schumajr/cosmos/libs/panels/src/lib/settings-panel/settings-panel.component.html","webpack:///home/schumajr/cosmos/libs/ui-navigation/src/index.ts","webpack:///home/schumajr/cosmos/libs/ui-navigation/src/lib/navigation.ts","webpack:///home/schumajr/cosmos/libs/ui-navigation/src/lib/ui-navigation.module.ts","webpack:///home/schumajr/cosmos/libs/ui-navigation/src/lib/ui-navigation.service.ts","webpack:///home/schumajr/cosmos/libs/user-auth/src/index.ts","webpack:///home/schumajr/cosmos/libs/user-auth/src/lib/sign-in-out-button/sign-in-out-button.component.ts","webpack:///home/schumajr/cosmos/libs/user-auth/src/lib/sign-in-out-button/sign-in-out-button.component.html","webpack:///home/schumajr/cosmos/libs/user-auth/src/lib/user-auth.module.ts","webpack:///home/schumajr/cosmos/libs/user-auth/src/lib/user-auth.service.ts","webpack:///home/schumajr/cosmos/libs/user-profiles/src/index.ts","webpack:///home/schumajr/cosmos/libs/user-profiles/src/lib/profile-badge/profile-badge.component.ts","webpack:///home/schumajr/cosmos/libs/user-profiles/src/lib/profile-badge/profile-badge.component.html","webpack:///home/schumajr/cosmos/libs/user-profiles/src/lib/profile-page/profile-page.component.ts","webpack:///home/schumajr/cosmos/libs/user-profiles/src/lib/profile-page/profile-page.component.html","webpack:///home/schumajr/cosmos/libs/user-profiles/src/lib/user-profiles.module.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["ChassisModule","declarations","imports","exports","ChassisService","headerEnabled","headerEnabled$","asObservable","headerVisible","headerVisible$","headerContent","links","headerContent$","footerEnabled","footerEnabled$","footerVisible","footerVisible$","footerContent","footerContent$","sidebarOuterLeftEnabled","sidebarOuterLeftEnabled$","sidebarOuterLeftContent","sidebarOuterLeftContent$","sidebarOuterRightEnabled","sidebarOuterRightEnabled$","sidebarOuterRightContent","sidebarOuterRightContent$","sidebarInnerLeftEnabled","sidebarInnerLeftEnabled$","sidebarInnerLeftContent","sidebarInnerLeftContent$","sidebarInnerRightEnabled","sidebarInnerRightEnabled$","sidebarInnerRightContent","sidebarInnerRightContent$","next","console","log","getValue","sidebarOuterLeft","sidenav","open","close","toggle","sidebarOuterRight","sidebarInnerLeft","sidebarInnerRight","providedIn","ChassisComponent","chassisService","setSidebarOuterLeft","setSidebarOuterRight","setSidebarInnerLeft","setSidebarInnerRight","selector","templateUrl","styleUrls","FooterComponent","environmentService","enabled$","visible$","content$","getEnabled","getVisible","getContent","subscribe","enabled","visible","content","HeaderComponent","userAuthService","appName","toggleSidebarOuterLeft","setsidebarOuterRightContent","toggleSidebarOuterRight","SidebarInnerLeftComponent","title","toggleSidebarInnerLeft","SidebarInnerRightComponent","toggleSidebarInnerRight","SidebarOuterLeftComponent","SidebarOuterRightComponent","EnvironmentModule","EnvironmentService","environment","production","aadClientId","aadAuthority","aadValidateAuthority","aadRedirectUri","aadPostLogoutRedirectUri","aadNavigateToLoginRequestUrl","GuardsModule","RolesGuard","msalService","state","userRoles","getAccount","idToken","roles","allowedRoles","data","matchingRoles","filter","x","includes","length","httpInterceptorProviders","provide","useClass","multi","LoggingInterceptor","req","started","Date","now","ok","handle","pipe","event","error","elapsed","msg","method","urlWithParams","NoopInterceptor","GraphService","authService","http","GRAPH_ENDPOINT","get","_","handleError","operation","result","message","MSGraphServiceModule","NotificationsModule","NotificationsService","notifications","push","HomePageComponent","NotFoundPageComponent","PagesModule","forChild","path","pathMatch","component","AppsMenuPanelComponent","FeedbackPanelComponent","FooterPanelComponent","HeaderPanelComponent","HelpPanelComponent","MenuPanelComponent","navigationService","getSideMenu","getSide","menu","sideMenu","NotifictaionsPanelComponent","PanelsModule","schemas","PanelsService","feedbackPanelEnabled","feedbackPanelEnabled$","feedbackPanelVisible","feedbackPanelVisible$","helpPanelEnabled","helpPanelEnabled$","helpPanelVisible","helpPanelVisible$","menuPanelEnabled","menuPanelEnabled$","menuPanelVisible","menuPanelVisible$","notificationsPanelEnabled","notificationsPanelEnabled$","notificationsPanelVisible","notificationsPanelVisible$","profilePanelEnabled","profilePanelEnabled$","profilePanelVisible","profilePanelVisible$","settingsPanelEnabled","settingsPanelEnabled$","settingsPanelVisible","settingsPanelVisible$","ProfilePanelComponent","graphService","profile$","getProfile","JSON","stringify","profile","SettingsPanelComponent","SIDE","link","name","HEADER","FOOTER","UINavigationModule","UINavigationService","SignInOutButtonComponent","loggedIn","checkoutAccount","loginRedirect","logout","protectedResourceMap","isIE","window","navigator","userAgent","indexOf","MSALConfigFactory","env","auth","clientId","authority","validateAuthority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","MSALAngularConfigFactory","consentScopes","unprotectedResources","extraQueryParameters","UserAuthModule","useFactory","deps","providers","UserAuthService","clientApplication","localStorage","getItem","undefined","accessToken","ProfileBadgeComponent","ProfilePageComponent","account","UserProfilesModule","canActivate","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module","id","routes","loadChildren","m","PingsModule","GoogleGroupsModule","AppRoutingModule","forRoot","useHash","AppComponent","broadcastService","isIframe","setHeaderContent","setFooterContent","parent","opener","handleRedirectCallback","authError","response","errorMessage","setLogger","logLevel","piiEnabled","correlationId","createNewGuid","piiLoggingEnabled","AppModule","useValue","register","bootstrap","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './lib/chassis.module';\nexport * from './lib/chassis.service';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { UserAuthModule } from \"@cosmos/user-auth\";\nimport { UserProfilesModule } from \"@cosmos/user-profiles\";\n\nimport { ChassisComponent } from './chassis/chassis.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\n\nimport { SidebarOuterLeftComponent } from './sidebar-outer-left/sidebar-outer-left.component';\nimport { SidebarOuterRightComponent } from './sidebar-outer-right/sidebar-outer-right.component';\n\nimport { SidebarInnerLeftComponent } from './sidebar-inner-left/sidebar-inner-left.component';\nimport { SidebarInnerRightComponent } from './sidebar-inner-right/sidebar-inner-right.component';\n\n@NgModule({\n  declarations: [\n    ChassisComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarOuterLeftComponent,\n    SidebarOuterRightComponent,\n    SidebarInnerLeftComponent,\n    SidebarInnerRightComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    \n    UserAuthModule,\n    UserProfilesModule\n  ],\n  exports: [\n    ChassisComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarOuterLeftComponent,\n    SidebarOuterRightComponent,\n    SidebarInnerLeftComponent,\n    SidebarInnerRightComponent\n  ]\n})\nexport class ChassisModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { Menu } from \"@cosmos/types\";\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChassisService {\n  private sidebarOuterLeft: MatSidenav;\n  private sidebarOuterRight: MatSidenav;\n\n  private sidebarInnerLeft: MatSidenav;\n  private sidebarInnerRight: MatSidenav;\n\n  private headerEnabled = new BehaviorSubject<boolean>(true);\n  readonly headerEnabled$ = this.headerEnabled.asObservable();\n\n  private headerVisible = new BehaviorSubject<boolean>(false);\n  readonly headerVisible$ = this.headerVisible.asObservable();\n\n  private headerContent = new BehaviorSubject<Menu>({links: []});\n  readonly headerContent$ = this.headerContent.asObservable();\n\n  private footerEnabled = new BehaviorSubject<boolean>(true);\n  readonly footerEnabled$ = this.footerEnabled.asObservable();\n\n  private footerVisible = new BehaviorSubject<boolean>(false);\n  readonly footerVisible$ = this.footerVisible.asObservable();\n\n  private footerContent = new BehaviorSubject<Menu>({links: []});\n  readonly footerContent$ = this.footerContent.asObservable();\n\n  private sidebarOuterLeftEnabled = new BehaviorSubject<boolean>(true);\n  readonly sidebarOuterLeftEnabled$ = this.sidebarOuterLeftEnabled.asObservable();\n\n  private sidebarOuterLeftContent = new BehaviorSubject<string>('');\n  readonly sidebarOuterLeftContent$ = this.sidebarOuterLeftContent.asObservable();\n\n  private sidebarOuterRightEnabled = new BehaviorSubject<boolean>(true);\n  readonly sidebarOuterRightEnabled$ = this.sidebarOuterRightEnabled.asObservable();\n\n  private sidebarOuterRightContent = new BehaviorSubject<string>('');\n  readonly sidebarOuterRightContent$ = this.sidebarOuterRightContent.asObservable();\n\n  private sidebarInnerLeftEnabled = new BehaviorSubject<boolean>(true);\n  readonly sidebarInnerLeftEnabled$ = this.sidebarInnerLeftEnabled.asObservable();\n\n  private sidebarInnerLeftContent = new BehaviorSubject<string>('');\n  readonly sidebarInnerLeftContent$ = this.sidebarInnerLeftContent.asObservable();\n\n  private sidebarInnerRightEnabled = new BehaviorSubject<boolean>(true);\n  readonly sidebarInnerRightEnabled$ = this.sidebarInnerRightEnabled.asObservable();\n\n  private sidebarInnerRightContent = new BehaviorSubject<string>('');\n  readonly sidebarInnerRightContent$ = this.sidebarInnerRightContent.asObservable();\n\n  constructor() { }\n\n  enableHeader(headerEnabled: boolean): void {\n    this.headerEnabled.next(headerEnabled);\n    console.log(`headerEnabled$ set to ${this.headerEnabled.getValue()}`);\n  }\n  showHeader(headerVisible: boolean): void {\n    this.headerVisible.next(headerVisible);\n    console.log(`headerVisible$ set to ${this.headerVisible.getValue()}`);\n  }\n  setHeaderContent(headerContent: Menu): void {\n    this.headerContent.next(headerContent);\n    console.log(`headerContent$ set to ${this.headerContent.getValue()}`)\n  }\n\n  enableFooter(footerEnabled: boolean): void {\n    this.footerEnabled.next(footerEnabled);\n    console.log(`footerEnabled$ set to ${this.footerEnabled.getValue()}`);\n  }\n  showFooter(footerVisible: boolean): void {\n    this.footerVisible.next(footerVisible);\n    console.log(`footerVisible$ set to ${this.footerVisible.getValue()}`);\n  }\n  setFooterContent(footerContent: Menu): void {\n    this.footerContent.next(footerContent);\n    console.log(`footerContent$ set to ${this.footerContent.getValue()}`)\n  }\n\n  enableSidebarOuterLeft(sidebarOuterLeftEnabled: boolean): void {\n    this.sidebarOuterLeftEnabled.next(sidebarOuterLeftEnabled);\n    console.log(`sidebarOuterLeftEnabled$ set to ${this.sidebarOuterLeftEnabled.getValue()}`);\n  }\n  getSidebarOuterLeft(): MatSidenav {\n\t\treturn this.sidebarOuterLeft;\n  }\n  setSidebarOuterLeft(sidenav: MatSidenav) {\n\t\tthis.sidebarOuterLeft = sidenav;\n  }\n  openSidebarOuterLeft() {\n    return this.sidebarOuterLeft.open();\n  }\n  closeSidebarOuterLeft() {\n    return this.sidebarOuterLeft.close();\n  }\n  toggleSidebarOuterLeft(): void {\n    console.log('toggleSidebarOuterLeft');\n    this.sidebarOuterLeft.toggle();\n  }\n  setsidebarOuterLeftContent(sidebarOuterLeftContent: string): void {\n    this.sidebarOuterLeftContent.next(sidebarOuterLeftContent);\n    console.log(`sidebarOuterLeftContent$ set to ${this.sidebarOuterLeftContent.getValue()}`)\n  }\n\n  enableSidebarOuterRight(sidebarOuterRightEnabled: boolean): void {\n    this.sidebarOuterRightEnabled.next(sidebarOuterRightEnabled);\n    console.log(`sidebarOuterRightEnabled$ set to ${this.sidebarOuterRightEnabled.getValue()}`);\n  }\n  getSidebarOuterRight(): MatSidenav {\n\t\treturn this.sidebarOuterRight;\n  }\n  setSidebarOuterRight(sidenav: MatSidenav) {\n\t\tthis.sidebarOuterRight = sidenav;\n  }\n  openSidebarOuterRight() {\n    return this.sidebarOuterRight.open();\n  }\n  closeSidebarOuterRight() {\n    return this.sidebarOuterRight.close();\n  }\n  toggleSidebarOuterRight(): void {\n    console.log('toggleSidebarOuterRight');\n    this.sidebarOuterRight.toggle();\n  }\n  setsidebarOuterRightContent(sidebarOuterRightContent: string): void {\n    this.sidebarOuterRightContent.next(sidebarOuterRightContent);\n    console.log(`sidebarOuterRightContent$ set to ${this.sidebarOuterRightContent.getValue()}`)\n  }\n\n  enableSidebarInnerLeft(sidebarInnerLeftEnabled: boolean): void {\n    this.sidebarInnerLeftEnabled.next(sidebarInnerLeftEnabled);\n    console.log(`sidebarInnerLeftEnabled$ set to ${this.sidebarInnerLeftEnabled.getValue()}`);\n  }\n  getSidebarInnerLeft(): MatSidenav {\n\t\treturn this.sidebarInnerLeft;\n  }\n  setSidebarInnerLeft(sidenav: MatSidenav) {\n\t\tthis.sidebarInnerLeft = sidenav;\n  }\n  openSidebarInnerLeft() {\n    return this.sidebarInnerLeft.open();\n  }\n  closeSidebarInnerLeft() {\n    return this.sidebarInnerLeft.close();\n  }\n  toggleSidebarInnerLeft(): void {\n    console.log('toggleSidebarInnerLeft');\n    this.sidebarInnerLeft.toggle();\n  }\n  setsidebarInnerLeftContent(sidebarInnerLeftContent: string): void {\n    this.sidebarInnerLeftContent.next(sidebarInnerLeftContent);\n    console.log(`sidebarInnerLeftContent$ set to ${this.sidebarInnerLeftContent.getValue()}`)\n  }\n\n  enableSidebarInnerRight(sidebarInnerRightEnabled: boolean): void {\n    this.sidebarInnerRightEnabled.next(sidebarInnerRightEnabled);\n    console.log(`sidebarInnerRightEnabled$ set to ${this.sidebarInnerRightEnabled.getValue()}`);\n  }\n  getSidebarInnerRight(): MatSidenav {\n\t\treturn this.sidebarInnerRight;\n  }\n  setSidebarInnerRight(sidenav: MatSidenav) {\n\t\tthis.sidebarInnerRight = sidenav;\n  }\n  openSidebarInnerRight() {\n    return this.sidebarInnerRight.open();\n  }\n  closeSidebarInnerRight() {\n    return this.sidebarInnerRight.close();\n  }\n  toggleSidebarInnerRight(): void {\n    console.log('toggleSidebarInnerRight');\n    this.sidebarInnerRight.toggle();\n  }\n  setsidebarInnerRightContent(sidebarInnerRightContent: string): void {\n    this.sidebarInnerRightContent.next(sidebarInnerRightContent);\n    console.log(`sidebarInnerRightContent$ set to ${this.sidebarInnerRightContent.getValue()}`)\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ChassisService } from \"../chassis.service\";\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'cosmos-chassis',\n  templateUrl: './chassis.component.html',\n  styleUrls: ['./chassis.component.scss']\n})\nexport class ChassisComponent implements OnInit, AfterViewInit {\n  @ViewChild('sidebarOuterLeft') public sidebarOuterLeft: MatSidenav;\n  @ViewChild('sidebarOuterRight') public sidebarOuterRight: MatSidenav;\n  @ViewChild('sidebarInnerLeft') public sidebarInnerLeft: MatSidenav;\n  @ViewChild('sidebarInnerRight') public sidebarInnerRight: MatSidenav;\n\n  constructor(\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    console.log('init chassis');\n  }\n\n  ngAfterViewInit(): void {\n    this.chassisService.setSidebarOuterLeft(this.sidebarOuterLeft);\n    this.chassisService.setSidebarOuterRight(this.sidebarOuterRight);\n    this.chassisService.setSidebarInnerLeft(this.sidebarInnerLeft);\n    this.chassisService.setSidebarInnerRight(this.sidebarInnerRight);\n  }\n\n}\n","<ng-container>\n  <mat-sidenav-container fullscreen [hasBackdrop]=\"false\" class=\"console-container\">\n\n    <mat-sidenav #sidebarOuterLeft mode=\"over\" position=\"start\" fixedInViewport=\"false\" closed>\n      <cosmos-sidebar-outer-left></cosmos-sidebar-outer-left>\n    </mat-sidenav>\n\n    <mat-sidenav #sidebarOuterRight mode=\"over\" position=\"end\" fixedInViewport=\"false\" closed>\n      <cosmos-sidebar-outer-right></cosmos-sidebar-outer-right>\n    </mat-sidenav>\n\n    <mat-sidenav-content id=\"console\" class=\"console-content\">\n      <cosmos-header></cosmos-header>\n\n      <mat-sidenav-container [hasBackdrop]=\"false\" class=\"main-container\">\n        <mat-sidenav #sidebarInnerLeft mode=\"over\" position=\"start\" fixedInViewport=\"false\" closed>\n          <cosmos-sidebar-inner-left></cosmos-sidebar-inner-left>\n        </mat-sidenav>\n    \n        <mat-sidenav #sidebarInnerRight mode=\"over\" position=\"end\" fixedInViewport=\"false\" closed>\n          <cosmos-sidebar-inner-right></cosmos-sidebar-inner-right>\n        </mat-sidenav>\n    \n        <mat-sidenav-content id=\"main\" class=\"main-content\">\n\n          <router-outlet></router-outlet>\n\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n\n      <cosmos-footer></cosmos-footer>\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { EnvironmentService } from \"@cosmos/environment\";\nimport { ChassisService } from '../chassis.service';\n\nimport { Menu } from '@cosmos/types';\n\n@Component({\n  selector: 'cosmos-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  enabled: boolean;\n  enabled$ = this.chassisService.footerEnabled$;\n\n  visible: boolean;\n  visible$ = this.chassisService.footerVisible$;\n\n  content: Menu;\n  content$ = this.chassisService.footerContent$;\n\n  footerMenu: Menu;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getVisible();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`footer enabled: ${this.enabled}`);\n  }\n\n  getVisible(): void {\n    this.visible$.subscribe(visible => \n      this.visible = visible\n    );\n    console.log(`footer visible: ${this.visible}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`footer content: ${this.content}`);\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n  <footer class=\"footer\" [class.showFooter]=\"visible\" [class.hideFooter]=\"visible === false\">\n    <mat-toolbar color=\"primary\" class='mat-toolbar-single-row'>\n\n      <button mat-icon-button [matMenuTriggerFor]=\"appsMenu\">\n        <mat-icon>apps</mat-icon>\n      </button>\n      <mat-menu #appsMenu=\"matMenu\" backdropClass=\"customWaffle\">\n        <button mat-menu-item>\n          <mat-icon>dialpad</mat-icon>\n          <span>Houston</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>bar_chart</mat-icon>\n          <span>Viewfinder</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>all_inclusive</mat-icon>\n          <span>Codex</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>scatter_plot</mat-icon>\n          <span>Sorting Hat</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>voicemail</mat-icon>\n          <span>Panama</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>school</mat-icon>\n          <span>Flenderson</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>school</mat-icon>\n          <span>Skinner</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>notifications_off</mat-icon>\n          <span>H.A.G.A.R.</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>notifications_off</mat-icon>\n          <span>I.G.O.R.</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>notifications_off</mat-icon>\n          <span>R.A.D.A.R.</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>mediation</mat-icon>\n          <span>Flynn</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>share</mat-icon>\n          <span>Relay</span>\n        </button>\n        <button mat-menu-item>\n          <mat-icon>dialpad</mat-icon>\n          <span>Skyline</span>\n        </button>\n      </mat-menu>\n\n      <button mat-icon-button [matMenuTriggerFor]=\"statusMenu\">\n        <mat-icon class=\"material-icons-outlined\">visibility</mat-icon>\n      </button>\n      <mat-menu #statusMenu=\"matMenu\" backdropClass=\"customWaffle\">\n        <button mat-menu-item routerLink=\"/ping\">\n          <mat-icon class=\"material-icons-outlined\">contactless</mat-icon>\n          <span>Ping!</span>\n        </button>\n      </mat-menu>\n\n      <span class=\"footer-spacer\"></span>\n\n      <ul *ngFor=\"let link of content.links\">\n          <li routerLink=\"{{ link.link }}\">{{ link.name }}</li>\n      </ul>\n\n      <span class=\"release-number\">Release 20.36</span>\n\n    </mat-toolbar>\n  </footer>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { EnvironmentService } from \"@cosmos/environment\";\nimport { ChassisService } from '../chassis.service';\n\nimport { Menu } from \"@cosmos/types\";\nimport { UserAuthService } from '@cosmos/user-auth';\n\n@Component({\n  selector: 'cosmos-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  appName = this.environmentService.appName;\n\n  enabled: boolean;\n  enabled$ = this.chassisService.headerEnabled$;\n\n  visible: boolean;\n  visible$ = this.chassisService.headerVisible$;\n\n  content: Menu;\n  content$ = this.chassisService.headerContent$;\n\n  headerMenu: Menu;\n\n  constructor(\n    private userAuthService: UserAuthService,\n    private environmentService: EnvironmentService,\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getVisible();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`header enabled: ${this.enabled}`);\n  }\n\n  getVisible(): void {\n    this.visible$.subscribe(visible => \n      this.visible = visible\n    );\n    console.log(`header visible: ${this.visible}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`header content: ${this.content}`);\n  }\n\n  toggleSidebarOuterLeft() {\n    this.chassisService.toggleSidebarOuterLeft();\n    console.log('toggle sidebarOuterLeft');\n  }\n\n  toggleNotificationsPanel() {\n    this.chassisService.setsidebarOuterRightContent('Notifications');\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n\n  toggleHelpPanel() {\n    this.chassisService.setsidebarOuterRightContent('Help');\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n\n  toggleFeedbackPanel() {\n    this.chassisService.setsidebarOuterRightContent('Feedback');\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n\n  toggleSettingsPanel() {\n    this.chassisService.setsidebarOuterRightContent('Settings');\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n\n  toggleAccountPanel() {\n    this.chassisService.setsidebarOuterRightContent('Account');\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n    <header class=\"header\" [class.showHeader]=\"visible\" [class.hideHeader]=\"visible === false\">\n        <mat-toolbar>\n\n            <button mat-icon-button class=\"material-icons\" (click)=\"toggleSidebarOuterLeft()\">\n                <mat-icon>menu</mat-icon>\n            </button>\n\n            <span class=\"header-spacer\"></span>\n\n            <span><a id=\"headerTitle\" routerLink=\"/\">{{ appName }}</a></span>\n\n            <span class=\"header-spacer\"></span>\n\n            <button mat-icon-button class=\"material-icons\" (click)=\"toggleNotificationsPanel()\">\n                <mat-icon class=\"material-icons-outlined\">notifications</mat-icon>\n            </button>\n\n            <button mat-icon-button class=\"material-icons\" (click)=\"toggleHelpPanel()\">\n                <mat-icon class=\"material-icons-outlined\">help_outline</mat-icon>\n            </button>\n\n            <button mat-icon-button class=\"material-icons\" (click)=\"toggleFeedbackPanel()\">\n                <mat-icon class=\"material-icons-outlined\">feedback</mat-icon>\n            </button>\n\n            <button mat-icon-button class=\"material-icons\" (click)=\"toggleSettingsPanel()\">\n                <mat-icon class=\"material-icons-outlined\">settings</mat-icon>\n            </button>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"accountMenu\">\n                <mat-icon class=\"material-icons-outlined\">account_circle</mat-icon>\n            </button>\n            <mat-menu #accountMenu=\"matMenu\" backdropClass=\"customWaffle\">\n                <button mat-menu-item routerLink=\"/profile\">\n                    <mat-icon class=\"material-icons-outlined\">account_circle</mat-icon>\n                    <span>Profile</span>\n                </button>\n                <button mat-menu-item>\n                    <span><cosmos-sign-in-out-button></cosmos-sign-in-out-button></span>\n                </button>\n            </mat-menu>\n        \n        </mat-toolbar>\n    </header>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\nimport { ChassisService } from '../chassis.service';\n\n@Component({\n  selector: 'cosmos-sidebar-inner-left',\n  templateUrl: './sidebar-inner-left.component.html',\n  styleUrls: ['./sidebar-inner-left.component.scss']\n})\nexport class SidebarInnerLeftComponent implements OnInit {\n  public title = 'Panel Title';\n\n  enabled: boolean;\n  enabled$ = this.chassisService.sidebarInnerLeftEnabled$;\n\n  content: string;\n  content$ = this.chassisService.sidebarInnerLeftContent$;\n\n  constructor(\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`sidebar-inner-left enabled: ${this.enabled}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`sidebar-inner-left content: ${this.content}`);\n  }\n\n  toggleSidebarInnerLeft() {\n    this.chassisService.toggleSidebarInnerLeft();\n    console.log('toggle sidebarInnerLeft');\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n    <mat-toolbar>\n  \n      {{title}}\n  \n      <span class=\"toolbar-spacer\"></span>\n  \n      <button mat-button (click)=\"toggleSidebarInnerLeft()\">\n        <mat-icon>close</mat-icon>\n      </button>\n  \n    </mat-toolbar>\n  \n    {{content}}\n  \n  </ng-container>\n  ","import { Component, OnInit } from '@angular/core';\n\nimport { ChassisService } from '../chassis.service';\n\n@Component({\n  selector: 'cosmos-sidebar-inner-right',\n  templateUrl: './sidebar-inner-right.component.html',\n  styleUrls: ['./sidebar-inner-right.component.scss']\n})\nexport class SidebarInnerRightComponent implements OnInit {\n  public title = 'Panel Title';\n\n  enabled: boolean;\n  enabled$ = this.chassisService.sidebarInnerRightEnabled$;\n\n  content: string;\n  content$ = this.chassisService.sidebarInnerRightContent$;\n\n  constructor(\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`sidebar-inner-right enabled: ${this.enabled}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`sidebar-inner-right content: ${this.content}`);\n  }\n\n  toggleSidebarInnerRight() {\n    this.chassisService.toggleSidebarInnerRight();\n    console.log('toggle sidebarInnerRight');\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n  <mat-toolbar>\n\n    {{title}}\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <button mat-button (click)=\"toggleSidebarInnerRight()\">\n      <mat-icon>close</mat-icon>\n    </button>\n\n  </mat-toolbar>\n\n  {{content}}\n\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ChassisService } from '../chassis.service';\n\n@Component({\n  selector: 'cosmos-sidebar-outer-left',\n  templateUrl: './sidebar-outer-left.component.html',\n  styleUrls: ['./sidebar-outer-left.component.scss']\n})\nexport class SidebarOuterLeftComponent implements OnInit {\n  public title = 'Panel Title';\n\n  enabled: boolean;\n  enabled$ = this.chassisService.sidebarOuterLeftEnabled$;\n\n  content: string;\n  content$ = this.chassisService.sidebarOuterLeftContent$;\n\n  constructor(\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`sidebar-outer-left enabled: ${this.enabled}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`sidebar-outer-left content: ${this.content}`);\n  }\n\n  toggleSidebarOuterLeft() {\n    this.chassisService.toggleSidebarOuterLeft();\n    console.log('toggle sidebarOuterLeft');\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n  <mat-toolbar>\n\n    {{title}}\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <button mat-button (click)=\"toggleSidebarOuterLeft()\">\n      <mat-icon>close</mat-icon>\n    </button>\n\n  </mat-toolbar>\n\n  {{content}}\n\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ChassisService } from '../chassis.service';\n\n@Component({\n  selector: 'cosmos-sidebar-outer-right',\n  templateUrl: './sidebar-outer-right.component.html',\n  styleUrls: ['./sidebar-outer-right.component.scss']\n})\nexport class SidebarOuterRightComponent implements OnInit {\n  public title = 'Panel Title';\n\n  enabled: boolean;\n  enabled$ = this.chassisService.sidebarOuterRightEnabled$;\n\n  content: string;\n  content$ = this.chassisService.sidebarOuterRightContent$;\n\n  constructor(\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getEnabled();\n    this.getContent();\n  }\n\n  getEnabled(): void {\n    this.enabled$.subscribe(enabled => \n      this.enabled = enabled\n    );\n    console.log(`sidebar-outer-right enabled: ${this.enabled}`);\n  }\n\n  getContent(): void {\n    this.content$.subscribe(content => \n      this.content = content\n    );\n    console.log(`sidebar-outer-right content: ${this.content}`);\n  }\n\n  toggleSidebarOuterRight() {\n    this.chassisService.toggleSidebarOuterRight();\n    console.log('toggle sidebarOuterRight');\n  }\n}\n","<ng-container *ngIf=\"enabled\">\n  <mat-toolbar>\n\n    {{title}}\n\n    <span class=\"toolbar-spacer\"></span>\n\n    <button mat-button (click)=\"toggleSidebarOuterRight()\">\n      <mat-icon>close</mat-icon>\n    </button>\n\n  </mat-toolbar>\n\n  {{content}}\n\n</ng-container>\n","export * from './lib/environment.module';\nexport * from './lib/environment.service';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class EnvironmentModule {}\n","import { Injectable } from '@angular/core';\nimport { Environment } from \"@cosmos/types\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentService {\n  readonly production: boolean;\n  readonly appName: string;\n\n  readonly aadClientId: string;\n  readonly aadAuthority: string;\n  readonly aadValidateAuthority: boolean;\n  readonly aadRedirectUri: string;\n  readonly aadPostLogoutRedirectUri: string;\n  readonly aadNavigateToLoginRequestUrl: boolean;\n\n  constructor(environment: Environment) {\n    this.production = environment.production;\n    this.appName= environment.appName;\n\n    this.aadClientId = environment.aadClientId;\n    this.aadAuthority = environment.aadAuthority;\n    this.aadValidateAuthority = environment.aadValidateAuthority;\n    this.aadRedirectUri = environment.aadRedirectUri;\n    this.aadPostLogoutRedirectUri = environment.aadPostLogoutRedirectUri;\n    this.aadNavigateToLoginRequestUrl = environment.aadNavigateToLoginRequestUrl;\n  }\n}\n","export * from './lib/guards.module';\nexport * from './lib/roles.guard';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class GuardsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MsalService } from \"@azure/msal-angular\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesGuard implements CanActivate {\n\n  constructor(private msalService: MsalService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const userRoles = (this.msalService.getAccount().idToken as any).roles;\n    const allowedRoles = next.data[\"roles\"];\n    const matchingRoles = userRoles.filter(x => allowedRoles.includes(x));\n    return matchingRoles.length > 0;\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MsalInterceptor } from '@azure/msal-angular';\n\nimport { NoopInterceptor } from './lib/noop-interceptor';\nimport { LoggingInterceptor } from './lib/logging-interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: MsalInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: NoopInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\n];","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { finalize, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const started = Date.now();\n    let ok: string;\n\n    // extend server response observable with logging\n    return next.handle(req)\n      .pipe(\n        tap(\n          // Succeeds when there is a response; ignore other events\n          event => ok = event instanceof HttpResponse ? 'succeeded' : '',\n          // Operation failed; error is an HttpErrorResponse\n          error => ok = 'failed'\n        ),\n        // Log when response observable either completes or errors\n        finalize(() => {\n          const elapsed = Date.now() - started;\n          const msg = `${req.method} \"${req.urlWithParams}\"\n             ${ok} in ${elapsed} ms.`;\n          console.log(msg);\n        })\n      );\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class NoopInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    console.log('noop interceptor fired');\n    return next.handle(req);\n  }\n}\n","export * from './lib/msgraph-service.module';\nexport * from './lib/graph.service';","import { Injectable } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\nimport { User } from \"@microsoft/microsoft-graph-types\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { MSGraphServiceModule } from './msgraph-service.module';\n\n@Injectable({\n  providedIn: MSGraphServiceModule\n})\nexport class GraphService {\n\n  constructor(\n    private authService: MsalService,\n    private http: HttpClient\n  ) { }\n\n  getProfile(): Observable<User> {\n    this.log('getProfile()');\n    const GRAPH_ENDPOINT = 'https://graph.microsoft.com/v1.0/me';\n\n    return this.http.get<User>(GRAPH_ENDPOINT)\n      .pipe(\n        tap(_ => this.log('fetched profile')),\n        catchError(this.handleError<User>('getProfile'))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    console.log(`GraphService: ${message}`);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class MSGraphServiceModule {\n\n}\n","export * from './lib/notifications.module';\nexport * from './lib/notifications.service';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class NotificationsModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  notifications: string[] = [];\n\n  add(message: string) {\n    this.notifications.push(message);\n  }\n\n  clear() {\n    this.notifications = [];\n  }\n}","export * from './lib/pages.module';\n","import { Component, OnInit } from '@angular/core';\n\nimport { EnvironmentService } from \"@cosmos/environment\";\n\n@Component({\n  selector: 'cosmos-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n  title = this.environmentService.appName;\n\n  constructor(\n    private environmentService: EnvironmentService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>{{ title }}</h1>\n\n<cosmos-sign-in-out-button></cosmos-sign-in-out-button>\n\n<div>\n    <button routerLink=\"/google/groups/list\">Google Groups</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found-page works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { UserAuthModule, UserAuthService } from \"@cosmos/user-auth\";\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\n\n@NgModule({\n  declarations: [\n    HomePageComponent,\n    NotFoundPageComponent\n  ],\n  imports: [\n    CommonModule,\n    UserAuthModule,\n\n    RouterModule.forChild([\n      {path: '', pathMatch: 'full', component: HomePageComponent},\n      {path: '**', pathMatch: 'full', component: NotFoundPageComponent}\n    ])\n  ],\n  exports: [\n    HomePageComponent,\n    NotFoundPageComponent\n  ]\n})\nexport class PagesModule {}\n","export * from './lib/panels.module';\nexport * from './lib/panels.service';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-apps-menu-panel',\n  templateUrl: './apps-menu-panel.component.html',\n  styleUrls: ['./apps-menu-panel.component.scss']\n})\nexport class AppsMenuPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>apps-menu-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-feedback-panel',\n  templateUrl: './feedback-panel.component.html',\n  styleUrls: ['./feedback-panel.component.scss']\n})\nexport class FeedbackPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>feedback-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-footer-panel',\n  templateUrl: './footer-panel.component.html',\n  styleUrls: ['./footer-panel.component.scss']\n})\nexport class FooterPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-header-panel',\n  templateUrl: './header-panel.component.html',\n  styleUrls: ['./header-panel.component.scss']\n})\nexport class HeaderPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-help-panel',\n  templateUrl: './help-panel.component.html',\n  styleUrls: ['./help-panel.component.scss']\n})\nexport class HelpPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>help-panel works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Menu } from \"@cosmos/types\";\n\nimport { ChassisService } from \"@cosmos/chassis\";\nimport { UINavigationService } from \"@cosmos/ui-navigation\";\n\n@Component({\n  selector: 'cosmos-menu-panel',\n  templateUrl: './menu-panel.component.html',\n  styleUrls: ['./menu-panel.component.scss']\n})\nexport class MenuPanelComponent implements OnInit {\n  sideMenu: Menu;\n\n  constructor(\n    private navigationService: UINavigationService,\n    private chassisService: ChassisService\n  ) { }\n\n  ngOnInit(): void {\n    this.getSideMenu();\n  }\n\n  getSideMenu(): void {\n    this.navigationService.getSide().subscribe(menu =>\n      this.sideMenu = menu\n    );\n  }\n}\n","    <ul *ngFor=\"let link of sideMenu.links\">\n      <li><a routerLink=\"{{ link.link }}\">{{ link.name }}</a></li>\n    </ul>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-notifictaions-panel',\n  templateUrl: './notifictaions-panel.component.html',\n  styleUrls: ['./notifictaions-panel.component.scss']\n})\nexport class NotifictaionsPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>notifictaions-panel works!</p>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FeedbackPanelComponent } from './feedback-panel/feedback-panel.component';\nimport { HelpPanelComponent } from './help-panel/help-panel.component';\nimport { MenuPanelComponent } from './menu-panel/menu-panel.component';\nimport { NotifictaionsPanelComponent } from './notifictaions-panel/notifictaions-panel.component';\nimport { ProfilePanelComponent } from './profile-panel/profile-panel.component';\nimport { SettingsPanelComponent } from './settings-panel/settings-panel.component';\nimport { FooterPanelComponent } from './footer-panel/footer-panel.component';\nimport { HeaderPanelComponent } from './header-panel/header-panel.component';\nimport { AppsMenuPanelComponent } from './apps-menu-panel/apps-menu-panel.component';\n\n@NgModule({\n  declarations: [\n    FeedbackPanelComponent,\n    HelpPanelComponent,\n    MenuPanelComponent,\n    NotifictaionsPanelComponent,\n    ProfilePanelComponent,\n    SettingsPanelComponent,\n    FooterPanelComponent,\n    HeaderPanelComponent,\n    AppsMenuPanelComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    FeedbackPanelComponent,\n    HelpPanelComponent,\n    MenuPanelComponent,\n    NotifictaionsPanelComponent,\n    ProfilePanelComponent,\n    SettingsPanelComponent,\n    FooterPanelComponent,\n    HeaderPanelComponent,\n    AppsMenuPanelComponent\n  ]\n})\nexport class PanelsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PanelsService {\n  private feedbackPanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly feedbackPanelEnabled$ = this.feedbackPanelEnabled.asObservable();\n\n  private feedbackPanelVisible = new BehaviorSubject<boolean>(false);\n  readonly feedbackPanelVisible$ = this.feedbackPanelVisible.asObservable();\n\n  private helpPanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly helpPanelEnabled$ = this.helpPanelEnabled.asObservable();\n\n  private helpPanelVisible = new BehaviorSubject<boolean>(false);\n  readonly helpPanelVisible$ = this.helpPanelVisible.asObservable();\n\n  private menuPanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly menuPanelEnabled$ = this.menuPanelEnabled.asObservable();\n\n  private menuPanelVisible = new BehaviorSubject<boolean>(false);\n  readonly menuPanelVisible$ = this.menuPanelVisible.asObservable();\n\n  private notificationsPanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly notificationsPanelEnabled$ = this.notificationsPanelEnabled.asObservable();\n\n  private notificationsPanelVisible = new BehaviorSubject<boolean>(false);\n  readonly notificationsPanelVisible$ = this.notificationsPanelVisible.asObservable();\n\n  private profilePanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly profilePanelEnabled$ = this.profilePanelEnabled.asObservable();\n\n  private profilePanelVisible = new BehaviorSubject<boolean>(false);\n  readonly profilePanelVisible$ = this.profilePanelVisible.asObservable();\n\n  private settingsPanelEnabled = new BehaviorSubject<boolean>(false);\n  readonly settingsPanelEnabled$ = this.settingsPanelEnabled.asObservable();\n\n  private settingsPanelVisible = new BehaviorSubject<boolean>(false);\n  readonly settingsPanelVisible$ = this.settingsPanelVisible.asObservable();\n\n  constructor() { }\n\n  enableFeedbackPanel(feedbackPanelEnabled: boolean): void {\n    this.feedbackPanelEnabled.next(feedbackPanelEnabled);\n    console.log(`feedbackPanelEnabled$ set to ${this.feedbackPanelEnabled.getValue()}`);\n  }\n  showFeedbackPanel(feedbackPanelVisible: boolean): void {\n    this.feedbackPanelVisible.next(feedbackPanelVisible);\n    console.log(`feedbackPanelVisible$ set to ${this.feedbackPanelVisible.getValue()}`);\n  }\n\n  enableHelpPanel(helpPanelEnabled: boolean): void {\n    this.helpPanelEnabled.next(helpPanelEnabled);\n    console.log(`helpPanelEnabled$ set to ${this.helpPanelEnabled.getValue()}`);\n  }\n  showHelpPanel(helpPanelVisible: boolean): void {\n    this.helpPanelVisible.next(helpPanelVisible);\n    console.log(`helpPanelVisible$ set to ${this.helpPanelVisible.getValue()}`);\n  }\n\n  enableMenuPanel(menuPanelEnabled: boolean): void {\n    this.menuPanelEnabled.next(menuPanelEnabled);\n    console.log(`menuPanelEnabled$ set to ${this.menuPanelEnabled.getValue()}`);\n  }\n  showMenuPanel(menuPanelVisible: boolean): void {\n    this.menuPanelVisible.next(menuPanelVisible);\n    console.log(`menuPanelVisible$ set to ${this.menuPanelVisible.getValue()}`);\n  }\n\n  enableNotificationsPanel(notificationsPanelEnabled: boolean): void {\n    this.notificationsPanelEnabled.next(notificationsPanelEnabled);\n    console.log(`notificationsPanelEnabled$ set to ${this.notificationsPanelEnabled.getValue()}`);\n  }\n  showNotificationsPanel(notificationsPanelVisible: boolean): void {\n    this.notificationsPanelVisible.next(notificationsPanelVisible);\n    console.log(`notificationsPanelVisible$ set to ${this.notificationsPanelVisible.getValue()}`);\n  }\n\n  enableProfilePanel(profilePanelEnabled: boolean): void {\n    this.profilePanelEnabled.next(profilePanelEnabled);\n    console.log(`profilePanelEnabled$ set to ${this.profilePanelEnabled.getValue()}`);\n  }\n  showProfilePanel(profilePanelVisible: boolean): void {\n    this.profilePanelVisible.next(profilePanelVisible);\n    console.log(`profilePanelVisible$ set to ${this.profilePanelVisible.getValue()}`);\n  }\n\n  enableSettingsPanel(settingsPanelEnabled: boolean): void {\n    this.settingsPanelEnabled.next(settingsPanelEnabled);\n    console.log(`settingsPanelEnabled$ set to ${this.settingsPanelEnabled.getValue()}`);\n  }\n  showSettingsPanel(settingsPanelVisible: boolean): void {\n    this.settingsPanelVisible.next(settingsPanelVisible);\n    console.log(`settingsPanelVisible$ set to ${this.settingsPanelVisible.getValue()}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport '@microsoft/mgt/dist/es6/components/mgt-person/mgt-person';\nimport { User } from \"@microsoft/microsoft-graph-types\";\nimport { GraphService } from '@cosmos/msgraph-service';\n\n@Component({\n  selector: 'cosmos-profile-panel',\n  templateUrl: './profile-panel.component.html',\n  styleUrls: ['./profile-panel.component.scss'],\n})\nexport class ProfilePanelComponent implements OnInit {\n  profile: User;\n  profile$ = this.graphService.getProfile();\n\n  constructor(\n    private graphService: GraphService\n  ) { }\n\n  ngOnInit(): void {\n    this.getProfile();\n  }\n\n  profileString() {\n    return JSON.stringify(this.profile);\n  }\n\n  getProfile() {\n    this.profile$.subscribe(profile => \n      this.profile = profile\n    );\n  }\n}\n","<p>\n    Welcome {{profile?.displayName}}\n</p>\n<pre>\n    {{profileString()}}\n</pre>\n\n<mgt-person [personDetails]=\"profile\" show-name show-email></mgt-person>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-settings-panel',\n  templateUrl: './settings-panel.component.html',\n  styleUrls: ['./settings-panel.component.scss']\n})\nexport class SettingsPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings-panel works!</p>\n","export * from './lib/ui-navigation.module';\nexport * from './lib/ui-navigation.service';\nexport * from './lib/navigation';\n``","import { Menu } from \"@cosmos/types\";\n\nexport const SIDE: Menu = {\n    links: [\n        {\n            link: '/people-set-definitions',\n            name: 'Definitions'\n        },\n        {\n            link: '/people-set-memberships',\n            name: 'Memberships'\n        }\n    ]\n};\n\nexport const HEADER: Menu = {\n    links: [\n        {\n            link: '/sets',\n            name: 'Sets'\n        },\n        {\n            link: '/people-set-definitions',\n            name: 'Definitions'\n        },\n        {\n            link: '/people-set-memberships',\n            name: 'Memberships'\n        }\n    ]\n};\n\nexport const FOOTER: Menu = {\n    links: [\n        {\n            link: 'http://localhost:4270',\n            name: 'Skyline'\n        },\n        {\n            link: 'http://localhost:4276',\n            name: 'Sorting Hat'\n        },\n        {\n            link: 'http://localhost:4290',\n            name: 'Viewfinder'\n        }\n    ]\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  ]\n})\nexport class UINavigationModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { Menu } from \"@cosmos/types\";\nimport { FOOTER } from \"./navigation\";\nimport { HEADER } from \"./navigation\";\nimport { SIDE } from \"./navigation\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UINavigationService {\n  constructor() { }\n\n  getFooter(): Observable<Menu> {\n    return of(FOOTER);\n  }\n\n  getHeader(): Observable<Menu> {\n    return of(HEADER);\n  }\n\n  getSide(): Observable<Menu> {\n    return of(SIDE);\n  }\n}\n","export * from './lib/user-auth.module';\nexport * from './lib/user-auth.service';","import { Component, OnInit } from '@angular/core';\nimport { MsalService } from '@azure/msal-angular';\n\n@Component({\n  selector: 'cosmos-sign-in-out-button',\n  templateUrl: './sign-in-out-button.component.html',\n  styleUrls: ['./sign-in-out-button.component.scss']\n})\nexport class SignInOutButtonComponent implements OnInit {\n  loggedIn = false;\n\n  constructor(\n    private authService: MsalService\n  ) { }\n\n  ngOnInit(): void {\n    this.checkoutAccount();\n  }\n\n  checkoutAccount() {\n    this.loggedIn = !!this.authService.getAccount();\n  }\n\n  login() {\n    this.authService.loginRedirect();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\n<button *ngIf=\"loggedIn\" (click)=\"logout()\">Logout</button>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EnvironmentService } from \"@cosmos/environment\";\nimport { GraphService } from '@cosmos/msgraph-service';\n\nimport { SignInOutButtonComponent } from './sign-in-out-button/sign-in-out-button.component';\n\nimport {\n  MsalModule,\n  MsalInterceptor,\n  MSAL_CONFIG,\n  MSAL_CONFIG_ANGULAR,\n  MsalService,\n  MsalAngularConfiguration\n} from '@azure/msal-angular';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { Configuration } from 'msal';\n\nexport const protectedResourceMap: [string, string[]][] = [\n  ['https://wrdsb-codex.azurewebsites.net/api/ping', [ 'https://wrdsb-codex.azurewebsites.net/user_impersonation' ]],\n  ['https://wrdsb-codex.azurewebsites.net/api/igor-groups-groups-search', [ 'https://wrdsb-codex.azurewebsites.net/user_impersonation' ]],\n\n  ['https://wrdsb-igor3.azurewebsites.net/api/ping', [ 'https://wrdsb-igor3.azurewebsites.net/user_impersonation' ]],\n  ['https://wrdsb-igor3.azurewebsites.net/api/group-query', [ 'https://wrdsb-igor3.azurewebsites.net/user_impersonation' ]],\n\n  ['https://wrdsb-hagar.azurewebsites.net/api/ping', [ 'https://wrdsb-hagar.azurewebsites.net/user_impersonation' ]],\n  ['https://wrdsb-hagar.azurewebsites.net/api/aad-group-query', [ 'https://wrdsb-hagar.azurewebsites.net/user_impersonation' ]],\n\n  ['https://graph.microsoft.com/v1.0/me', ['user.read']]\n];\n\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\n\nfunction MSALConfigFactory(env: EnvironmentService): Configuration {\n  return {\n    auth: {\n      clientId: env.aadClientId,\n      authority: env.aadAuthority,\n      validateAuthority: env.aadValidateAuthority,\n      redirectUri: env.aadRedirectUri,\n      postLogoutRedirectUri: env.aadPostLogoutRedirectUri,\n      navigateToLoginRequestUrl: env.aadNavigateToLoginRequestUrl\n    },\n    cache: {\n      cacheLocation: \"localStorage\",\n      storeAuthStateInCookie: isIE, // set to true for IE 11\n    },\n  };\n}\n\nfunction MSALAngularConfigFactory(): MsalAngularConfiguration {\n  return {\n    //popUp: !isIE,\n    consentScopes: [\n      \"user.read\",\n      \"openid\",\n      \"profile\"\n    ],\n    unprotectedResources: [\"https://www.microsoft.com/en-us/\"],\n    protectedResourceMap,\n    extraQueryParameters: {}\n  };\n}\n\n@NgModule({\n  declarations: [\n    SignInOutButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    MsalModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    GraphService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true\n    },\n    {\n      provide: MSAL_CONFIG,\n      useFactory: MSALConfigFactory,\n      deps: [ EnvironmentService ]\n    },\n    {\n      provide: MSAL_CONFIG_ANGULAR,\n      useFactory: MSALAngularConfigFactory\n    },\n    MsalService\n  ],\n  exports: [\n    SignInOutButtonComponent\n  ]\n})\nexport class UserAuthModule {}\n","import { Injectable } from '@angular/core';\nimport * as Msal from 'msal';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n  private accessToken: any;\n  public clientApplication: Msal.UserAgentApplication = null;\n\n  constructor() {}\n\n  public getAccessToken(): Observable<any> {\n    console.log('getting access token...');\n    if (\n      localStorage.getItem('msal.idtoken') !== undefined &&\n      localStorage.getItem('msal.idtoken') != null\n    ) {\n      this.accessToken = localStorage.getItem('msal.idtoken');\n      console.log(`access token: ${this.accessToken}`);\n    }\n    return this.accessToken;\n  }\n}\n","export * from './lib/user-profiles.module';\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from \"@microsoft/microsoft-graph-types\";\nimport { GraphService } from '@cosmos/msgraph-service';\n\nimport '@microsoft/mgt/dist/es6/components/mgt-person/mgt-person';\n\n@Component({\n  selector: 'cosmos-profile-badge',\n  templateUrl: './profile-badge.component.html',\n  styleUrls: ['./profile-badge.component.scss']\n})\nexport class ProfileBadgeComponent implements OnInit {\n  profile: User;\n  profile$ = this.graphService.getProfile();\n\n  constructor(\n    private graphService: GraphService\n  ) { }\n\n  ngOnInit(): void {\n    this.getProfile();\n  }\n\n  getProfile() {\n    this.profile$.subscribe(profile => \n      this.profile = profile\n    );\n  }\n}\n","<a id=\"profileLink\" [routerLink]=\"['profile']\"><mgt-person id=\"profileBadge\" [personDetails]=\"profile\" show-name show-email></mgt-person></a>\n","import { Component, OnInit } from '@angular/core';\nimport '@microsoft/mgt/dist/es6/components/mgt-person/mgt-person';\nimport { User } from \"@microsoft/microsoft-graph-types\";\nimport { GraphService } from '@cosmos/msgraph-service';\nimport { MsalService } from '@azure/msal-angular';\n\n@Component({\n  selector: 'cosmos-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit {\n  profile: User;\n  profile$ = this.graphService.getProfile();\n  roles;\n\n  constructor(\n    private msalService: MsalService,\n    private graphService: GraphService\n  ) { }\n\n  ngOnInit(): void {\n    this.getProfile();\n    const account = this.msalService.getAccount();\n    this.roles = account.idToken.roles;\n  }\n\n  profileString() {\n    return JSON.stringify(this.profile);\n  }\n\n  getProfile() {\n    this.profile$.subscribe(profile => \n      this.profile = profile\n    );\n  }\n}\n","<p>\n  Welcome {{profile?.displayName}}\n</p>\n<p>\n  {{profileString()}}\n</p>\n\n<div>{{profile?.businessPhones}}</div>\n<div>{{profile?.displayName}}</div>\n<div>{{profile?.givenName}}</div>\n<div>{{profile?.jobTitle}}</div>\n<div>{{profile?.mail}}</div>\n<div>{{profile?.mobilePhone}}</div>\n<div>{{profile?.officeLocation}}</div>\n<div>{{profile?.preferredLanguage}}</div>\n<div>{{profile?.surname}}</div>\n<div>{{profile?.userPrincipalName}}</div>\n<div>{{profile?.id}}</div>\n<div>{{roles}}</div>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MsalGuard } from '@azure/msal-angular';\nimport { RolesGuard } from \"@cosmos/guards\";\n\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\nimport { ProfileBadgeComponent } from './profile-badge/profile-badge.component';\n\n@NgModule({\n  declarations: [\n    ProfilePageComponent,\n    ProfileBadgeComponent\n  ],\n  imports: [\n    CommonModule,\n  \n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProfilePageComponent,\n        data: {\n          roles: ['cosmos-superuser', 'cosmos-user-its']\n        },\n        canActivate: [\n          MsalGuard, RolesGuard\n        ]\n      }\n    ])\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    ProfilePageComponent,\n    ProfileBadgeComponent\n  ]\n})\nexport class UserProfilesModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MsalGuard } from '@azure/msal-angular';\nimport { RolesGuard } from \"@cosmos/guards\";\n\nconst routes: Routes = [\n  {\n    path: 'ping',\n    loadChildren: () => import('@cosmos/pings').then(m => m.PingsModule),\n    data: {\n      roles: ['cosmos-superuser', 'cosmos-user-its']\n    },\n    canActivate: [\n      MsalGuard, RolesGuard\n    ]\n  },\n  {\n    path: 'google/groups',\n    loadChildren: () => import('@cosmos/google-groups').then(m => m.GoogleGroupsModule),\n    data: {\n      roles: ['cosmos-superuser', 'cosmos-user-its']\n    },\n    canActivate: [\n      MsalGuard, RolesGuard\n    ]\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('@cosmos/user-profiles').then(m => m.UserProfilesModule),\n    canActivate: [\n      MsalGuard\n    ]\n  },\n  {\n    path: '',\n    loadChildren: () => import('@cosmos/pages').then(m => m.PagesModule)\n  },\n  {\n    path: '**',\n    loadChildren: () => import('@cosmos/pages').then(m => m.PagesModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BroadcastService, MsalService } from '@azure/msal-angular';\nimport { Logger, CryptoUtils } from 'msal';\nimport { EnvironmentService } from '@cosmos/environment';\nimport { Menu } from \"@cosmos/types\";\nimport { ChassisService } from '@cosmos/chassis';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  isIframe = false;\n  loggedIn = false;\n\n  constructor(\n    public environmentService: EnvironmentService,\n    public chassisService: ChassisService,\n    private broadcastService: BroadcastService,\n    private authService: MsalService\n  ) {}\n\n  ngOnInit(): void {\n    this.chassisService.setHeaderContent(\n      {\n        links: [\n        ]\n      }\n    );\n\n    this.chassisService.setFooterContent(\n      {\n        links: [\n        ]\n      }\n    );\n\n    this.isIframe = window !== window.parent && !window.opener;\n\n    this.checkoutAccount();\n\n    this.broadcastService.subscribe('msal:loginSuccess', () => {\n      this.checkoutAccount();\n    });\n\n    this.authService.handleRedirectCallback((authError, response) => {\n      if (authError) {\n        console.error('Redirect Error: ', authError.errorMessage);\n        return;\n      }\n\n      console.log('Redirect Success: ', response);\n    });\n\n    this.authService.setLogger(new Logger((logLevel, message, piiEnabled) => {\n      console.log('MSAL Logging: ', message);\n    }, {\n      correlationId: CryptoUtils.createNewGuid(),\n      piiLoggingEnabled: false\n    }));\n  }\n\n  checkoutAccount() {\n    this.loggedIn = !!this.authService.getAccount();\n  }\n}\n","<cosmos-chassis></cosmos-chassis>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MsalModule, MsalInterceptor } from '@azure/msal-angular';\nimport { httpInterceptorProviders } from \"@cosmos/http-interceptors\";\n\n//import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n//import { InMemoryDataService }  from '@cosmos/people-sets';\n\nimport { environment } from \"../environments/environment\";\nimport { EnvironmentService } from \"@cosmos/environment\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { UserAuthModule } from \"@cosmos/user-auth\";\nimport { ChassisModule } from \"@cosmos/chassis\";\nimport { PanelsModule } from \"@cosmos/panels\";\nimport { PagesModule } from \"@cosmos/pages\";\nimport { NotificationsModule } from '@cosmos/notifications';\nimport { ServiceWorkerModule } from '@angular/service-worker'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MsalModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    //HttpClientInMemoryWebApiModule.forRoot(\n      //InMemoryDataService, { dataEncapsulation: false }\n    //),\n\n    UserAuthModule,\n    ChassisModule,\n    PanelsModule,\n    PagesModule,\n    NotificationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    httpInterceptorProviders,\n    {\n      provide: EnvironmentService,\n      useValue: environment\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Environment } from \"@cosmos/types\";\n\nexport const environment: Environment = {\n  production: false,\n  appName: 'Viewfinder (Beta)',\n\n  aadClientId: 'd15732c7-13e4-41fc-9d8f-c7776b875e58',\n  aadAuthority: \"https://login.microsoftonline.com/cd25c694-bfb8-48f4-9d0d-b9af282c4ab4\",\n  aadValidateAuthority: true,\n  aadRedirectUri: \"http://localhost:4290/\",\n  aadPostLogoutRedirectUri: \"http://localhost:4290/\",\n  aadNavigateToLoginRequestUrl: true,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}