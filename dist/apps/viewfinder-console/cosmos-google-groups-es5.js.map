{"version":3,"sources":["webpack:///home/schumajr/cosmos/libs/google-groups/src/index.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/google-groups-routing.module.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/google-groups.module.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/google-groups.service.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/group-detail/group-detail.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/group-detail/group-detail.component.html","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-home/groups-home.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-home/groups-home.component.html","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-list/groups-list.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-list/groups-list.component.html","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-search/groups-search.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/groups-search/groups-search.component.html","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/membership-detail/membership-detail.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/membership-detail/membership-detail.component.html","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/memberships-list/memberships-list.component.ts","webpack:///home/schumajr/cosmos/libs/google-groups/src/lib/memberships-list/memberships-list.component.html","webpack:///home/schumajr/cosmos/libs/messages/src/index.ts","webpack:///home/schumajr/cosmos/libs/messages/src/lib/messages.module.ts","webpack:///home/schumajr/cosmos/libs/messages/src/lib/messages.service.ts","webpack:///home/schumajr/cosmos/libs/messages/src/lib/messages/messages.component.ts","webpack:///home/schumajr/cosmos/libs/messages/src/lib/messages/messages.component.html","webpack:///home/schumajr/cosmos/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///home/schumajr/cosmos/node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js"],"names":["routes","path","component","data","roles","canActivate","GoogleGroupsRoutingModule","forChild","imports","exports","GoogleGroupsModule","provide","useClass","multi","declarations","providers","GoogleGroupsService","messagesService","codexService","igorService","groups","list","listGroups","group","business_owner","membership_automation_active","automate_mangers","automate_members","automate_owners","managers_people_sets","members_people_sets","owners_people_sets","configuration_automation_active","configuration_templates","google_id","etag","email","name","description","adminCreated","nonEditableAliases","whoCanJoin","whoCanViewMembership","whoCanViewGroup","whoCanInvite","whoCanAdd","allowExternalMembers","whoCanPostMessage","allowWebPosting","primaryLanguage","maxMessageBytes","isArchived","archiveOnly","messageModerationLevel","spamModerationLevel","replyTo","customReplyTo","includeCustomFooter","customFooterText","sendMessageDenyNotification","defaultMessageDenyNotificationText","showInGroupDirectory","allowGoogleCommunication","membersCanPostAsTheGroup","messageDisplayFont","includeInGlobalAddressList","whoCanLeaveGroup","whoCanContactOwner","whoCanAddReferences","whoCanAssignTopics","whoCanUnassignTopic","whoCanTakeTopics","whoCanMarkDuplicate","whoCanMarkNoResponseNeeded","whoCanMarkFavoriteReplyOnAnyTopic","whoCanMarkFavoriteReplyOnOwnTopic","whoCanUnmarkFavoriteReplyOnAnyTopic","whoCanEnterFreeFormTags","whoCanModifyTagsAndCategories","favoriteRepliesOnTop","whoCanApproveMembers","whoCanBanUsers","whoCanModifyMembers","whoCanApproveMessages","whoCanDeleteAnyPost","whoCanDeleteTopics","whoCanLockTopics","whoCanMoveTopicsIn","whoCanMoveTopicsOut","whoCanPostAnnouncements","whoCanHideAbuse","whoCanMakeTopicsSticky","whoCanModerateMembers","whoCanModerateContent","whoCanAssistContent","customRolesEnabledForSettingsToBeMerged","enableCollaborativeInbox","whoCanDiscoverGroup","providedIn","GroupDetailComponent","groupsService","getMock","selector","templateUrl","styleUrls","GroupsHomeComponent","GroupsListComponent","displayedColumns","getGroups","selectedGroup","subscribe","GroupsSearchComponent","MembershipDetailComponent","MembershipsListComponent","MessagesModule","MessagesService","messages","message","push","MessagesComponent","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","CanStick","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TextColumnOptions","TEXT_COLUMN_OPTIONS","CellDef","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ctorParameters","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","useExisting","undefined","decorators","propDecorators","BaseCdkCell","columnDef","elementRef","columnClassName","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","hasDirection","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","context","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isArray","pipe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","_trackByFn","fn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","exportAs","ngContentSelectors","CdkTable_Template","String","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","factory","CdkTableModule_Factory","ngJitMode","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","arguments","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","styles","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_updateChangeSubscription","sortChange","_sort","initialized","pageChange","_paginator","page","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAE,yFAFb;AAGEC,YAAI,EAAE;AACJC,eAAK,EAAE,CAAC,kBAAD,EAAqB,iBAArB;AADH,SAHR;AAMEC,mBAAW,EAAE,CACX,6DADW,EACA,yDADA;AANf,OADqB,EAWrB;AACEJ,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,sFAFb;AAGEC,YAAI,EAAE;AACJC,eAAK,EAAE,CAAC,kBAAD,EAAqB,iBAArB;AADH,SAHR;AAMEC,mBAAW,EAAE,CACX,6DADW,EACA,yDADA;AANf,OAXqB,EAqBrB;AACEJ,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,sFAFb;AAGEC,YAAI,EAAE;AACJC,eAAK,EAAE,CAAC,kBAAD,EAAqB,iBAArB;AADH,SAHR;AAMEC,mBAAW,EAAE,CACX,6DADW,EACA,yDADA;AANf,OArBqB,CAAvB;;UAqCaC,yB;;;;;cAAAA;;;;2BAAAA,yB;AAAyB,S;AAAA,kBAH3B,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAG2B,EAF1B,4DAE0B;;;;4HAAzBM,yB,EAAyB;AAAA;AAAA,oBAF1B,4DAE0B;AAAA,S;AAFd,O;;;;;wEAEXA,yB,EAAyB;gBAJrC,sDAIqC;iBAJ5B;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERS,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAI4B,U;;;;;;;;;;;;;;;;;;AC9CtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA2CaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,mBAJlB,CACT;AAAEC,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,mEAAxC;AAAyDC,eAAK,EAAE;AAAhE,SADS,C;AAEV,kBAbQ,CACP,4DADO,EAEP,sEAFO,EAIP,uFAJO,CAaR;;;;4HAEUH,kB,EAAkB;AAAA,yBAtB3B,yFAsB2B,EArB3B,sFAqB2B,EApB3B,sFAoB2B,EAnB3B,4FAmB2B,EAlB3B,sGAkB2B,EAjB3B,yGAiB2B;AAjBF,oBAGzB,4DAHyB,EAIzB,sEAJyB,EAMzB,uFANyB,CAiBE;AAXF,oBAGzB,yFAHyB,EAIzB,sFAJyB,EAKzB,sFALyB;AAWE,S;AANR,O;;;;;wEAMVA,kB,EAAkB;gBAxB9B,sDAwB8B;iBAxBrB;AACRI,wBAAY,EAAE,CACZ,yFADY,EAEZ,sFAFY,EAGZ,sFAHY,EAIZ,4FAJY,EAKZ,sGALY,EAMZ,yGANY,CADN;AASRN,mBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAIP,uFAJO,CATD;AAeRC,mBAAO,EAAE,CACP,yFADO,EAEP,sFAFO,EAGP,sFAHO,CAfD;AAoBRM,qBAAS,EAAE,CACT;AAAEJ,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,mEAAxC;AAAyDC,mBAAK,EAAE;AAAhE,aADS;AApBH,W;AAwBqB,U;;;;;;;;;;;;;;;;;;AC3C/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaG,mB;AAGX,qCACUC,eADV,EAEUC,YAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAF,eAAA,GAAAA,eAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AALF,eAAAC,MAAA,GAAwB,EAAxB;AAMH;;;;qCAEMC,I,EAAY;AACrB;AACA;AAEA,gBAAID,MAAM,GAAG,KAAKD,WAAL,CAAiBG,UAAjB,CAA4BD,IAA5B,CAAb;AACA,mBAAOD,MAAP;AACD;;;oCAEM;AACL,gBAAIG,KAAK,GAAG;AACVC,4BAAc,EAAE,mBADN;AAGVC,0CAA4B,EAAE,IAHpB;AAIVC,8BAAgB,EAAE,IAJR;AAKVC,8BAAgB,EAAE,IALR;AAMVC,6BAAe,EAAE,IANP;AAQVC,kCAAoB,EAAE,EARZ;AASVC,iCAAmB,EAAE,EATX;AAUVC,gCAAkB,EAAE,EAVV;AAYVC,6CAA+B,EAAE,IAZvB;AAaVC,qCAAuB,EAAE,EAbf;AAeVC,uBAAS,EAAE,iBAfD;AAgBVC,kBAAI,EAAE,2DAhBI;AAiBVC,mBAAK,EAAE,uBAjBG;AAkBVC,kBAAI,EAAE,eAlBI;AAmBVC,yBAAW,EAAE,sDAnBH;AAoBVC,0BAAY,EAAE,IApBJ;AAqBVC,gCAAkB,EAAE,CAAE,0BAAF,CArBV;AAsBVC,wBAAU,EAAE,kBAtBF;AAuBVC,kCAAoB,EAAE,uBAvBZ;AAwBVC,6BAAe,EAAE,sBAxBP;AAyBVC,0BAAY,EAAE,uBAzBJ;AA0BVC,uBAAS,EAAE,oBA1BD;AA2BVC,kCAAoB,EAAE,OA3BZ;AA4BVC,+BAAiB,EAAE,uBA5BT;AA6BVC,6BAAe,EAAE,OA7BP;AA8BVC,6BAAe,EAAE,IA9BP;AA+BVC,6BAAe,EAAE,QA/BP;AAgCVC,wBAAU,EAAE,MAhCF;AAiCVC,yBAAW,EAAE,OAjCH;AAkCVC,oCAAsB,EAAE,eAlCd;AAmCVC,iCAAmB,EAAE,OAnCX;AAoCVC,qBAAO,EAAE,eApCC;AAqCVC,2BAAa,EAAE,uBArCL;AAsCVC,iCAAmB,EAAE,OAtCX;AAuCVC,8BAAgB,EAAE,IAvCR;AAwCVC,yCAA2B,EAAE,MAxCnB;AAyCVC,gDAAkC,EAAE,8DAzC1B;AA0CVC,kCAAoB,EAAE,OA1CZ;AA2CVC,sCAAwB,EAAE,OA3ChB;AA4CVC,sCAAwB,EAAE,MA5ChB;AA6CVC,gCAAkB,EAAE,cA7CV;AA8CVC,wCAA0B,EAAE,MA9ClB;AA+CVC,8BAAgB,EAAE,gBA/CR;AAgDVC,gCAAkB,EAAE,oBAhDV;AAiDVC,iCAAmB,EAAE,MAjDX;AAkDVC,gCAAkB,EAAE,qBAlDV;AAmDVC,iCAAmB,EAAE,qBAnDX;AAoDVC,8BAAgB,EAAE,qBApDR;AAqDVC,iCAAmB,EAAE,qBArDX;AAsDVC,wCAA0B,EAAE,qBAtDlB;AAuDVC,+CAAiC,EAAE,qBAvDzB;AAwDVC,+CAAiC,EAAE,MAxDzB;AAyDVC,iDAAmC,EAAE,qBAzD3B;AA0DVC,qCAAuB,EAAE,qBA1Df;AA2DVC,2CAA6B,EAAE,qBA3DrB;AA4DVC,kCAAoB,EAAE,MA5DZ;AA6DVC,kCAAoB,EAAE,wBA7DZ;AA8DVC,4BAAc,EAAE,aA9DN;AA+DVC,iCAAmB,EAAE,aA/DX;AAgEVC,mCAAqB,EAAE,qBAhEb;AAiEVC,iCAAmB,EAAE,qBAjEX;AAkEVC,gCAAkB,EAAE,qBAlEV;AAmEVC,8BAAgB,EAAE,qBAnER;AAoEVC,gCAAkB,EAAE,qBApEV;AAqEVC,iCAAmB,EAAE,qBArEX;AAsEVC,qCAAuB,EAAE,qBAtEf;AAuEVC,6BAAe,EAAE,qBAvEP;AAwEVC,oCAAsB,EAAE,qBAxEd;AAyEVC,mCAAqB,EAAE,aAzEb;AA0EVC,mCAAqB,EAAE,qBA1Eb;AA2EVC,iCAAmB,EAAE,qBA3EX;AA4EVC,qDAAuC,EAAE,OA5E/B;AA6EVC,sCAAwB,EAAE,OA7EhB;AA8EVC,iCAAmB,EAAE;AA9EX,aAAZ;AAiFA,mBAAO1E,KAAP;AACD;;;;;;;yBApGUP,mB,EAAmB,wH,EAAA,0H,EAAA,wH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACVkF,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACdhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaC,oB;AAGX,sCAAoBC,aAApB,EAAwD;AAAA;;AAApC,eAAAA,aAAA,GAAAA,aAAA;AAAuC;;;;qCAEhD;AACT,iBAAK7E,KAAL,GAAa,KAAK6E,aAAL,CAAmBC,OAAnB,EAAb;AACD;;;;;;;yBAPUF,oB,EAAoB,2I;AAAA,O;;;cAApBA,oB;AAAoB,mD;AAAA,kB;AAAA,gB;AAAA;AAAA;ACVjC;;AAAI;;AAAc;;AAEV;;AAAK;;AAAQ;;AAAU;;AAAU;;AAAmB;;AACpD;;AAAK;;AAAQ;;AAAM;;AAAU;;AAAe;;AAC5C;;AAAK;;AAAQ;;AAAK;;AAAU;;AAAc;;AAC1C;;AAAK;;AAAQ;;AAAY;;AAAU;;AAAqB;;AAExD;;AAAK;;AAAQ;;AAAe;;AAAU;;AAAwB;;AAE9D;;AAAK;;AAAQ;;AAA6B;;AAAU;;AAAsC;;AAE1F;;AAAK;;AAAQ;;AAAiB;;AAAU;;AAA2B;;AACnE;;AAAK;;AAAQ;;AAAiB;;AAAU;;AAA0B;;AAClE;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAEhE;;AAAK;;AAAQ;;AAAqB;;AAAU;;AAA8B;;AAC1E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AAEtE;;AAAK;;AAAQ;;AAAgC;;AAAU;;AAAyC;;AAChG;;AAAK;;AAAQ;;AAAwB;;AAAU;;AAAiC;;AAEhF;;AAAK;;AAAQ;;AAAa;;AAAU;;AAAsB;;AAC1D;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AAEtE;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAEhE;;AAAK;;AAAQ;;AAAkB;;AAAU;;AAA2B;;AACpE;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAChE;;AAAK;;AAAQ;;AAAyB;;AAAU;;AAAkC;;AAClF;;AAAK;;AAAQ;;AAAsB;;AAAU;;AAA+B;;AAC5E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAwB;;AAAU;;AAAiC;;AAEhF;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAChE;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAChE;;AAAK;;AAAQ;;AAAyB;;AAAU;;AAAkC;;AAElF;;AAAK;;AAAQ;;AAAW;;AAAU;;AAAoB;;AACtD;;AAAK;;AAAQ;;AAAY;;AAAU;;AAAqB;;AAExD;;AAAK;;AAAQ;;AAAuB;;AAAU;;AAAgC;;AAC9E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AAExE;;AAAK;;AAAQ;;AAAQ;;AAAU;;AAAiB;;AAChD;;AAAK;;AAAQ;;AAAc;;AAAU;;AAAuB;;AAE5D;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAiB;;AAAU;;AAA0B;;AAElE;;AAAK;;AAAQ;;AAA4B;;AAAU;;AAAqC;;AACxF;;AAAK;;AAAQ;;AAAmC;;AAAU;;AAA4C;;AAEtG;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AACtE;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AAEtE;;AAAK;;AAAQ;;AAAyB;;AAAU;;AAAkC;;AAClF;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAA2B;;AAAU;;AAAoC;;AACtF;;AAAK;;AAAQ;;AAAkC;;AAAU;;AAA2C;;AACpG;;AAAK;;AAAQ;;AAAkC;;AAAU;;AAA2C;;AACpG;;AAAK;;AAAQ;;AAAoC;;AAAU;;AAA6C;;AACxG;;AAAK;;AAAQ;;AAAwB;;AAAU;;AAAiC;;AAChF;;AAAK;;AAAQ;;AAA8B;;AAAU;;AAAuC;;AAC5F;;AAAK;;AAAQ;;AAAqB;;AAAU;;AAA8B;;AAE1E;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AACtE;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAiB;;AAAU;;AAA0B;;AAClE;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AACtE;;AAAK;;AAAQ;;AAAiB;;AAAU;;AAA0B;;AAClE;;AAAK;;AAAQ;;AAAmB;;AAAU;;AAA4B;;AACtE;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAAuB;;AAAU;;AAAgC;;AAE9E;;AAAK;;AAAQ;;AAAgB;;AAAU;;AAAyB;;AAChE;;AAAK;;AAAQ;;AAAsB;;AAAU;;AAA+B;;AAC5E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AAExE;;AAAK;;AAAQ;;AAAqB;;AAAU;;AAA8B;;AAC1E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA6B;;AACxE;;AAAK;;AAAQ;;AAA2B;;AAAU;;AAAoC;;AAEtF;;AAAK;;AAAQ;;AAAa;;AAAU;;AAAoB;;AACxD;;AAAK;;AAAQ;;AAAwB;;AAAU;;AAA8B;;AAC7E;;AAAK;;AAAQ;;AAAe;;AAAU;;AAAsB;;AAC5D;;AAAK;;AAAQ;;AAAY;;AAAU;;AAAmB;;AACtD;;AAAK;;AAAQ;;AAAuB;;AAAU;;AAA8B;;AAC5E;;AAAK;;AAAQ;;AAAyB;;AAAU;;AAA+B;;AAC/E;;AAAK;;AAAQ;;AAAwB;;AAAU;;AAA8B;;AAC7E;;AAAK;;AAAQ;;AAAkB;;AAAU;;AAAwB;;AACjE;;AAAK;;AAAQ;;AAAuB;;AAAU;;AAA6B;;AAC3E;;AAAK;;AAAQ;;AAAoB;;AAAU;;AAA0B;;;;AA7FzE;;AAAA;;AAEqC;;AAAA;;AACJ;;AAAA;;AACD;;AAAA;;AACO;;AAAA;;AAEG;;AAAA;;AAEc;;AAAA;;AAEZ;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AAEK;;AAAA;;AACD;;AAAA;;AACD;;AAAA;;AAEa;;AAAA;;AACR;;AAAA;;AAEX;;AAAA;;AACM;;AAAA;;AAEH;;AAAA;;AAEE;;AAAA;;AACF;;AAAA;;AACS;;AAAA;;AACH;;AAAA;;AACF;;AAAA;;AACI;;AAAA;;AAER;;AAAA;;AACA;;AAAA;;AACS;;AAAA;;AAEd;;AAAA;;AACC;;AAAA;;AAEW;;AAAA;;AACH;;AAAA;;AAEZ;;AAAA;;AACM;;AAAA;;AAEM;;AAAA;;AACH;;AAAA;;AAEW;;AAAA;;AACO;;AAAA;;AAEhB;;AAAA;;AACA;;AAAA;;AAEM;;AAAA;;AACL;;AAAA;;AACA;;AAAA;;AACO;;AAAA;;AACO;;AAAA;;AACA;;AAAA;;AACE;;AAAA;;AACZ;;AAAA;;AACM;;AAAA;;AACT;;AAAA;;AAEF;;AAAA;;AACC;;AAAA;;AACH;;AAAA;;AACE;;AAAA;;AACF;;AAAA;;AACE;;AAAA;;AACC;;AAAA;;AACG;;AAAA;;AAEP;;AAAA;;AACM;;AAAA;;AACF;;AAAA;;AAEC;;AAAA;;AACD;;AAAA;;AACO;;AAAA;;AAEd;;AAAA;;AACW;;AAAA;;AACT;;AAAA;;AACH;;AAAA;;AACW;;AAAA;;AACE;;AAAA;;AACD;;AAAA;;AACN;;AAAA;;AACK;;AAAA;;AACH;;AAAA;;;;;;;;wEDnFtCA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTG,oBAAQ,EAAE,4BADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,kD;AAAA,gB;AAAA,e;AAAA;AAAA;ACPhC;;AAAG;;AAAkB;;;;;;;;wEDORA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTH,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYU;;AAAuC;;AAAM;;;;;;AAC7C;;AAAsC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAKtC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAsC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAKtC;;AAAuC;;AAAY;;;;;;AACnD;;AAAsC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKtC;;AAAuC;;AAAe;;;;;;AACtD;;AAAsC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAKtC;;AAAuC;;AAAW;;;;;;AAClD;;AAAsC;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAGxC;;;;;;;;AACA;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;;;;;AAQ/F;;AACE;;AAAI;;AAA8B;;AAClC;;AAAK;;AAAM;;AAAI;;AAAO;;AAAoB;;AAC5C;;;;;;AAFM;;AAAA;;AACkB;;AAAA;;;;UDzCXE,mB;AAcX,qCAAoBN,aAApB,EAAwD;AAAA;;AAApC,eAAAA,aAAA,GAAAA,aAAA;AAbpB,eAAAO,gBAAA,GAA6B,CAC3B,MAD2B,EAE3B,OAF2B,EAG3B,aAH2B,EAI3B,cAJ2B,EAK3B,8BAL2B,CAA7B;AAa2D;;;;qCAEhD;AACT,iBAAKC,SAAL;AACD;;;mCAEQrF,K,EAAgB;AACvB,iBAAKsF,aAAL,GAAqBtF,KAArB;AACD;;;sCAEQ;AAAA;;AACP,iBAAK6E,aAAL,CAAmB9E,UAAnB,CAA8B,eAA9B,EACGwF,SADH,CACa,UAAA1F,MAAM;AAAA,qBAAI,KAAI,CAACA,MAAL,GAAcA,MAAlB;AAAA,aADnB;AAED;;;;;;;yBA3BUsF,mB,EAAmB,2I;AAAA,O;;;cAAnBA,mB;AAAmB,kD;AAAA,iB;AAAA,e;AAAA,mqB;AAAA;AAAA;ACVhC;;AACE;;AAEA;;AAEE;;AAA0B;;AAAa;;AAEvC;;AAEE;;AAEE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AAEF;;AAEF;;AACF;;AAEA;;;;AAxCuB;;AAAA;;AA+BI;;AAAA,8GAAiD,uBAAjD,EAAiD,IAAjD;;AACP;;AAAA;;AAQf;;AAAA;;;;;;;;;wEDvCQA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTJ,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaO,qB;AAEX,yCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,qB;AAAqB,O;;;cAArBA,qB;AAAqB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPlC;;AAAG;;AAAoB;;;;;;;;wEDOVA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTT,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaQ,yB;AAEX,6CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,8D;AAAA,gB;AAAA,e;AAAA;AAAA;ACPtC;;AAAG;;AAAwB;;;;;;;;wEDOdA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTV,oBAAQ,EAAE,uCADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;AEPtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaS,wB;AAEX,4CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6D;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AAAG;;AAAuB;;;;;;;;wEDObA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTX,oBAAQ,EAAE,sCADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaU,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAVhB,CACP,4DADO,CAUgB;;;;4HAAdA,c,EAAc;AAAA,yBANvB,8EAMuB;AANN,oBAHjB,4DAGiB,CAMM;AATX,oBAMZ,8EANY;AASW,S;AAHN,O;;;;;wEAGRA,c,EAAc;gBAX1B,sDAW0B;iBAXjB;AACR1G,mBAAO,EAAE,CACP,4DADO,CADD;AAIRM,wBAAY,EAAE,CACZ,8EADY,CAJN;AAORL,mBAAO,EAAE,CACP,8EADO;AAPD,W;AAWiB,U;;;;;;;;;;;;;;;;;;ACf3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKa0G,e;AAHb;AAAA;;AAIE,eAAAC,QAAA,GAAqB,EAArB;AASD;;;;8BAPKC,O,EAAiB;AACnB,iBAAKD,QAAL,CAAcE,IAAd,CAAmBD,OAAnB;AACD;;;kCAEO;AACN,iBAAKD,QAAL,GAAgB,EAAhB;AACD;;;;;;;yBATUD,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACVjB,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIE;;AAAuD;;AAAY;;;;;;AAAZ;;AAAA;;;;;;;;AAJzD;;AAEE;;AAAI;;AAAQ;;AACZ;;AAAsB;AAAA;;AAAA;;AAAA,mBAAS,OAAAjF,eAAA,QAAT;AAAgC,WAAhC;;AAAkC;;AAAK;;AAC7D;;AAEF;;;;;;AAFO;;AAAA;;;;UDIMsG,iB;AAEX,mCAAmBtG,eAAnB,EAAqD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAAqC;;;;qCAEhD,CACP;;;;;;;yBALUsG,iB,EAAiB,kI;AAAA,O;;;cAAjBA,iB;AAAiB,wC;AAAA,gB;AAAA,e;AAAA,gF;AAAA;AAAA;ACR9B;;;;AAAK;;;;;;;;;wEDQQA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTjB,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMgB,GAAG,GAAG,CAAC,CAAC,CAAC,SAAD,CAAD,CAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,SAAD,CAAZ;;AACA,eAASC,2BAAT,CAAqCC,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACC,OAAxC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BD,MAAM,CAACE,UAAtC,EAAkD,GAAlD;AACH;AAAE;;AACH,eAASC,2BAAT,CAAqCL,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMM,OAAO,GAAGL,GAAG,CAACM,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACL,OAAxC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BK,MAAM,CAACC,YAAP,CAAoBH,OAApB,EAA6BE,MAAM,CAAC9F,IAApC,CAA/B,EAA0E,GAA1E;AACH;AAAE;AAQH;;;;;;AAKA;;;;;;;;;AAOA,eAASgG,QAAT,GAAoB,CAAG;;AACvB,UAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;;;;;;AASA,eAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AAC/B;AAAA;;AAAA;;AACI;;;AAGA,4BAAqB;AAAA;;AAAA;;AAAA,8CAANC,IAAM;AAANA,kBAAM;AAAA;;AACjB,6DAASA,IAAT;AACA,mBAAKC,OAAL,GAAe,KAAf;AACA;;;;AAGA,mBAAKC,iBAAL,GAAyB,KAAzB;AANiB;AAOpB;AACD;;;;;;AAZJ;AAAA;;AA2BI;;;;AA3BJ,+CA+BuB;AACf;AACA,kBAAMC,gBAAgB,GAAG,KAAKD,iBAA9B;AACA,mBAAKA,iBAAL,GAAyB,KAAzB;AACA,qBAAOC,gBAAP;AACH;AACD;;;;;AArCJ;AAAA;AAAA,iDAyCyB;AACjB,mBAAKD,iBAAL,GAAyB,KAAzB;AACH;AA3CL;AAAA;AAAA,gCAgBiB;AAAE,qBAAO,KAAKD,OAAZ;AAAsB;AACrC;;;;AAjBJ;AAAA,8BAqBeG,CArBf,EAqBkB;AACV;AACA,kBAAMC,SAAS,GAAG,KAAKJ,OAAvB;AACA,mBAAKA,OAAL,GAAe,oFAAsBG,CAAtB,CAAf;AACA,mBAAKF,iBAAL,GAAyBG,SAAS,KAAK,KAAKJ,OAA5C;AACH;AA1BL;;AAAA;AAAA,UAAqBF,IAArB;AA6CH;AAED;;;;;;AAKA;;;;;;;AAKA,UAAMO,SAAS,GAAG,IAAI,4DAAJ,CAAmB,WAAnB,CAAlB;AACA;;;;;;AAKA,eAASC,iBAAT,GAA6B,CAAG;;AAChC,UAAI,KAAJ,EAAW,CAYV;AACD;;;;;;AAIA,UAAMC,mBAAmB,GAAG,IAAI,4DAAJ,CAAmB,qBAAnB,CAA5B;AAEA;;;;;;AAKA;;;;;AAIA,eAASC,OAAT,GAAmB,CAAG;;AACtB,UAAI,KAAJ,EAAW,CAGV;AACD;;;;;;UAIMC,U;AACF;;;AAGA;AAAY;AAAqBC,cAAjC,EAA2C;AAAA;;AACvC,aAAKA,QAAL,GAAgBA,QAAhB;AACH,O;;AAELD,gBAAU,CAACE,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,eAAO,KAAKA,CAAC,IAAIJ,UAAV,EAAsB,gEAAyB,yDAAzB,CAAtB,CAAP;AAA6E,OAAhI;;AACAA,gBAAU,CAACK,IAAX,GAAkB,gEAAyB;AAAEC,YAAI,EAAEN,UAAR;AAAoBO,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD;AAA/B,OAAzB,CAAlB;AACA;;AACAP,gBAAU,CAACQ,cAAX,GAA4B;AAAA,eAAM,CAC9B;AAAEF,cAAI,EAAE;AAAR,SAD8B,CAAN;AAAA,OAA5B;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBN,UAAzB,EAAqC,CAAC;AAC3DM,cAAI,EAAE,uDADqD;AAE3DhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAFqD,SAAD,CAArC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAwC,SAHjC,EAGmC,IAHnC;AAG2C,OAH1D;;AAId,UAAI,KAAJ,EAAW,CAMV;AACD;;;;;;UAIMG,gB;AACF;;;AAGA;AAAY;AAAqBR,cAAjC,EAA2C;AAAA;;AACvC,aAAKA,QAAL,GAAgBA,QAAhB;AACH,O;;AAELQ,sBAAgB,CAACP,IAAjB,GAAwB,SAASQ,wBAAT,CAAkCN,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIK,gBAAV,EAA4B,gEAAyB,yDAAzB,CAA5B,CAAP;AAAmF,OAAlJ;;AACAA,sBAAgB,CAACJ,IAAjB,GAAwB,gEAAyB;AAAEC,YAAI,EAAEG,gBAAR;AAA0BF,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD;AAArC,OAAzB,CAAxB;AACA;;AACAE,sBAAgB,CAACD,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAEF,cAAI,EAAE;AAAR,SADoC,CAAN;AAAA,OAAlC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBG,gBAAzB,EAA2C,CAAC;AACjEH,cAAI,EAAE,uDAD2D;AAEjEhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAF2D,SAAD,CAA3C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAwC,SAHjC,EAGmC,IAHnC;AAG2C,OAH1D;;AAId,UAAI,KAAJ,EAAW,CAMV;AACD;;;;;;UAIMK,gB;AACF;;;AAGA;AAAY;AAAqBV,cAAjC,EAA2C;AAAA;;AACvC,aAAKA,QAAL,GAAgBA,QAAhB;AACH,O;;AAELU,sBAAgB,CAACT,IAAjB,GAAwB,SAASU,wBAAT,CAAkCR,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIO,gBAAV,EAA4B,gEAAyB,yDAAzB,CAA5B,CAAP;AAAmF,OAAlJ;;AACAA,sBAAgB,CAACN,IAAjB,GAAwB,gEAAyB;AAAEC,YAAI,EAAEK,gBAAR;AAA0BJ,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD;AAArC,OAAzB,CAAxB;AACA;;AACAI,sBAAgB,CAACH,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAEF,cAAI,EAAE;AAAR,SADoC,CAAN;AAAA,OAAlC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBK,gBAAzB,EAA2C,CAAC;AACjEL,cAAI,EAAE,uDAD2D;AAEjEhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAF2D,SAAD,CAA3C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAwC,SAHjC,EAGmC,IAHnC;AAG2C,OAH1D;;AAId,UAAI,KAAJ,EAAW,CAMV,C,CACD;;AACA;;;;;UAGMO,gB;;;AAEN;;;AACA,UAAMC,iBAAiB,GAAG1B,mBAAmB,CAACyB,gBAAD,CAA7C;AACA;;;;;;UAIME,Y;;;;;AACF;;;AAGA,8BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB;AACA,iBAAKA,MAAL,GAAcA,MAAd;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AAHgB;AAInB;AACD;;;;;;;;8BAIW;AACP,mBAAO,KAAKC,KAAZ;AACH;AACD;;;;;4BAIS/H,I,EAAM;AACX;AACA;AACA,gBAAIA,IAAJ,EAAU;AACN,mBAAK+H,KAAL,GAAa/H,IAAb;AACA,mBAAKgI,oBAAL,GAA4BhI,IAAI,CAACiI,OAAL,CAAa,eAAb,EAA8B,GAA9B,CAA5B;AACH;AACJ;AACD;;;;;;;;;8BAMgB;AACZ,mBAAO,KAAKH,UAAZ;AACH;AACD;;;;;4BAIcvB,C,EAAG;AACb;AACA,gBAAMC,SAAS,GAAG,KAAKsB,UAAvB;AACA,iBAAKA,UAAL,GAAkB,oFAAsBvB,CAAtB,CAAlB;AACA,iBAAKF,iBAAL,GAAyBG,SAAS,KAAK,KAAKsB,UAA5C;AACH;;;;QA9CsBH,iB;;AAgD3BC,kBAAY,CAACb,IAAb,GAAoB,SAASmB,oBAAT,CAA8BjB,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIW,YAAV,EAAwB,gEAAyBnB,SAAzB,EAAoC,CAApC,CAAxB,CAAP;AAAyE,OAAhI;;AACAmB,kBAAY,CAACV,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAES,YAAR;AAAsBR,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6De,sBAAc,EAAE,SAASC,2BAAT,CAAqC9C,EAArC,EAAyCC,GAAzC,EAA8C8C,QAA9C,EAAwD;AAAE,cAAI/C,EAAE,GAAG,CAAT,EAAY;AACxL,yEAAsB+C,QAAtB,EAAgCxB,UAAhC,EAA4C,IAA5C;;AACA,yEAAsBwB,QAAtB,EAAgCf,gBAAhC,EAAkD,IAAlD;;AACA,yEAAsBe,QAAtB,EAAgCb,gBAAhC,EAAkD,IAAlD;AACH;;AAAC,cAAIlC,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIgD,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACgD,IAAJ,GAAWD,EAAE,CAACE,KAAnE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACkD,UAAJ,GAAiBH,EAAE,CAACE,KAAzE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACmD,UAAJ,GAAiBJ,EAAE,CAACE,KAAzE;AACH;AAAE,SATsC;AASpCG,cAAM,EAAE;AAAEC,gBAAM,EAAE,QAAV;AAAoB5I,cAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,CAA1B;AAAoD6I,mBAAS,EAAE;AAA/D,SAT4B;AASkDC,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,4BAAX;AAAyCyK,qBAAW,EAAEnB;AAAtD,SAAD,CAA1B,CAAD,EAAoG,wEAApG;AAT5D,OAAzB,CAApB;AAUA;;AACAA,kBAAY,CAACP,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAEF,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAACM,SAAD;AAAtB,WAAD,EAAuC;AAAEU,gBAAI,EAAE;AAAR,WAAvC;AAA/B,SADgC,CAAN;AAAA,OAA9B;;AAGAS,kBAAY,CAACsB,cAAb,GAA8B;AAC1BlJ,YAAI,EAAE,CAAC;AAAEmH,cAAI,EAAE,mDAAR;AAAehB,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD,CADoB;AAE1B0C,iBAAS,EAAE,CAAC;AAAE1B,cAAI,EAAE,mDAAR;AAAehB,cAAI,EAAE,CAAC,WAAD;AAArB,SAAD,CAFe;AAG1BoC,YAAI,EAAE,CAAC;AAAEpB,cAAI,EAAE,0DAAR;AAAsBhB,cAAI,EAAE,CAACU,UAAD;AAA5B,SAAD,CAHoB;AAI1B4B,kBAAU,EAAE,CAAC;AAAEtB,cAAI,EAAE,0DAAR;AAAsBhB,cAAI,EAAE,CAACmB,gBAAD;AAA5B,SAAD,CAJc;AAK1BoB,kBAAU,EAAE,CAAC;AAAEvB,cAAI,EAAE,0DAAR;AAAsBhB,cAAI,EAAE,CAACqB,gBAAD;AAA5B,SAAD;AALc,OAA9B;AAOA;;AAAc,OAAC,YAAY;AAAE,wEAAyBI,YAAzB,EAAuC,CAAC;AAC7DT,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,gBADX;AAEC0E,kBAAM,EAAE,CAAC,QAAD,CAFT;AAGCjK,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,4BAAX;AAAyCyK,yBAAW,EAAEnB;AAAtD,aAAD;AAHZ,WAAD;AAFuD,SAAD,CAAvC,EAOrB,YAAY;AAAE,iBAAO,CAAC;AAAET,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9C9B,kBAAI,EAAE,oDADwC;AAE9ChB,kBAAI,EAAE,CAACM,SAAD;AAFwC,aAAD,EAG9C;AACCU,kBAAI,EAAE;AADP,aAH8C;AAA/B,WAAD,CAAP;AAKF,SAZS,EAYP;AAAEnH,cAAI,EAAE,CAAC;AACnBmH,gBAAI,EAAE,mDADa;AAEnBhB,gBAAI,EAAE,CAAC,cAAD;AAFa,WAAD,CAAR;AAGV0C,mBAAS,EAAE,CAAC;AACZ1B,gBAAI,EAAE,mDADM;AAEZhB,gBAAI,EAAE,CAAC,WAAD;AAFM,WAAD,CAHD;AAMVoC,cAAI,EAAE,CAAC;AACPpB,gBAAI,EAAE,0DADC;AAEPhB,gBAAI,EAAE,CAACU,UAAD;AAFC,WAAD,CANI;AASV4B,oBAAU,EAAE,CAAC;AACbtB,gBAAI,EAAE,0DADO;AAEbhB,gBAAI,EAAE,CAACmB,gBAAD;AAFO,WAAD,CATF;AAYVoB,oBAAU,EAAE,CAAC;AACbvB,gBAAI,EAAE,0DADO;AAEbhB,gBAAI,EAAE,CAACqB,gBAAD;AAFO,WAAD;AAZF,SAZO;AA2Bb,OA3BF;;AA4Bd,UAAI,KAAJ,EAAW,CAiCV;AACD;;;;;UAGM2B,W;AACF;;;;AAIA,2BAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAC/B;AACA,YAAMC,eAAe,wBAAiBF,SAAS,CAACpB,oBAA3B,CAArB;AACAqB,kBAAU,CAACE,aAAX,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuCH,eAAvC;AACH,O;AAEL;;;;;UAGMI,a;;;;;AACF;;;;AAIA,+BAAYN,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA,oCACzBD,SADyB,EACdC,UADc;AAElC;;;QAPuBF,W;;AAS5BO,mBAAa,CAAC3C,IAAd,GAAqB,SAAS4C,qBAAT,CAA+B1C,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIyC,aAAV,EAAyB,gEAAyB9B,YAAzB,CAAzB,EAAiE,gEAAyB,wDAAzB,CAAjE,CAAP;AAAuH,OAAhL;;AACA8B,mBAAa,CAACxC,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAEuC,aAAR;AAAuBtC,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,iBAA5B,CAAnG;AAAmJd,gBAAQ,EAAE,CAAC,wEAAD;AAA7J,OAAzB,CAArB;AACA;;AACAY,mBAAa,CAACrC,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAES;AAAR,SADiC,EAEjC;AAAET,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBuC,aAAzB,EAAwC,CAAC;AAC9DvC,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sCADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,iBADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFwD,SAAD,CAAxC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAES;AAAR,WAAD,EAAyB;AAAET,gBAAI,EAAE;AAAR,WAAzB,CAAP;AAA+D,SATxD,EAS0D,IAT1D;AASkE,OATjF;AAUd;;;;;UAGM2C,a;;;;;AACF;;;;AAIA,+BAAYV,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA,oCACzBD,SADyB,EACdC,UADc;AAElC;;;QAPuBF,W;;AAS5BW,mBAAa,CAAC/C,IAAd,GAAqB,SAASgD,qBAAT,CAA+B9C,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAI6C,aAAV,EAAyB,gEAAyBlC,YAAzB,CAAzB,EAAiE,gEAAyB,wDAAzB,CAAjE,CAAP;AAAuH,OAAhL;;AACAkC,mBAAa,CAAC5C,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAE2C,aAAR;AAAuB1C,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,iBAAxB,CAAnG;AAA+Id,gBAAQ,EAAE,CAAC,wEAAD;AAAzJ,OAAzB,CAArB;AACA;;AACAgB,mBAAa,CAACzC,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAES;AAAR,SADiC,EAEjC;AAAET,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB2C,aAAzB,EAAwC,CAAC;AAC9D3C,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sCADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,iBADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFwD,SAAD,CAAxC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAES;AAAR,WAAD,EAAyB;AAAET,gBAAI,EAAE;AAAR,WAAzB,CAAP;AAA+D,SATxD,EAS0D,IAT1D;AASkE,OATjF;AAUd;;;;;UAGM6C,O;;;;;AACF;;;;AAIA,yBAAYZ,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA,oCACzBD,SADyB,EACdC,UADc;AAElC;;;QAPiBF,W;;AAStBa,aAAO,CAACjD,IAAR,GAAe,SAASkD,eAAT,CAAyBhD,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAI+C,OAAV,EAAmB,gEAAyBpC,YAAzB,CAAnB,EAA2D,gEAAyB,wDAAzB,CAA3D,CAAP;AAAiH,OAA9J;;AACAoC,aAAO,CAAC9C,IAAR,GAAe,gEAAyB;AAAEC,YAAI,EAAE6C,OAAR;AAAiB5C,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf,CAA5B;AAAoEwC,iBAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,UAAxB,CAA/E;AAAoHd,gBAAQ,EAAE,CAAC,wEAAD;AAA9H,OAAzB,CAAf;AACA;;AACAkB,aAAO,CAAC3C,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEF,cAAI,EAAES;AAAR,SAD2B,EAE3B;AAAET,cAAI,EAAE;AAAR,SAF2B,CAAN;AAAA,OAAzB;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB6C,OAAzB,EAAkC,CAAC;AACxD7C,cAAI,EAAE,uDADkD;AAExDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,wBADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,UADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFkD,SAAD,CAAlC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAES;AAAR,WAAD,EAAyB;AAAET,gBAAI,EAAE;AAAR,WAAzB,CAAP;AAA+D,SATxD,EAS0D,IAT1D;AASkE,OATjF;AAWd;;;;;;AAKA;;;;;;;AAKA,UAAM+C,gBAAgB,gDAAtB;AACA;;;;;;UAKMC,U;AACF;;;;AAIA,4BAAYrD,QAAZ,EAAsBsD,QAAtB,EAAgC;AAAA;;AAC5B,eAAKtD,QAAL,GAAgBA,QAAhB;AACA,eAAKsD,QAAL,GAAgBA,QAAhB;AACH;AACD;;;;;;;;sCAIYC,O,EAAS;AACjB;AACA;AACA,gBAAI,CAAC,KAAKC,cAAV,EAA0B;AACtB;AACA,kBAAMC,OAAO,GAAIF,OAAO,CAAC,SAAD,CAAP,IAAsBA,OAAO,CAAC,SAAD,CAAP,CAAmBG,YAA1C,IAA2D,EAA3E;AACA,mBAAKF,cAAL,GAAsB,KAAKF,QAAL,CAAcK,IAAd,CAAmBF,OAAnB,EAA4BG,MAA5B,EAAtB;;AACA,mBAAKJ,cAAL,CAAoBK,IAApB,CAAyBJ,OAAzB;AACH;AACJ;AACD;;;;;;;;2CAKiB;AACb,mBAAO,KAAKD,cAAL,CAAoBK,IAApB,CAAyB,KAAKJ,OAA9B,CAAP;AACH;AACD;;;;;;;;8CAKoBK,M,EAAQ;AACxB,gBAAI,gBAAgBC,eAApB,EAAqC;AACjC,qBAAOD,MAAM,CAACnC,UAAP,CAAkB3B,QAAzB;AACH;;AACD,gBAAI,gBAAgBgE,eAApB,EAAqC;AACjC,qBAAOF,MAAM,CAAClC,UAAP,CAAkB5B,QAAzB;AACH,aAFD,MAGK;AACD,qBAAO8D,MAAM,CAACrC,IAAP,CAAYzB,QAAnB;AACH;AACJ;;;;;;AAELqD,gBAAU,CAACpD,IAAX,GAAkB,SAASgE,kBAAT,CAA4B9D,CAA5B,EAA+B;AAAE,eAAO,KAAKA,CAAC,IAAIkD,UAAV,EAAsB,gEAAyB,yDAAzB,CAAtB,EAAoE,gEAAyB,6DAAzB,CAApE,CAAP;AAA+H,OAAlL;;AACAA,gBAAU,CAACjD,IAAX,GAAkB,gEAAyB;AAAEC,YAAI,EAAEgD,UAAR;AAAoBrB,gBAAQ,EAAE,CAAC,kEAAD;AAA9B,OAAzB,CAAlB;AACA;;AACAqB,gBAAU,CAAC9C,cAAX,GAA4B;AAAA,eAAM,CAC9B;AAAEF,cAAI,EAAE;AAAR,SAD8B,EAE9B;AAAEA,cAAI,EAAE;AAAR,SAF8B,CAAN;AAAA,OAA5B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBgD,UAAzB,EAAqC,CAAC;AAC3DhD,cAAI,EAAE;AADqD,SAAD,CAArC,EAErB,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAE;AAAR,WAAD,EAA+B;AAAEA,gBAAI,EAAE;AAAR,WAA/B,CAAP;AAA0E,SAFnE,EAEqE,IAFrE;AAE6E,OAF5F;;AAGd,UAAI,KAAJ,EAAW,CAsBV,C,CACD;;AACA;;;;;UAGM6D,mB;;;;;;;;;;;;QAA4Bb,U;AAElC;;;AACA,UAAMc,oBAAoB,GAAGhF,mBAAmB,CAAC+E,mBAAD,CAAhD;AACA;;;;;;UAIMH,e;;;;;AACF;;;;;AAKA,iCAAY/D,QAAZ,EAAsBsD,QAAtB,EAAgCvC,MAAhC,EAAwC;AAAA;;AAAA;;AACpC,sCAAMf,QAAN,EAAgBsD,QAAhB;AACA,iBAAKvC,MAAL,GAAcA,MAAd;AAFoC;AAGvC,S,CACD;AACA;;AACA;;;;;;;;sCAIYwC,O,EAAS;AACjB,6FAAkBA,OAAlB;AACH;;;;QAlByBY,oB;;AAoB9BJ,qBAAe,CAAC9D,IAAhB,GAAuB,SAASmE,uBAAT,CAAiCjE,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI4D,eAAV,EAA2B,gEAAyB,yDAAzB,CAA3B,EAAyE,gEAAyB,6DAAzB,CAAzE,EAA2H,gEAAyBpE,SAAzB,EAAoC,CAApC,CAA3H,CAAP;AAA4K,OAAzO;;AACAoE,qBAAe,CAAC3D,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAE0D,eAAR;AAAyBzD,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmEuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C3B,gBAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,SAA3E;AAAqKE,gBAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA/K,OAAzB,CAAvB;AACA;;AACA+B,qBAAe,CAACxD,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEF,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,EAGnC;AAAEA,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAACM,SAAD;AAAtB,WAAD,EAAuC;AAAEU,gBAAI,EAAE;AAAR,WAAvC;AAA/B,SAHmC,CAAN;AAAA,OAAjC;AAKA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB0D,eAAzB,EAA0C,CAAC;AAChE1D,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,mBADX;AAEC0E,kBAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAFT,WAAD;AAF0D,SAAD,CAA1C,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAExB,gBAAI,EAAE;AAAR,WAAD,EAA+B;AAAEA,gBAAI,EAAE;AAAR,WAA/B,EAAiE;AAAEA,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9G9B,kBAAI,EAAE,oDADwG;AAE9GhB,kBAAI,EAAE,CAACM,SAAD;AAFwG,aAAD,EAG9G;AACCU,kBAAI,EAAE;AADP,aAH8G;AAA/B,WAAjE,CAAP;AAKF,SAXS,EAWP,IAXO;AAWC,OAXhB;;AAYd,UAAI,KAAJ,EAAW,CAKV,C,CACD;;AACA;;;;;UAGMgE,mB;;;;;;;;;;;;QAA4BhB,U;AAElC;;;AACA,UAAMiB,oBAAoB,GAAGnF,mBAAmB,CAACkF,mBAAD,CAAhD;AACA;;;;;;UAIML,e;;;;;AACF;;;;;AAKA,iCAAYhE,QAAZ,EAAsBsD,QAAtB,EAAgCvC,MAAhC,EAAwC;AAAA;;AAAA;;AACpC,sCAAMf,QAAN,EAAgBsD,QAAhB;AACA,iBAAKvC,MAAL,GAAcA,MAAd;AAFoC;AAGvC,S,CACD;AACA;;AACA;;;;;;;;sCAIYwC,O,EAAS;AACjB,6FAAkBA,OAAlB;AACH;;;;QAlByBe,oB;;AAoB9BN,qBAAe,CAAC/D,IAAhB,GAAuB,SAASsE,uBAAT,CAAiCpE,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI6D,eAAV,EAA2B,gEAAyB,yDAAzB,CAA3B,EAAyE,gEAAyB,6DAAzB,CAAzE,EAA2H,gEAAyBrE,SAAzB,EAAoC,CAApC,CAA3H,CAAP;AAA4K,OAAzO;;AACAqE,qBAAe,CAAC5D,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAE2D,eAAR;AAAyB1D,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmEuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C3B,gBAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,SAA3E;AAAqKE,gBAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA/K,OAAzB,CAAvB;AACA;;AACAgC,qBAAe,CAACzD,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEF,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,EAGnC;AAAEA,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAACM,SAAD;AAAtB,WAAD,EAAuC;AAAEU,gBAAI,EAAE;AAAR,WAAvC;AAA/B,SAHmC,CAAN;AAAA,OAAjC;AAKA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB2D,eAAzB,EAA0C,CAAC;AAChE3D,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,mBADX;AAEC0E,kBAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAFT,WAAD;AAF0D,SAAD,CAA1C,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAExB,gBAAI,EAAE;AAAR,WAAD,EAA+B;AAAEA,gBAAI,EAAE;AAAR,WAA/B,EAAiE;AAAEA,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9G9B,kBAAI,EAAE,oDADwG;AAE9GhB,kBAAI,EAAE,CAACM,SAAD;AAFwG,aAAD,EAG9G;AACCU,kBAAI,EAAE;AADP,aAH8G;AAA/B,WAAjE,CAAP;AAKF,SAXS,EAWP,IAXO;AAWC,OAXhB;;AAYd,UAAI,KAAJ,EAAW,CAKV;AACD;;;;;;;;UAMMmE,S;;;;;AACF;AACA;;AACA;;;;;AAKA,2BAAYxE,QAAZ,EAAsBsD,QAAtB,EAAgCvC,MAAhC,EAAwC;AAAA;;AAAA;;AACpC,uCAAMf,QAAN,EAAgBsD,QAAhB;AACA,iBAAKvC,MAAL,GAAcA,MAAd;AAFoC;AAGvC;;;QAXmBsC,U;;AAaxBmB,eAAS,CAACvE,IAAV,GAAiB,SAASwE,iBAAT,CAA2BtE,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIqE,SAAV,EAAqB,gEAAyB,yDAAzB,CAArB,EAAmE,gEAAyB,6DAAzB,CAAnE,EAAqH,gEAAyB7E,SAAzB,EAAoC,CAApC,CAArH,CAAP;AAAsK,OAAvN;;AACA6E,eAAS,CAACpE,IAAV,GAAiB,gEAAyB;AAAEC,YAAI,EAAEmE,SAAR;AAAmBlE,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAAX;AAA4CiB,cAAI,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAAlD,SAA/D;AAA8I1C,gBAAQ,EAAE,CAAC,wEAAD;AAAxJ,OAAzB,CAAjB;AACA;;AACAwC,eAAS,CAACjE,cAAV,GAA2B;AAAA,eAAM,CAC7B;AAAEF,cAAI,EAAE;AAAR,SAD6B,EAE7B;AAAEA,cAAI,EAAE;AAAR,SAF6B,EAG7B;AAAEA,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAACM,SAAD;AAAtB,WAAD,EAAuC;AAAEU,gBAAI,EAAE;AAAR,WAAvC;AAA/B,SAH6B,CAAN;AAAA,OAA3B;AAKA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmE,SAAzB,EAAoC,CAAC;AAC1DnE,cAAI,EAAE,uDADoD;AAE1DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,aADX;AAEC0E,kBAAM,EAAE,CAAC,2BAAD,EAA8B,qBAA9B;AAFT,WAAD;AAFoD,SAAD,CAApC,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAExB,gBAAI,EAAE;AAAR,WAAD,EAA+B;AAAEA,gBAAI,EAAE;AAAR,WAA/B,EAAiE;AAAEA,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9G9B,kBAAI,EAAE,oDADwG;AAE9GhB,kBAAI,EAAE,CAACM,SAAD;AAFwG,aAAD,EAG9G;AACCU,kBAAI,EAAE;AADP,aAH8G;AAA/B,WAAjE,CAAP;AAKF,SAXS,EAWP,IAXO;AAWC,OAXhB;;AAYd,UAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;AAKA,eAASsE,uBAAT,GAAmC,CAAG;;AACtC,UAAI,KAAJ,EAAW,CAoCV;AACD;;;;;;;;;AAOA,eAASC,4BAAT,GAAwC,CAAG;;AAC3C,UAAI,KAAJ,EAAW,CAyCV;AACD;;;;;;UAIMC,a;AACF;;;AAGA,+BAAYC,cAAZ,EAA4B;AAAA;;AACxB,eAAKA,cAAL,GAAsBA,cAAtB;AACAD,uBAAa,CAACE,oBAAd,GAAqC,IAArC;AACH;AACD;;;;;;;wCAGc;AACV;AACA;AACA,gBAAIF,aAAa,CAACE,oBAAd,KAAuC,IAA3C,EAAiD;AAC7CF,2BAAa,CAACE,oBAAd,GAAqC,IAArC;AACH;AACJ;;;;;;AAELF,mBAAa,CAAC5E,IAAd,GAAqB,SAAS+E,qBAAT,CAA+B7E,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAI0E,aAAV,EAAyB,gEAAyB,8DAAzB,CAAzB,CAAP;AAAqF,OAA9I;;AACAA,mBAAa,CAACzE,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAEwE,aAAR;AAAuBvE,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD;AAAlC,OAAzB,CAArB;AACA;;;;;;;;AAOAuE,mBAAa,CAACE,oBAAd,GAAqC,IAArC;AACA;;AACAF,mBAAa,CAACtE,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAE;AAAR,SADiC,CAAN;AAAA,OAA/B;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBwE,aAAzB,EAAwC,CAAC;AAC9DxE,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAFwD,SAAD,CAAxC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,CAAP;AAA6C,SAHtC,EAGwC,IAHxC;AAGgD,OAH/D;;AAId,UAAI,KAAJ,EAAW,CAsBV;AACD;;;;;UAGM4E,Y;;;;AAENA,kBAAY,CAAChF,IAAb,GAAoB,SAASiF,oBAAT,CAA8B/E,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI8E,YAAV,GAAP;AAAmC,OAA1F;;AACAA,kBAAY,CAACE,IAAb,GAAoB,gEAAyB;AAAE9E,YAAI,EAAE4E,YAAR;AAAsB3E,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsIsC,aAAK,EAAE,CAA7I;AAAgJC,YAAI,EAAE,CAAtJ;AAAyJC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAjK;AAA0LtF,gBAAQ,EAAE,SAASuF,qBAAT,CAA+B/G,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/R,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFsC;AAEpCgH,kBAAU,EAAE,CAACX,aAAD,CAFwB;AAEPY,qBAAa,EAAE;AAFR,OAAzB,CAApB;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBR,YAAzB,EAAuC,CAAC;AAC7D5E,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oCADX;AAEC6C,oBAAQ,EAAEoD,gBAFX;AAGCL,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG;AAVlC,WAAD;AAFuD,SAAD,CAAvC,EAcrB,IAdqB,EAcf,IAde;AAcP,OAdR;AAed;;;;;UAGMC,Y;;;;AAENA,kBAAY,CAAC5F,IAAb,GAAoB,SAAS6F,oBAAT,CAA8B3F,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI0F,YAAV,GAAP;AAAmC,OAA1F;;AACAA,kBAAY,CAACV,IAAb,GAAoB,gEAAyB;AAAE9E,YAAI,EAAEwF,YAAR;AAAsBvF,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsIsC,aAAK,EAAE,CAA7I;AAAgJC,YAAI,EAAE,CAAtJ;AAAyJC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAjK;AAA0LtF,gBAAQ,EAAE,SAAS+F,qBAAT,CAA+BvH,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/R,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFsC;AAEpCgH,kBAAU,EAAE,CAACX,aAAD,CAFwB;AAEPY,qBAAa,EAAE;AAFR,OAAzB,CAApB;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBI,YAAzB,EAAuC,CAAC;AAC7DxF,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oCADX;AAEC6C,oBAAQ,EAAEoD,gBAFX;AAGCL,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG;AAVlC,WAAD;AAFuD,SAAD,CAAvC,EAcrB,IAdqB,EAcf,IAde;AAcP,OAdR;AAed;;;;;UAGMI,M;;;;AAENA,YAAM,CAAC/F,IAAP,GAAc,SAASgG,cAAT,CAAwB9F,CAAxB,EAA2B;AAAE,eAAO,KAAKA,CAAC,IAAI6F,MAAV,GAAP;AAA6B,OAAxE;;AACAA,YAAM,CAACb,IAAP,GAAc,gEAAyB;AAAE9E,YAAI,EAAE2F,MAAR;AAAgB1F,iBAAS,EAAE,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,IAAD,EAAO,SAAP,EAAkB,EAAlB,CAAd,CAA3B;AAAiEwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,SAAnB,CAA5E;AAA2GsC,aAAK,EAAE,CAAlH;AAAqHC,YAAI,EAAE,CAA3H;AAA8HC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAtI;AAA+JtF,gBAAQ,EAAE,SAASkG,eAAT,CAAyB1H,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACxP,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFgC;AAE9BgH,kBAAU,EAAE,CAACX,aAAD,CAFkB;AAEDY,qBAAa,EAAE;AAFd,OAAzB,CAAd;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBO,MAAzB,EAAiC,CAAC;AACvD3F,cAAI,EAAE,uDADiD;AAEvDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sBADX;AAEC6C,oBAAQ,EAAEoD,gBAFX;AAGCL,gBAAI,EAAE;AACF,uBAAS,SADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG;AAVlC,WAAD;AAFiD,SAAD,CAAjC,EAcrB,IAdqB,EAcf,IAde;AAcP,OAdR;AAgBd;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAKA,UAAMO,iBAAiB,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAA1B;AACA;;;;;UAIMC,Y;AACF;;;;;;;;;AASA,8BAAYC,kBAAZ,EAAgCC,aAAhC,EAA+CC,SAA/C,EAA6E;AAAA,cAAnBC,UAAmB,uEAAN,IAAM;;AAAA;;AACzE,eAAKH,kBAAL,GAA0BA,kBAA1B;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACH;AACD;;;;;;;;;;;iDAOuBC,I,EAAMC,gB,EAAkB;AAAA,uDACzBD,IADyB;AAAA;;AAAA;AAC3C,kEAAwB;AAAA,oBAAbE,GAAa;;AACpB;AACA;AACA,oBAAIA,GAAG,CAACC,QAAJ,KAAiBD,GAAG,CAACE,YAAzB,EAAuC;AACnC;AACH;;AACD,qBAAKC,kBAAL,CAAwBH,GAAxB,EAA6BD,gBAA7B;;AACA,qBAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,QAAJ,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C;AACA,sBAAMtF,IAAI;AAAI;AAAkBkF,qBAAG,CAACK,QAAJ,CAAaD,CAAb,CAAhC;;AACA,uBAAKD,kBAAL,CAAwBrF,IAAxB,EAA8BiF,gBAA9B;AACH;AACJ;AAb0C;AAAA;AAAA;AAAA;AAAA;AAc9C;AACD;;;;;;;;;;;;;8CAUoBD,I,EAAMS,iB,EAAmBC,e,EAAiB;AAC1D;AACA,gBAAMC,gBAAgB,GAAGF,iBAAiB,CAACG,IAAlB;AAAwB;;;;AAIjD,sBAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAJoB,KAILH,eAAe,CAACE,IAAhB;AAAsB;;;;AAI1C,sBAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAJe,CAJpB;;AASA,gBAAI,CAACb,IAAI,CAACQ,MAAN,IAAgB,CAACG,gBAAjB,IAAqC,CAAC,KAAKZ,UAA/C,EAA2D;AACvD;AACH;AACD;;;AACA,gBAAMe,QAAQ,GAAGd,IAAI,CAAC,CAAD,CAArB;AACA;;AACA,gBAAMe,QAAQ,GAAGD,QAAQ,CAACP,QAAT,CAAkBC,MAAnC;AACA;;AACA,gBAAMQ,UAAU,GAAG,KAAKC,cAAL,CAAoBH,QAApB,CAAnB;AACA;;;AACA,gBAAMI,cAAc,GAAG,KAAKC,8BAAL,CAAoCH,UAApC,EAAgDP,iBAAhD,CAAvB;AACA;;;AACA,gBAAMW,YAAY,GAAG,KAAKC,4BAAL,CAAkCL,UAAlC,EAA8CN,eAA9C,CAArB;AACA;;;AACA,gBAAMY,KAAK,GAAG,KAAKxB,SAAL,KAAmB,KAAjC;;AAzB0D,wDA0BxCE,IA1BwC;AAAA;;AAAA;AA0B1D,qEAAwB;AAAA,oBAAbE,GAAa;;AACpB,qBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,QAApB,EAA8BT,CAAC,EAA/B,EAAmC;AAC/B;AACA,sBAAMtF,IAAI;AAAI;AAAkBkF,qBAAG,CAACK,QAAJ,CAAaD,CAAb,CAAhC;;AACA,sBAAIG,iBAAiB,CAACH,CAAD,CAArB,EAA0B;AACtB,yBAAKiB,eAAL,CAAqBvG,IAArB,EAA2BsG,KAAK,GAAG,OAAH,GAAa,MAA7C,EAAqDJ,cAAc,CAACZ,CAAD,CAAnE;AACH;;AACD,sBAAII,eAAe,CAACJ,CAAD,CAAnB,EAAwB;AACpB,yBAAKiB,eAAL,CAAqBvG,IAArB,EAA2BsG,KAAK,GAAG,MAAH,GAAY,OAA5C,EAAqDF,YAAY,CAACd,CAAD,CAAjE;AACH;AACJ;AACJ;AArCyD;AAAA;AAAA;AAAA;AAAA;AAsC7D;AACD;;;;;;;;;;;;;;;oCAYUkB,W,EAAaC,Y,EAAcC,Q,EAAU;AAC3C;AACA,gBAAI,CAAC,KAAK3B,UAAV,EAAsB;AAClB;AACH,aAJ0C,CAK3C;AACA;;AACA;;;AACA,gBAAMC,IAAI,GAAG0B,QAAQ,KAAK,QAAb,GAAwBF,WAAW,CAACG,OAAZ,EAAxB,GAAgDH,WAA7D;AACA;;AACA,gBAAII,YAAY,GAAG,CAAnB;;AACA,iBAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG7B,IAAI,CAACQ,MAAvC,EAA+CqB,QAAQ,EAAvD,EAA2D;AACvD,kBAAI,CAACJ,YAAY,CAACI,QAAD,CAAjB,EAA6B;AACzB;AACH;AACD;;;AACA,kBAAM3B,GAAG,GAAGF,IAAI,CAAC6B,QAAD,CAAhB;;AACA,kBAAI,KAAKjC,kBAAT,EAA6B;AACzB,qBAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,GAAG,CAACK,QAAJ,CAAaC,MAAjC,EAAyCsB,CAAC,EAA1C,EAA8C;AAC1C;AACA,sBAAM9G,IAAI;AAAI;AAAkBkF,qBAAG,CAACK,QAAJ,CAAauB,CAAb,CAAhC;;AACA,uBAAKP,eAAL,CAAqBvG,IAArB,EAA2B0G,QAA3B,EAAqCE,YAArC;AACH;AACJ,eAND,MAOK;AACD;AACA;AACA,qBAAKL,eAAL,CAAqBrB,GAArB,EAA0BwB,QAA1B,EAAoCE,YAApC;AACH;;AACD,kBAAIC,QAAQ,KAAK7B,IAAI,CAACQ,MAAL,GAAc,CAA/B,EAAkC;AAC9B;AACA;AACH;;AACDoB,0BAAY,IAAI1B,GAAG,CAAC6B,qBAAJ,GAA4BC,MAA5C;AACH;AACJ;AACD;;;;;;;;;;;;sDAS4BC,Y,EAAcR,Y,EAAc;AACpD,gBAAI,CAAC,KAAK7B,kBAAV,EAA8B;AAC1B;AACH;AACD;;;AACA,gBAAMsC,KAAK;AAAI;AAAkBD,wBAAY,CAACE,aAAb,CAA2B,OAA3B,CAAjC;;AACA,gBAAIV,YAAY,CAACb,IAAb;AAAmB;;;;AAIvB,sBAAAC,KAAK;AAAA,qBAAI,CAACA,KAAL;AAAA,aAJD,CAAJ,EAImB;AACf,mBAAKR,kBAAL,CAAwB6B,KAAxB,EAA+B,CAAC,QAAD,CAA/B;AACH,aAND,MAOK;AACD,mBAAKX,eAAL,CAAqBW,KAArB,EAA4B,QAA5B,EAAsC,CAAtC;AACH;AACJ;AACD;;;;;;;;;;;6CAQmBE,O,EAASnC,gB,EAAkB;AAAA,wDACxBA,gBADwB;AAAA;;AAAA;AAC1C,qEAAoC;AAAA,oBAAzBoC,GAAyB;AAChCD,uBAAO,CAACE,KAAR,CAAcD,GAAd,IAAqB,EAArB;AACH;AAHyC;AAAA;AAAA;AAAA;AAAA;;AAI1CD,mBAAO,CAACE,KAAR,CAAcC,MAAd,GAAuB,KAAKC,oBAAL,CAA0BJ,OAA1B,CAAvB,CAJ0C,CAK1C;AACA;;AACA;;AACA,gBAAMK,YAAY,GAAG/C,iBAAiB,CAACkB,IAAlB;AAAwB;;;;AAI7C,sBAAAyB,GAAG;AAAA,qBAAI,CAAC,CAACD,OAAO,CAACE,KAAR,CAAcD,GAAd,CAAN;AAAA,aAJkB,CAArB;;AAKA,gBAAI,CAACI,YAAL,EAAmB;AACfL,qBAAO,CAACE,KAAR,CAAcZ,QAAd,GAAyB,EAAzB;AACAU,qBAAO,CAACnG,SAAR,CAAkByG,MAAlB,CAAyB,KAAK7C,aAA9B;AACH;AACJ;AACD;;;;;;;;;;;;0CASgBuC,O,EAASC,G,EAAKM,Q,EAAU;AACpCP,mBAAO,CAACnG,SAAR,CAAkBC,GAAlB,CAAsB,KAAK2D,aAA3B;AACAuC,mBAAO,CAACE,KAAR,CAAcD,GAAd,cAAwBM,QAAxB;AACAP,mBAAO,CAACE,KAAR,CAAcM,OAAd,IAAyB,8CAAzB;AACAR,mBAAO,CAACE,KAAR,CAAcC,MAAd,GAAuB,KAAKC,oBAAL,CAA0BJ,OAA1B,CAAvB;AACH;AACD;;;;;;;;;;;;;;;;+CAaqBA,O,EAAS;AAC1B;AACA,gBAAMS,gBAAgB,GAAG;AACrBC,iBAAG,EAAE,GADgB;AAErBC,oBAAM,EAAE,EAFa;AAGrBC,kBAAI,EAAE,CAHe;AAIrBC,mBAAK,EAAE;AAJc,aAAzB;AAMA;;AACA,gBAAIV,MAAM,GAAG,CAAb,CAT0B,CAU1B;AACA;AACA;;AAZ0B;AAaP;AAAkB7C,6BAbX;AAAA;;AAAA;AAa1B,qEAA0D;AAAA,oBAA/C2C,GAA+C;;AACtD,oBAAID,OAAO,CAACE,KAAR,CAAcD,GAAd,CAAJ,EAAwB;AACpBE,wBAAM,IAAIM,gBAAgB,CAACR,GAAD,CAA1B;AACH;AACJ;AAjByB;AAAA;AAAA;AAAA;AAAA;;AAkB1B,mBAAOE,MAAM,aAAMA,MAAN,IAAiB,EAA9B;AACH;AACD;;;;;;;;yCAKerC,G,EAAK;AAChB;AACA,gBAAMc,UAAU,GAAG,EAAnB;AACA;;AACA,gBAAMkC,aAAa,GAAGhD,GAAG,CAACK,QAA1B;;AACA,iBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,aAAa,CAAC1C,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC3C;AACA,kBAAItF,IAAI;AAAI;AAAkBkI,2BAAa,CAAC5C,CAAD,CAA3C;AACAU,wBAAU,CAACtJ,IAAX,CAAgBsD,IAAI,CAAC+G,qBAAL,GAA6BoB,KAA7C;AACH;;AACD,mBAAOnC,UAAP;AACH;AACD;;;;;;;;;;;yDAQ+BoC,M,EAAQ3B,Y,EAAc;AACjD;AACA,gBAAM4B,SAAS,GAAG,EAAlB;AACA;;AACA,gBAAIC,YAAY,GAAG,CAAnB;;AACA,iBAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8C,MAAM,CAAC5C,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACpC,kBAAImB,YAAY,CAACnB,CAAD,CAAhB,EAAqB;AACjB+C,yBAAS,CAAC/C,CAAD,CAAT,GAAegD,YAAf;AACAA,4BAAY,IAAIF,MAAM,CAAC9C,CAAD,CAAtB;AACH;AACJ;;AACD,mBAAO+C,SAAP;AACH;AACD;;;;;;;;;;;uDAQ6BD,M,EAAQ3B,Y,EAAc;AAC/C;AACA,gBAAM4B,SAAS,GAAG,EAAlB;AACA;;AACA,gBAAIC,YAAY,GAAG,CAAnB;;AACA,iBAAK,IAAIhD,CAAC,GAAG8C,MAAM,CAAC5C,MAApB,EAA4BF,CAAC,GAAG,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;AACpC,kBAAImB,YAAY,CAACnB,CAAD,CAAhB,EAAqB;AACjB+C,yBAAS,CAAC/C,CAAD,CAAT,GAAegD,YAAf;AACAA,4BAAY,IAAIF,MAAM,CAAC9C,CAAD,CAAtB;AACH;AACJ;;AACD,mBAAO+C,SAAP;AACH;;;;;;AAEL,UAAI,KAAJ,EAAW,CAkBV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;;;AAMA,eAASE,0BAAT,CAAoCC,EAApC,EAAwC;AACpC,eAAOC,KAAK,2CAAmCD,EAAnC,SAAZ;AACH;AACD;;;;;;;;AAMA,eAASE,gCAAT,CAA0CjR,IAA1C,EAAgD;AAC5C,eAAOgR,KAAK,wDAAgDhR,IAAhD,SAAZ;AACH;AACD;;;;;;;AAKA,eAASkR,mCAAT,GAA+C;AAC3C,eAAOF,KAAK,wEAAZ;AACH;AACD;;;;;;;;AAMA,eAASG,kCAAT,CAA4CrT,IAA5C,EAAkD;AAC9C,eAAOkT,KAAK,CAAC,kFACaI,IAAI,CAACC,SAAL,CAAevT,IAAf,CADb,CAAD,CAAZ;AAEH;AACD;;;;;;;AAKA,eAASwT,2BAAT,GAAuC;AACnC,eAAON,KAAK,CAAC,sDACT,oDADQ,CAAZ;AAEH;AACD;;;;;;;AAKA,eAASO,8BAAT,GAA0C;AACtC,eAAOP,KAAK,0EAAZ;AACH;AACD;;;;;;;AAKA,eAASQ,yCAAT,GAAqD;AACjD,eAAOR,KAAK,+DAAZ;AACH;AACD;;;;;;;AAKA,eAASS,kCAAT,GAA8C;AAC1C,eAAOT,KAAK,uCAAZ;AACH;AAED;;;;;;AAKA;;;;;;AAIA,eAASU,SAAT,GAAqB,CAAG;;AACxB,UAAI,KAAJ,EAAW,CAGV;AACD;;;;;;UAIMC,a;AACF;;;;AAIA,6BAAYC,aAAZ,EAA2BvI,UAA3B,EAAuC;AAAA;;AACnC,aAAKuI,aAAL,GAAqBA,aAArB;AACA,aAAKvI,UAAL,GAAkBA,UAAlB;AACH,O;;AAELsI,mBAAa,CAAC5K,IAAd,GAAqB,SAAS8K,qBAAT,CAA+B5K,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAI0K,aAAV,EAAyB,gEAAyB,8DAAzB,CAAzB,EAA4E,gEAAyB,wDAAzB,CAA5E,CAAP;AAAkI,OAA3L;;AACAA,mBAAa,CAACzK,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAEwK,aAAR;AAAuBvK,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAAlC,OAAzB,CAArB;AACA;;AACAuK,mBAAa,CAACtK,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAE;AAAR,SADiC,EAEjC;AAAEA,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBwK,aAAzB,EAAwC,CAAC;AAC9DxK,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAFwD,SAAD,CAAxC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,EAAoC;AAAEA,gBAAI,EAAE;AAAR,WAApC,CAAP;AAA0E,SAHnE,EAGqE,IAHrE;AAG6E,OAH5F;;AAId,UAAI,KAAJ,EAAW,CAKV;AACD;;;;;;UAIM2K,e;AACF;;;;AAIA,+BAAYF,aAAZ,EAA2BvI,UAA3B,EAAuC;AAAA;;AACnC,aAAKuI,aAAL,GAAqBA,aAArB;AACA,aAAKvI,UAAL,GAAkBA,UAAlB;AACH,O;;AAELyI,qBAAe,CAAC/K,IAAhB,GAAuB,SAASgL,uBAAT,CAAiC9K,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI6K,eAAV,EAA2B,gEAAyB,8DAAzB,CAA3B,EAA8E,gEAAyB,wDAAzB,CAA9E,CAAP;AAAoI,OAAjM;;AACAA,qBAAe,CAAC5K,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAE2K,eAAR;AAAyB1K,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD;AAApC,OAAzB,CAAvB;AACA;;AACA0K,qBAAe,CAACzK,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEF,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,CAAN;AAAA,OAAjC;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB2K,eAAzB,EAA0C,CAAC;AAChE3K,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAF0D,SAAD,CAA1C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,EAAoC;AAAEA,gBAAI,EAAE;AAAR,WAApC,CAAP;AAA0E,SAHnE,EAGqE,IAHrE;AAG6E,OAH5F;;AAId,UAAI,KAAJ,EAAW,CAKV;AACD;;;;;;UAIM6K,e;AACF;;;;AAIA,+BAAYJ,aAAZ,EAA2BvI,UAA3B,EAAuC;AAAA;;AACnC,aAAKuI,aAAL,GAAqBA,aAArB;AACA,aAAKvI,UAAL,GAAkBA,UAAlB;AACH,O;;AAEL2I,qBAAe,CAACjL,IAAhB,GAAuB,SAASkL,uBAAT,CAAiChL,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI+K,eAAV,EAA2B,gEAAyB,8DAAzB,CAA3B,EAA8E,gEAAyB,wDAAzB,CAA9E,CAAP;AAAoI,OAAjM;;AACAA,qBAAe,CAAC9K,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAE6K,eAAR;AAAyB5K,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD;AAApC,OAAzB,CAAvB;AACA;;AACA4K,qBAAe,CAAC3K,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEF,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,CAAN;AAAA,OAAjC;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB6K,eAAzB,EAA0C,CAAC;AAChE7K,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AAAElC,oBAAQ,EAAE;AAAZ,WAAD;AAF0D,SAAD,CAA1C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAEkD,gBAAI,EAAE;AAAR,WAAD,EAAoC;AAAEA,gBAAI,EAAE;AAAR,WAApC,CAAP;AAA0E,SAHnE,EAGqE,IAHrE;AAG6E,OAH5F;;AAId,UAAI,KAAJ,EAAW,CAKV;AACD;;;;;;;;AAMA,UAAM+K,kBAAkB,GACxB;AACA;AAFwB,uMAAxB;AASA;;;;;;;AAMA,eAASC,UAAT,GAAsB,CAAG;AACzB;;;;;;;;UAMMC,U;;;;;;;;;;;;QAAmB,6D;AAEzB;;;;;;;;;;;;;;;;;AAeA,eAASC,SAAT,GAAqB,CAAG;;AACxB,UAAI,KAAJ,EAAW,CAOV;AACD;;;;;;;;;UAOMC,Q;AACF;;;;;;;;;AASA,0BAAYlI,QAAZ,EAAsBmI,kBAAtB,EAA0CC,WAA1C,EAAuDC,IAAvD,EAA6DC,IAA7D,EAAmEC,SAAnE,EAA8EC,SAA9E,EAAyF;AAAA;;AACrF,eAAKxI,QAAL,GAAgBA,QAAhB;AACA,eAAKmI,kBAAL,GAA0BA,kBAA1B;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACA,eAAKE,IAAL,GAAYA,IAAZ;AACA,eAAKE,SAAL,GAAiBA,SAAjB;AACA;;;;AAGA,eAAKC,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;;;AAKA,eAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AACA;;;;;;AAKA,eAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AACA;;;;;;AAKA,eAAKC,cAAL,GAAsB,IAAID,GAAJ,EAAtB;AACA;;;;;;AAKA,eAAKE,oBAAL,GAA4B,IAAIF,GAAJ,EAA5B;AACA;;;;;;AAKA,eAAKG,oBAAL,GAA4B,IAAIH,GAAJ,EAA5B;AACA;;;;;AAIA,eAAKI,oBAAL,GAA4B,IAA5B;AACA;;;;;AAIA,eAAKC,oBAAL,GAA4B,IAA5B;AACA;;;;;;;;;;;;;;AAaA,eAAKC,oBAAL,GAA4B,IAAIR,GAAJ,EAA5B;AACA;;;;;AAIA,eAAKS,cAAL,GAAsB,kBAAtB;AACA,eAAKC,sBAAL,GAA8B,KAA9B,CArEqF,CAsErF;AACA;;AACA;;;;;;;AAMA,eAAKC,UAAL,GAAkB,IAAI,oDAAJ,CAAoB;AAAEC,iBAAK,EAAE,CAAT;AAAYC,eAAG,EAAEC,MAAM,CAACC;AAAxB,WAApB,CAAlB;;AACA,cAAI,CAACrB,IAAL,EAAW;AACP,iBAAKD,WAAL,CAAiBjJ,aAAjB,CAA+BwK,YAA/B,CAA4C,MAA5C,EAAoD,MAApD;AACH;;AACD,eAAKpB,SAAL,GAAiBA,SAAjB;AACA,eAAKxF,kBAAL,GAA0B,KAAKqF,WAAL,CAAiBjJ,aAAjB,CAA+ByK,QAA/B,KAA4C,OAAtE;AACH;AACD;;;;;;;;;;;;AA4EA;;;qCAGW;AAAA;;AACP,iBAAKC,kBAAL;;AACA,gBAAI,KAAK9G,kBAAT,EAA6B;AACzB,mBAAK+G,yBAAL;AACH,aAJM,CAKP;AACA;AACA;;;AACA,iBAAKC,WAAL,GAAmB,KAAK/J,QAAL,CAAcK,IAAd,CAAmB,EAAnB,EAAuBC,MAAvB;AAA+B;;;;;AAKlD,sBAAC0J,EAAD,EAAKC,OAAL,EAAiB;AACb,qBAAO,MAAI,CAACC,OAAL,GAAe,MAAI,CAACA,OAAL,CAAaD,OAAO,CAACE,SAArB,EAAgCF,OAAO,CAACvW,IAAxC,CAAf,GAA+DuW,OAAtE;AACH,aAPkB,CAAnB;AAQH;AACD;;;;;;kDAGwB;AACpB;AACA,iBAAKG,aAAL;;AACA,iBAAKC,gBAAL,GAHoB,CAIpB;;;AACA,gBAAI,CAAC,KAAKC,cAAL,CAAoB3G,MAArB,IAA+B,CAAC,KAAK4G,cAAL,CAAoB5G,MAApD,IAA8D,CAAC,KAAK6G,QAAL,CAAc7G,MAAjF,EAAyF;AACrF,oBAAMuD,2BAA2B,EAAjC;AACH,aAPmB,CAQpB;;;AACA,iBAAKuD,qBAAL,GAToB,CAUpB;;;AACA,gBAAI,KAAKxB,oBAAT,EAA+B;AAC3B,mBAAKyB,sBAAL;;AACA,mBAAKzB,oBAAL,GAA4B,KAA5B;AACH,aAdmB,CAepB;;;AACA,gBAAI,KAAKC,oBAAT,EAA+B;AAC3B,mBAAKyB,sBAAL;;AACA,mBAAKzB,oBAAL,GAA4B,KAA5B;AACH,aAnBmB,CAoBpB;AACA;;;AACA,gBAAI,KAAK0B,UAAL,IAAmB,KAAKJ,QAAL,CAAc7G,MAAd,GAAuB,CAA1C,IAA+C,CAAC,KAAKkH,yBAAzD,EAAoF;AAChF,mBAAKC,qBAAL;AACH;;AACD,iBAAKC,kBAAL;AACH;AACD;;;;;;wCAGc;AACV,iBAAKC,UAAL,CAAgBxD,aAAhB,CAA8ByD,KAA9B;;AACA,iBAAKC,gBAAL,CAAsB1D,aAAtB,CAAoCyD,KAApC;;AACA,iBAAKE,gBAAL,CAAsB3D,aAAtB,CAAoCyD,KAApC;;AACA,iBAAK9B,oBAAL,CAA0B8B,KAA1B;;AACA,iBAAKxC,UAAL,CAAgB2C,IAAhB;;AACA,iBAAK3C,UAAL,CAAgB4C,QAAhB;;AACA,gBAAI,8EAAa,KAAKT,UAAlB,CAAJ,EAAmC;AAC/B,mBAAKA,UAAL,CAAgBU,UAAhB,CAA2B,IAA3B;AACH;AACJ;AACD;;;;;;;;;;;;;;uCAWa;AAAA;;AACT,iBAAKC,WAAL,GAAmB,KAAKC,iBAAL,EAAnB;AACA;;AACA,gBAAMvL,OAAO,GAAG,KAAK8J,WAAL,CAAiBxJ,IAAjB,CAAsB,KAAKgL,WAA3B,CAAhB;;AACA,gBAAI,CAACtL,OAAL,EAAc;AACV;AACH;AACD;;;AACA,gBAAMuH,aAAa,GAAG,KAAKwD,UAAL,CAAgBxD,aAAtC;AACAvH,mBAAO,CAACwL,gBAAR;AAA0B;;;;;;AAM1B,sBAACC,MAAD,EAASC,SAAT,EAAoBC,YAApB,EAAqC;AACjC,kBAAIF,MAAM,CAACG,aAAP,IAAwB,IAA5B,EAAkC;AAC9B,sBAAI,CAACC,UAAL,CAAgBJ,MAAM,CAACK,IAAvB;AAA8B;AAAkBH,4BAAhD;AACH,eAFD,MAGK,IAAIA,YAAY,IAAI,IAApB,EAA0B;AAC3BpE,6BAAa,CAAC3B,MAAd;AAAsB;AAAkB8F,yBAAxC;AACH,eAFI,MAGA;AACD;AACA,oBAAMK,IAAI;AAAI;AAAkBxE,6BAAa,CAACyE,GAAd;AAAmB;AAAkBN,yBAArC,CAAhC;AACAnE,6BAAa,CAAC0E,IAAd;AAAoB;AAAkBF,oBAAtC,EAA8CJ,YAA9C;AACH;AACJ,aAlBD,EATS,CA4BT;;AACA,iBAAKO,sBAAL,GA7BS,CA8BT;AACA;;;AACAlM,mBAAO,CAACmM,qBAAR;AAA+B;;;;AAI/B,sBAACV,MAAD,EAAY;AACR;AACA,kBAAMW,OAAO;AAAI;AAAkB7E,2BAAa,CAACyE,GAAd;AAAmB;AAAkBP,oBAAM,CAACE,YAA5C,CAAnC;AACAS,qBAAO,CAACC,OAAR,CAAgB7Q,SAAhB,GAA4BiQ,MAAM,CAACK,IAAP,CAAYrY,IAAxC;AACH,aARD;AASA,iBAAK6Y,wBAAL;AACH;AACD;;;;;;;;;;;;;0CAUgBC,Y,EAAc;AAC1B,iBAAKzD,oBAAL,GAA4B,IAAIF,GAAJ,CAAQ,CAAC2D,YAAD,CAAR,CAA5B;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;;;;;;0CAUgBwD,Y,EAAc;AAC1B,iBAAKzD,oBAAL,GAA4B,IAAIH,GAAJ,CAAQ,CAAC4D,YAAD,CAAR,CAA5B;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;uCAKalK,S,EAAW;AACpB,iBAAK4J,iBAAL,CAAuBvJ,GAAvB,CAA2BL,SAA3B;AACH;AACD;;;;;;;;0CAKgBA,S,EAAW;AACvB,iBAAK4J,iBAAL,WAA8B5J,SAA9B;AACH;AACD;;;;;;;;oCAKU0N,M,EAAQ;AACd,iBAAK5D,cAAL,CAAoBzJ,GAApB,CAAwBqN,MAAxB;AACH;AACD;;;;;;;;uCAKaA,M,EAAQ;AACjB,iBAAK5D,cAAL,WAA2B4D,MAA3B;AACH;AACD;;;;;;;;0CAKgBF,Y,EAAc;AAC1B,iBAAKzD,oBAAL,CAA0B1J,GAA1B,CAA8BmN,YAA9B;;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;6CAKmBuD,Y,EAAc;AAC7B,iBAAKzD,oBAAL,WAAiCyD,YAAjC;;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;0CAKgBwD,Y,EAAc;AAC1B,iBAAKzD,oBAAL,CAA0B3J,GAA1B,CAA8BoN,YAA9B;;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;6CAKmBuD,Y,EAAc;AAC7B,iBAAKzD,oBAAL,WAAiCyD,YAAjC;;AACA,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;;;;wDAQ8B;AAC1B;AACA,gBAAMyD,UAAU,GAAG,KAAKC,gBAAL,CAAsB,KAAK1B,gBAA3B,CAAnB;AACA;;;AACA,gBAAM9F,YAAY;AAAI;AAAkB,iBAAKgD,WAAL,CAAiBjJ,aAAzD,CAJ0B,CAK1B;AACA;AACA;;AACA;;AACA,gBAAM0N,KAAK,GAAGzH,YAAY,CAACE,aAAb,CAA2B,OAA3B,CAAd;;AACA,gBAAIuH,KAAJ,EAAW;AACPA,mBAAK,CAACpH,KAAN,CAAYqH,OAAZ,GAAsBH,UAAU,CAAChJ,MAAX,GAAoB,EAApB,GAAyB,MAA/C;AACH;AACD;;;AACA,gBAAMiB,YAAY,GAAG,KAAK0F,cAAL,CAAoByC,GAApB;AAAyB;;;;AAI9C,sBAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACxO,MAAR;AAAA,aAJkB,CAArB;;AAKA,iBAAKyO,aAAL,CAAmBC,sBAAnB,CAA0CP,UAA1C,EAAsD,CAAC,KAAD,CAAtD;;AACA,iBAAKM,aAAL,CAAmBE,SAAnB,CAA6BR,UAA7B,EAAyC/H,YAAzC,EAAuD,KAAvD,EApB0B,CAqB1B;;;AACA,iBAAK0F,cAAL,CAAoB8C,OAApB;AAA6B;;;;AAI7B,sBAAAJ,GAAG;AAAA,qBAAIA,GAAG,CAACK,kBAAJ,EAAJ;AAAA,aAJH;AAKH;AACD;;;;;;;;;;;wDAQ8B;AAC1B;AACA,gBAAMC,UAAU,GAAG,KAAKV,gBAAL,CAAsB,KAAKzB,gBAA3B,CAAnB;AACA;;;AACA,gBAAM/F,YAAY;AAAI;AAAkB,iBAAKgD,WAAL,CAAiBjJ,aAAzD,CAJ0B,CAK1B;AACA;AACA;;AACA;;AACA,gBAAMkG,KAAK,GAAGD,YAAY,CAACE,aAAb,CAA2B,OAA3B,CAAd;;AACA,gBAAID,KAAJ,EAAW;AACPA,mBAAK,CAACI,KAAN,CAAYqH,OAAZ,GAAsBQ,UAAU,CAAC3J,MAAX,GAAoB,EAApB,GAAyB,MAA/C;AACH;AACD;;;AACA,gBAAMiB,YAAY,GAAG,KAAK2F,cAAL,CAAoBwC,GAApB;AAAyB;;;;AAI9C,sBAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACxO,MAAR;AAAA,aAJkB,CAArB;;AAKA,iBAAKyO,aAAL,CAAmBC,sBAAnB,CAA0CI,UAA1C,EAAsD,CAAC,QAAD,CAAtD;;AACA,iBAAKL,aAAL,CAAmBE,SAAnB,CAA6BG,UAA7B,EAAyC1I,YAAzC,EAAuD,QAAvD;;AACA,iBAAKqI,aAAL,CAAmBM,2BAAnB,CAA+C,KAAKnF,WAAL,CAAiBjJ,aAAhE,EAA+EyF,YAA/E,EArB0B,CAsB1B;;;AACA,iBAAK2F,cAAL,CAAoB6C,OAApB;AAA6B;;;;AAI7B,sBAAAJ,GAAG;AAAA,qBAAIA,GAAG,CAACK,kBAAJ,EAAJ;AAAA,aAJH;AAKH;AACD;;;;;;;;;;;qDAQ2B;AAAA;;AACvB;AACA,gBAAMV,UAAU,GAAG,KAAKC,gBAAL,CAAsB,KAAK1B,gBAA3B,CAAnB;AACA;;;AACA,gBAAMsC,QAAQ,GAAG,KAAKZ,gBAAL,CAAsB,KAAK5B,UAA3B,CAAjB;AACA;;;AACA,gBAAMsC,UAAU,GAAG,KAAKV,gBAAL,CAAsB,KAAKzB,gBAA3B,CAAnB,CANuB,CAOvB;AACA;;;AACA,iBAAK8B,aAAL,CAAmBC,sBAAnB,8BAA8CP,UAA9C,sBAA6Da,QAA7D,sBAA0EF,UAA1E,IAAuF,CAAC,MAAD,EAAS,OAAT,CAAvF,EATuB,CAUvB;;;AACAX,sBAAU,CAACS,OAAX;AAAoB;;;;;AAKpB,sBAACK,SAAD,EAAYhK,CAAZ,EAAkB;AACd,oBAAI,CAACiK,sBAAL,CAA4B,CAACD,SAAD,CAA5B,EAAyC,MAAI,CAACnD,cAAL,CAAoB7G,CAApB,CAAzC;AACH,aAPD,EAXuB,CAmBvB;;AACA,iBAAK+G,QAAL,CAAc4C,OAAd;AAAuB;;;;AAIvB,sBAAAV,MAAM,EAAI;AACN;;AACA;AACA,kBAAMvJ,IAAI,GAAG,EAAb;;AACA,mBAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+J,QAAQ,CAAC7J,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACtC,oBAAI,MAAI,CAAC8H,WAAL,CAAiB9H,CAAjB,EAAoBiJ,MAApB,KAA+BA,MAAnC,EAA2C;AACvCvJ,sBAAI,CAACtI,IAAL,CAAU2S,QAAQ,CAAC/J,CAAD,CAAlB;AACH;AACJ;;AACD,oBAAI,CAACiK,sBAAL,CAA4BvK,IAA5B,EAAkCuJ,MAAlC;AACH,aAdD,EApBuB,CAmCvB;;;AACAY,sBAAU,CAACF,OAAX;AAAoB;;;;;AAKpB,sBAACO,SAAD,EAAYlK,CAAZ,EAAkB;AACd,oBAAI,CAACiK,sBAAL,CAA4B,CAACC,SAAD,CAA5B,EAAyC,MAAI,CAACpD,cAAL,CAAoB9G,CAApB,CAAzC;AACH,aAPD,EApCuB,CA4CvB;;AACAmK,iBAAK,CAACC,IAAN,CAAW,KAAKnF,iBAAL,CAAuBoF,MAAvB,EAAX,EAA4CV,OAA5C;AAAqD;;;;AAIrD,sBAAAJ,GAAG;AAAA,qBAAIA,GAAG,CAACK,kBAAJ,EAAJ;AAAA,aAJH;AAKH;AACD;;;;;;;;;;8CAOoB;AAChB;AACA,gBAAMU,UAAU,GAAG,EAAnB,CAFgB,CAGhB;AACA;;AACA;;AACA,gBAAMC,oBAAoB,GAAG,KAAK7E,oBAAlC;AACA,iBAAKA,oBAAL,GAA4B,IAAIR,GAAJ,EAA5B,CAPgB,CAQhB;AACA;;AACA,iBAAK,IAAIlF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKwK,KAAL,CAAWtK,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxC;AACA,kBAAI/P,IAAI,GAAG,KAAKua,KAAL,CAAWxK,CAAX,CAAX;AACA;;AACA,kBAAMyK,iBAAiB,GAAG,KAAKC,qBAAL,CAA2Bza,IAA3B,EAAiC+P,CAAjC,EAAoCuK,oBAAoB,CAAC/B,GAArB,CAAyBvY,IAAzB,CAApC,CAA1B;;AACA,kBAAI,CAAC,KAAKyV,oBAAL,CAA0BiF,GAA1B,CAA8B1a,IAA9B,CAAL,EAA0C;AACtC,qBAAKyV,oBAAL,CAA0BkF,GAA1B,CAA8B3a,IAA9B,EAAoC,IAAI4a,OAAJ,EAApC;AACH;;AACD,mBAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiJ,iBAAiB,CAACvK,MAAtC,EAA8CsB,CAAC,EAA/C,EAAmD;AAC/C;AACA,oBAAIsJ,SAAS,GAAGL,iBAAiB,CAACjJ,CAAD,CAAjC;AACA;;AACA,oBAAMuJ,KAAK;AAAI;AAAkB,qBAAKrF,oBAAL,CAA0B8C,GAA1B,CAA8BsC,SAAS,CAAC7a,IAAxC,CAAjC;;AACA,oBAAI8a,KAAK,CAACJ,GAAN,CAAUG,SAAS,CAAC7B,MAApB,CAAJ,EAAiC;AAC5B;AAAkB8B,uBAAK,CAACvC,GAAN,CAAUsC,SAAS,CAAC7B,MAApB,CAAnB,CAAiD7R,IAAjD,CAAsD0T,SAAtD;AACH,iBAFD,MAGK;AACDC,uBAAK,CAACH,GAAN,CAAUE,SAAS,CAAC7B,MAApB,EAA4B,CAAC6B,SAAD,CAA5B;AACH;;AACDR,0BAAU,CAAClT,IAAX,CAAgB0T,SAAhB;AACH;AACJ;;AACD,mBAAOR,UAAP;AACH;AACD;;;;;;;;;;;;;gDAUsBra,I,EAAMyW,S,EAAWqE,K,EAAO;AAC1C;AACA,gBAAMC,OAAO,GAAG,KAAKC,WAAL,CAAiBhb,IAAjB,EAAuByW,SAAvB,CAAhB;;AACA,mBAAOsE,OAAO,CAAC1B,GAAR;AAAa;;;;AAIpB,sBAAAL,MAAM,EAAI;AACN;AACA,kBAAMiC,gBAAgB,GAAIH,KAAK,IAAIA,KAAK,CAACJ,GAAN,CAAU1B,MAAV,CAAV;AAAgC;AAAkB8B,mBAAK,CAACvC,GAAN,CAAUS,MAAV,CAAlD,GAAwE,EAAjG;;AACA,kBAAIiC,gBAAgB,CAAChL,MAArB,EAA6B;AACzB;AACA,oBAAMsG,OAAO;AAAI;AAAkB0E,gCAAgB,CAACC,KAAjB,EAAnC;AACA3E,uBAAO,CAACE,SAAR,GAAoBA,SAApB;AACA,uBAAOF,OAAP;AACH,eALD,MAMK;AACD,uBAAO;AAAEvW,sBAAI,EAAJA,IAAF;AAAQgZ,wBAAM,EAANA,MAAR;AAAgBvC,2BAAS,EAATA;AAAhB,iBAAP;AACH;AACJ,aAhBM,CAAP;AAiBH;AACD;;;;;;;;6CAKmB;AAAA;;AACf,iBAAKzB,iBAAL,CAAuBuC,KAAvB;AACA;;;AACA,gBAAM4D,UAAU,GAAGC,gBAAgB,CAAC,KAAKC,WAAL,CAAiB,KAAKC,kBAAtB,CAAD,EAA4C,KAAKpG,iBAAjD,CAAnC;AACAiG,sBAAU,CAACzB,OAAX;AAAoB;;;;AAIpB,sBAAApO,SAAS,EAAI;AACT,kBAAI,OAAI,CAAC0J,iBAAL,CAAuB0F,GAAvB,CAA2BpP,SAAS,CAACpJ,IAArC,CAAJ,EAAgD;AAC5C,sBAAMiR,gCAAgC,CAAC7H,SAAS,CAACpJ,IAAX,CAAtC;AACH;;AACD,qBAAI,CAAC8S,iBAAL,CAAuB2F,GAAvB,CAA2BrP,SAAS,CAACpJ,IAArC,EAA2CoJ,SAA3C;AACH,aATD;AAUH;AACD;;;;;;;;0CAKgB;AACZ,iBAAKsL,cAAL,GAAsBwE,gBAAgB,CAAC,KAAKC,WAAL,CAAiB,KAAKE,qBAAtB,CAAD,EAA+C,KAAKlG,oBAApD,CAAtC;AACA,iBAAKwB,cAAL,GAAsBuE,gBAAgB,CAAC,KAAKC,WAAL,CAAiB,KAAKG,qBAAtB,CAAD,EAA+C,KAAKlG,oBAApD,CAAtC;AACA,iBAAKwB,QAAL,GAAgBsE,gBAAgB,CAAC,KAAKC,WAAL,CAAiB,KAAKI,eAAtB,CAAD,EAAyC,KAAKrG,cAA9C,CAAhC,CAHY,CAIZ;;AACA;;AACA,gBAAMsG,cAAc,GAAG,KAAK5E,QAAL,CAAc6E,MAAd;AAAsB;;;;AAI7C,sBAAArC,GAAG;AAAA,qBAAI,CAACA,GAAG,CAAC5L,IAAT;AAAA,aAJoB,CAAvB;;AAKA,gBAAI,CAAC,KAAKkO,qBAAN,IAA+BF,cAAc,CAACzL,MAAf,GAAwB,CAA3D,EAA8D;AAC1D,oBAAMmD,mCAAmC,EAAzC;AACH;;AACD,iBAAKyI,cAAL,GAAsBH,cAAc,CAAC,CAAD,CAApC;AACH;AACD;;;;;;;;;;kDAOwB;AACpB;AACA,gBAAMI,kBAAkB;AAAI;;;;;AAK5B,qBALMA,kBAKN,CAACC,GAAD,EAAMzC,GAAN;AAAA,qBAAcyC,GAAG,IAAI,CAAC,CAACzC,GAAG,CAAC0C,cAAJ,EAAvB;AAAA,aALA,CAFoB,CAQpB;;;AACA,gBAAI,KAAKlF,QAAL,CAAcmF,MAAd,CAAqBH,kBAArB,EAAyC,KAAzC,CAAJ,EAAqD;AACjD,mBAAKI,oBAAL;AACH,aAXmB,CAYpB;;;AACA,gBAAI,KAAKtF,cAAL,CAAoBqF,MAApB,CAA2BH,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,mBAAK9E,sBAAL;AACH;;AACD,gBAAI,KAAKH,cAAL,CAAoBoF,MAApB,CAA2BH,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,mBAAK7E,sBAAL;AACH;AACJ;AACD;;;;;;;;;;;4CAQkBC,U,EAAY;AAC1B,iBAAKqD,KAAL,GAAa,EAAb;;AACA,gBAAI,8EAAa,KAAKrD,UAAlB,CAAJ,EAAmC;AAC/B,mBAAKA,UAAL,CAAgBU,UAAhB,CAA2B,IAA3B;AACH,aAJyB,CAK1B;;;AACA,gBAAI,KAAKT,yBAAT,EAAoC;AAChC,mBAAKA,yBAAL,CAA+BgF,WAA/B;;AACA,mBAAKhF,yBAAL,GAAiC,IAAjC;AACH;;AACD,gBAAI,CAACD,UAAL,EAAiB;AACb,kBAAI,KAAKb,WAAT,EAAsB;AAClB,qBAAKA,WAAL,CAAiBxJ,IAAjB,CAAsB,EAAtB;AACH;;AACD,mBAAKyK,UAAL,CAAgBxD,aAAhB,CAA8ByD,KAA9B;AACH;;AACD,iBAAK6E,WAAL,GAAmBlF,UAAnB;AACH;AACD;;;;;;;;kDAKwB;AAAA;;AACpB;AACA,gBAAI,CAAC,KAAKA,UAAV,EAAsB;AAClB;AACH;AACD;;;AACA,gBAAImF,UAAJ;;AACA,gBAAI,8EAAa,KAAKnF,UAAlB,CAAJ,EAAmC;AAC/BmF,wBAAU,GAAG,KAAKnF,UAAL,CAAgBoF,OAAhB,CAAwB,IAAxB,CAAb;AACH,aAFD,MAGK,IAAI,0DAAa,KAAKpF,UAAlB,CAAJ,EAAmC;AACpCmF,wBAAU,GAAG,KAAKnF,UAAlB;AACH,aAFI,MAGA,IAAIgD,KAAK,CAACqC,OAAN,CAAc,KAAKrF,UAAnB,CAAJ,EAAoC;AACrCmF,wBAAU,GAAG,gDAAG,KAAKnF,UAAR,CAAb;AACH;;AACD,gBAAImF,UAAU,KAAKnR,SAAnB,EAA8B;AAC1B,oBAAMuI,8BAA8B,EAApC;AACH;;AACD,iBAAK0D,yBAAL,GAAiCkF,UAAU,CAACG,IAAX,CAAgB,iEAAU,KAAKzH,UAAf,CAAhB,EAA4CpO,SAA5C;AAAuD;;;;AAIxF,sBAAA3G,IAAI,EAAI;AACJ,qBAAI,CAACua,KAAL,GAAava,IAAI,IAAI,EAArB;;AACA,qBAAI,CAACqa,UAAL;AACH,aAPgC,CAAjC;AAQH;AACD;;;;;;;;;mDAMyB;AAAA;;AACrB;AACA,gBAAI,KAAK7C,gBAAL,CAAsB1D,aAAtB,CAAoC7D,MAApC,GAA6C,CAAjD,EAAoD;AAChD,mBAAKuH,gBAAL,CAAsB1D,aAAtB,CAAoCyD,KAApC;AACH;;AACD,iBAAKX,cAAL,CAAoB8C,OAApB;AAA6B;;;;;AAK7B,sBAACJ,GAAD,EAAMvJ,CAAN;AAAA,qBAAY,OAAI,CAAC0M,UAAL,CAAgB,OAAI,CAACjF,gBAArB,EAAuC8B,GAAvC,EAA4CvJ,CAA5C,CAAZ;AAAA,aALA;;AAMA,iBAAK2M,2BAAL;AACA,iBAAK7D,wBAAL;AACH;AACD;;;;;;;;;mDAMyB;AAAA;;AACrB;AACA,gBAAI,KAAKpB,gBAAL,CAAsB3D,aAAtB,CAAoC7D,MAApC,GAA6C,CAAjD,EAAoD;AAChD,mBAAKwH,gBAAL,CAAsB3D,aAAtB,CAAoCyD,KAApC;AACH;;AACD,iBAAKV,cAAL,CAAoB6C,OAApB;AAA6B;;;;;AAK7B,sBAACJ,GAAD,EAAMvJ,CAAN;AAAA,qBAAY,OAAI,CAAC0M,UAAL,CAAgB,OAAI,CAAChF,gBAArB,EAAuC6B,GAAvC,EAA4CvJ,CAA5C,CAAZ;AAAA,aALA;;AAMA,iBAAK4M,2BAAL;AACA,iBAAK9D,wBAAL;AACH;AACD;;;;;;;;;;iDAOuBpJ,I,EAAMuJ,M,EAAQ;AAAA;;AACjC;AACA,gBAAMmC,UAAU,GAAGjB,KAAK,CAACC,IAAN,CAAWnB,MAAM,CAACvM,OAAP,IAAkB,EAA7B,EAAiC4M,GAAjC;AAAsC;;;;AAIzD,sBAAAuD,UAAU,EAAI;AACV;AACA,kBAAMtR,SAAS,GAAG,OAAI,CAAC0J,iBAAL,CAAuBuD,GAAvB,CAA2BqE,UAA3B,CAAlB;;AACA,kBAAI,CAACtR,SAAL,EAAgB;AACZ,sBAAM0H,0BAA0B,CAAC4J,UAAD,CAAhC;AACH;;AACD;AAAQ;AAAkBtR;AAA1B;AACH,aAXkB,CAAnB;AAYA;;AACA,gBAAM4E,iBAAiB,GAAGiL,UAAU,CAAC9B,GAAX;AAAgB;;;;AAI1C,sBAAA/N,SAAS;AAAA,qBAAIA,SAAS,CAACR,MAAd;AAAA,aAJiB,CAA1B;AAKA;;AACA,gBAAMqF,eAAe,GAAGgL,UAAU,CAAC9B,GAAX;AAAgB;;;;AAIxC,sBAAA/N,SAAS;AAAA,qBAAIA,SAAS,CAACP,SAAd;AAAA,aAJe,CAAxB;;AAKA,iBAAKwO,aAAL,CAAmBsD,mBAAnB,CAAuCpN,IAAvC,EAA6CS,iBAA7C,EAAgEC,eAAhE;AACH;AACD;;;;;;;;2CAKiB2M,S,EAAW;AACxB;AACA,gBAAMC,YAAY,GAAG,EAArB;;AACA,iBAAK,IAAIhN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+M,SAAS,CAAChJ,aAAV,CAAwB7D,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACrD;AACA,kBAAMiN,OAAO;AAAK;;AAAmB;AAAkBF,uBAAS,CAAChJ,aAAV,CAAwByE,GAAxB,CAA4BxI,CAA5B,CAAvD;AACAgN,0BAAY,CAAC5V,IAAb,CAAkB6V,OAAO,CAACC,SAAR,CAAkB,CAAlB,CAAlB;AACH;;AACD,mBAAOF,YAAP;AACH;AACD;;;;;;;;;;;;sCASY/c,I,EAAMyW,S,EAAW;AACzB,gBAAI,KAAKK,QAAL,CAAc7G,MAAd,IAAwB,CAA5B,EAA+B;AAC3B,qBAAO,CAAC,KAAK6G,QAAL,CAAc,CAAd,CAAD,CAAP;AACH;AACD;;;AACA,gBAAIiE,OAAO,GAAG,EAAd;;AACA,gBAAI,KAAKa,qBAAT,EAAgC;AAC5Bb,qBAAO,GAAG,KAAKjE,QAAL,CAAc6E,MAAd;AAAsB;;;;AAIhC,wBAAArC,GAAG;AAAA,uBAAI,CAACA,GAAG,CAAC5L,IAAL,IAAa4L,GAAG,CAAC5L,IAAJ,CAAS+I,SAAT,EAAoBzW,IAApB,CAAjB;AAAA,eAJO,CAAV;AAKH,aAND,MAOK;AACD;AACA,kBAAIgZ,MAAM,GAAG,KAAKlC,QAAL,CAAcnK,IAAd;AAAoB;;;;AAIjC,wBAAA2M,GAAG;AAAA,uBAAIA,GAAG,CAAC5L,IAAJ,IAAY4L,GAAG,CAAC5L,IAAJ,CAAS+I,SAAT,EAAoBzW,IAApB,CAAhB;AAAA,eAJU,KAIqC,KAAK6b,cAJvD;;AAKA,kBAAI7C,MAAJ,EAAY;AACR+B,uBAAO,CAAC5T,IAAR,CAAa6R,MAAb;AACH;AACJ;;AACD,gBAAI,CAAC+B,OAAO,CAAC9K,MAAb,EAAqB;AACjB,oBAAMoD,kCAAkC,CAACrT,IAAD,CAAxC;AACH;;AACD,mBAAO+a,OAAP;AACH;AACD;;;;;;;;;;;qCAQWF,S,EAAWqC,W,EAAa;AAC/B;AACA,gBAAMlE,MAAM,GAAG6B,SAAS,CAAC7B,MAAzB;AACA;;AACA,gBAAMJ,OAAO,GAAG;AAAE7Q,uBAAS,EAAE8S,SAAS,CAAC7a;AAAvB,aAAhB;;AACA,iBAAKyc,UAAL,CAAgB,KAAKnF,UAArB,EAAiC0B,MAAjC,EAAyCkE,WAAzC,EAAsDtE,OAAtD;AACH;AACD;;;;;;;;;;;;;;qCAWWuE,M,EAAQnE,M,EAAQoE,K,EAAqB;AAAA,gBAAdxE,OAAc,uEAAJ,EAAI;AAC5C;AACAuE,kBAAM,CAACrJ,aAAP,CAAqBuJ,kBAArB,CAAwCrE,MAAM,CAAChQ,QAA/C,EAAyD4P,OAAzD,EAAkEwE,KAAlE;;AAF4C,wDAGnB,KAAKE,iBAAL,CAAuBtE,MAAvB,CAHmB;AAAA;;AAAA;AAG5C,qEAAyD;AAAA,oBAAhDuE,YAAgD;;AACrD,oBAAI1P,aAAa,CAACE,oBAAlB,EAAwC;AACpCF,+BAAa,CAACE,oBAAd,CAAmCD,cAAnC,CAAkDuP,kBAAlD,CAAqEE,YAArE,EAAmF3E,OAAnF;AACH;AACJ;AAP2C;AAAA;AAAA;AAAA;AAAA;;AAQ5C,iBAAKnE,kBAAL,CAAwB+I,YAAxB;AACH;AACD;;;;;;;;;mDAMyB;AACrB;AACA,gBAAM1J,aAAa,GAAG,KAAKwD,UAAL,CAAgBxD,aAAtC;;AACA,iBAAK,IAAIoJ,WAAW,GAAG,CAAlB,EAAqBO,KAAK,GAAG3J,aAAa,CAAC7D,MAAhD,EAAwDiN,WAAW,GAAGO,KAAtE,EAA6EP,WAAW,EAAxF,EAA4F;AACxF;AACA,kBAAMF,OAAO;AAAI;AAAkBlJ,2BAAa,CAACyE,GAAd,CAAkB2E,WAAlB,CAAnC;AACA;;AACA,kBAAMtE,OAAO;AAAI;AAAkBoE,qBAAO,CAACpE,OAA3C;AACAA,qBAAO,CAAC6E,KAAR,GAAgBA,KAAhB;AACA7E,qBAAO,CAAClO,KAAR,GAAgBwS,WAAW,KAAK,CAAhC;AACAtE,qBAAO,CAAC8E,IAAR,GAAeR,WAAW,KAAKO,KAAK,GAAG,CAAvC;AACA7E,qBAAO,CAAC+E,IAAR,GAAeT,WAAW,GAAG,CAAd,KAAoB,CAAnC;AACAtE,qBAAO,CAACgF,GAAR,GAAc,CAAChF,OAAO,CAAC+E,IAAvB;;AACA,kBAAI,KAAK/B,qBAAT,EAAgC;AAC5BhD,uBAAO,CAACnC,SAAR,GAAoB,KAAKoB,WAAL,CAAiBqF,WAAjB,EAA8BzG,SAAlD;AACAmC,uBAAO,CAACsE,WAAR,GAAsBA,WAAtB;AACH,eAHD,MAIK;AACDtE,uBAAO,CAACwE,KAAR,GAAgB,KAAKvF,WAAL,CAAiBqF,WAAjB,EAA8BzG,SAA9C;AACH;AACJ;AACJ;AACD;;;;;;;;;4CAMkBuC,M,EAAQ;AAAA;;AACtB,gBAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACvM,OAAvB,EAAgC;AAC5B,qBAAO,EAAP;AACH;;AACD,mBAAOyN,KAAK,CAACC,IAAN,CAAWnB,MAAM,CAACvM,OAAlB;AAA4B;;;;AAInC,sBAAAoR,QAAQ,EAAI;AACR;AACA,kBAAM/Q,MAAM,GAAG,OAAI,CAACkI,iBAAL,CAAuBuD,GAAvB,CAA2BsF,QAA3B,CAAf;;AACA,kBAAI,CAAC/Q,MAAL,EAAa;AACT,sBAAMkG,0BAA0B,CAAC6K,QAAD,CAAhC;AACH;;AACD,qBAAO7E,MAAM,CAAC8E,mBAAP,CAA2BhR,MAA3B,CAAP;AACH,aAXM,CAAP;AAYH;AACD;;;;;;;;sDAK4B;AACxB;AACA,gBAAMiR,gBAAgB,GAAG,KAAKlJ,SAAL,CAAemJ,sBAAf,EAAzB;AACA;;;AACA,gBAAMC,QAAQ,GAAG,CACb;AAAEC,iBAAG,EAAE,OAAP;AAAgBf,oBAAM,EAAE,KAAK3F;AAA7B,aADa,EAEb;AAAE0G,iBAAG,EAAE,OAAP;AAAgBf,oBAAM,EAAE,KAAK7F;AAA7B,aAFa,EAGb;AAAE4G,iBAAG,EAAE,OAAP;AAAgBf,oBAAM,EAAE,KAAK1F;AAA7B,aAHa,CAAjB;;AAKA,0CAAsBwG,QAAtB,iCAAgC;AAA3B,kBAAME,OAAO,iBAAb;;AACD;AACA,kBAAMtM,OAAO,GAAG,KAAKgD,SAAL,CAAeuJ,aAAf,CAA6BD,OAAO,CAACD,GAArC,CAAhB;;AACArM,qBAAO,CAACoE,YAAR,CAAqB,MAArB,EAA6B,UAA7B;AACApE,qBAAO,CAACwM,WAAR,CAAoBF,OAAO,CAAChB,MAAR,CAAe5R,UAAf,CAA0BE,aAA9C;AACAsS,8BAAgB,CAACM,WAAjB,CAA6BxM,OAA7B;AACH,aAfuB,CAgBxB;;;AACA,iBAAK6C,WAAL,CAAiBjJ,aAAjB,CAA+B4S,WAA/B,CAA2CN,gBAA3C;AACH;AACD;;;;;;;;;;iDAOuB;AACnB,iBAAK1H,WAAL,CAAiBxJ,IAAjB,CAAsB,EAAtB;;AACA,iBAAKyK,UAAL,CAAgBxD,aAAhB,CAA8ByD,KAA9B;;AACA,iBAAK8C,UAAL;AACA,iBAAKxB,wBAAL;AACH;AACD;;;;;;;;;;+CAOqB;AACjB;AACA,gBAAMyF,kBAAkB;AAAI;;;;;AAK5B,qBALMA,kBAKN,CAACvC,GAAD,EAAMwC,CAAN,EAAY;AACR,qBAAOxC,GAAG,IAAIwC,CAAC,CAAC/V,gBAAF,EAAd;AACH,aAPD,CAFiB,CAUjB;AACA;AACA;;;AACA,gBAAI,KAAKoO,cAAL,CAAoBqF,MAApB,CAA2BqC,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,mBAAK5B,2BAAL;AACH;;AACD,gBAAI,KAAK7F,cAAL,CAAoBoF,MAApB,CAA2BqC,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,mBAAK3B,2BAAL;AACH;;AACD,gBAAIzC,KAAK,CAACC,IAAN,CAAW,KAAKnF,iBAAL,CAAuBoF,MAAvB,EAAX,EAA4C6B,MAA5C,CAAmDqC,kBAAnD,EAAuE,KAAvE,CAAJ,EAAmF;AAC/E,mBAAKzF,wBAAL;AACH;AACJ;AACD;;;;;;;;;;+CAOqB;AAAA;;AACjB;AACA,gBAAMtJ,SAAS,GAAG,KAAKqF,IAAL,GAAY,KAAKA,IAAL,CAAU4J,KAAtB,GAA8B,KAAhD;AACA,iBAAKjF,aAAL,GAAqB,IAAInK,YAAJ,CAAiB,KAAKC,kBAAtB,EAA0C,KAAKqG,cAA/C,EAA+DnG,SAA/D,EAA0E,KAAKuF,SAAL,CAAe2J,SAAzF,CAArB;AACA,aAAC,KAAK7J,IAAL,GAAY,KAAKA,IAAL,CAAU8J,MAAtB,GAA+B,iDAAhC,EACKlC,IADL,CACU,iEAAU,KAAKzH,UAAf,CADV,EAEKpO,SAFL;AAEgB;;;;AAIhB,sBAAA6X,KAAK,EAAI;AACL,qBAAI,CAACjF,aAAL,CAAmBhK,SAAnB,GAA+BiP,KAA/B;;AACA,qBAAI,CAAC3F,wBAAL;AACH,aATD;AAUH;AACD;;;;;;;;;;sCAOY8F,K,EAAO;AAAA;;AACf,mBAAOA,KAAK,CAAChD,MAAN;AAAc;;;;AAIrB,sBAAAtD,IAAI;AAAA,qBAAI,CAACA,IAAI,CAACtO,MAAN,IAAgBsO,IAAI,CAACtO,MAAL,KAAgB,OAApC;AAAA,aAJG,CAAP;AAKH;;;8BAn6Ba;AACV,mBAAO,KAAK6U,UAAZ;AACH;AACD;;;;;4BAIYC,E,EAAI;AACZ,gBAAI,qEAAeA,EAAE,IAAI,IAArB,IAA6B,OAAOA,EAAP,KAAc,UAA3C;AAA0D;AAAkBC,mBAA5E;AACC;AAAkBA,mBAAO,CAACC,IAD/B,EACuC;AACnCD,qBAAO,CAACC,IAAR,oDAAyDzL,IAAI,CAACC,SAAL,CAAesL,EAAf,CAAzD;AACH;;AACD,iBAAKD,UAAL,GAAkBC,EAAlB;AACH;AACD;;;;;;;;;;;;;;;;;;;;;;;;8BAqBiB;AACb,mBAAO,KAAKzC,WAAZ;AACH;AACD;;;;;4BAIelF,U,EAAY;AACvB,gBAAI,KAAKkF,WAAL,KAAqBlF,UAAzB,EAAqC;AACjC,mBAAK8H,iBAAL,CAAuB9H,UAAvB;AACH;AACJ;AACD;;;;;;;;;;8BAO4B;AACxB,mBAAO,KAAKvB,sBAAZ;AACH;AACD;;;;;4BAI0BlN,C,EAAG;AACzB,iBAAKkN,sBAAL,GAA8B,oFAAsBlN,CAAtB,CAA9B,CADyB,CAEzB;AACA;;AACA,gBAAI,KAAK6O,UAAL,IAAmB,KAAKA,UAAL,CAAgBxD,aAAhB,CAA8B7D,MAArD,EAA6D;AACzD,mBAAKiM,oBAAL;AACH;AACJ;;;;;;AAi2BL1H,cAAQ,CAACvL,IAAT,GAAgB,SAASgW,gBAAT,CAA0B9V,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIqL,QAAV,EAAoB,gEAAyB,6DAAzB,CAApB,EAAsE,gEAAyB,+DAAzB,CAAtE,EAA0H,gEAAyB,wDAAzB,CAA1H,EAAuK,gEAAyB,MAAzB,CAAvK,EAAyM,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAzM,EAA6P,gEAAyB,wDAAzB,CAA7P,EAAiS,gEAAyB,8DAAzB,CAAjS,CAAP;AAAqV,OAApY;;AACAA,cAAQ,CAACrG,IAAT,GAAgB,gEAAyB;AAAE9E,YAAI,EAAEmL,QAAR;AAAkBlL,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAAhB,CAA7B;AAA0Ee,sBAAc,EAAE,SAAS6U,uBAAT,CAAiC1X,EAAjC,EAAqCC,GAArC,EAA0C8C,QAA1C,EAAoD;AAAE,cAAI/C,EAAE,GAAG,CAAT,EAAY;AAC7L,yEAAsB+C,QAAtB,EAAgCT,YAAhC,EAA8C,IAA9C;;AACA,yEAAsBS,QAAtB,EAAgCiD,SAAhC,EAA2C,IAA3C;;AACA,yEAAsBjD,QAAtB,EAAgCwC,eAAhC,EAAiD,IAAjD;;AACA,yEAAsBxC,QAAtB,EAAgCyC,eAAhC,EAAiD,IAAjD;AACH;;AAAC,cAAIxF,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIgD,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC6T,kBAAJ,GAAyB9Q,EAA9E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACgU,eAAJ,GAAsBjR,EAA3E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC8T,qBAAJ,GAA4B/Q,EAAjF;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC+T,qBAAJ,GAA4BhR,EAAjF;AACH;AAAE,SAXkC;AAWhC2U,iBAAS,EAAE,SAASC,cAAT,CAAwB5X,EAAxB,EAA4BC,GAA5B,EAAiC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC3D,4EAAyBqM,aAAzB,EAAwC,IAAxC;;AACA,4EAAyBG,eAAzB,EAA0C,IAA1C;;AACA,4EAAyBE,eAAzB,EAA0C,IAA1C;AACH;;AAAC,cAAI1M,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIgD,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC6P,UAAJ,GAAiB9M,EAAE,CAACE,KAAzE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC+P,gBAAJ,GAAuBhN,EAAE,CAACE,KAA/E;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACgQ,gBAAJ,GAAuBjN,EAAE,CAACE,KAA/E;AACH;AAAE,SApBkC;AAoBhCoB,iBAAS,EAAE,CAAC,CAAD,EAAI,WAAJ,CApBqB;AAoBHjB,cAAM,EAAE;AAAE2L,iBAAO,EAAE,SAAX;AAAsBU,oBAAU,EAAE,YAAlC;AAAgD0E,+BAAqB,EAAE;AAAvE,SApBL;AAoBuGyD,gBAAQ,EAAE,CAAC,UAAD,CApBjH;AAoB+HrU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAEmI,SAAX;AAAsBsC,qBAAW,EAAEuJ;AAAnC,SAAD,CAA1B,CAAD,CApBzI;AAoBuN8K,0BAAkB,EAAEhY,GApB3O;AAoBgP8G,aAAK,EAAE,CApBvP;AAoB0PC,YAAI,EAAE,CApBhQ;AAoBmQC,cAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,EAA0B,CAAC,WAAD,EAAc,EAAd,CAA1B,EAA6C,CAAC,iBAAD,EAAoB,EAApB,CAA7C,CApB3Q;AAoBkVtF,gBAAQ,EAAE,SAASuW,iBAAT,CAA2B/X,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/a,0EAAuBH,GAAvB;;AACA,uEAAoB,CAApB;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SA1BkC;AA0BhCmH,kBAAU,EAAE,CAACwF,eAAD,EACbH,aADa,EAEbK,eAFa,CA1BoB;AA4BfzF,qBAAa,EAAE;AA5BA,OAAzB,CAAhB;AA6BA;;AACA+F,cAAQ,CAACjL,cAAT,GAA0B;AAAA,eAAM,CAC5B;AAAEF,cAAI,EAAE;AAAR,SAD4B,EAE5B;AAAEA,cAAI,EAAE;AAAR,SAF4B,EAG5B;AAAEA,cAAI,EAAE;AAAR,SAH4B,EAI5B;AAAEA,cAAI,EAAEmW,MAAR;AAAgBrU,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,uDAAR;AAAmBhB,gBAAI,EAAE,CAAC,MAAD;AAAzB,WAAD;AAA5B,SAJ4B,EAK5B;AAAEgB,cAAI,EAAE,gEAAR;AAAwB8B,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE;AAAR,WAAD;AAApC,SAL4B,EAM5B;AAAEA,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAN4B,EAO5B;AAAEgB,cAAI,EAAE;AAAR,SAP4B,CAAN;AAAA,OAA1B;;AASAmL,cAAQ,CAACpJ,cAAT,GAA0B;AACtBoL,eAAO,EAAE,CAAC;AAAEnN,cAAI,EAAE;AAAR,SAAD,CADa;AAEtB6N,kBAAU,EAAE,CAAC;AAAE7N,cAAI,EAAE;AAAR,SAAD,CAFU;AAGtBuS,6BAAqB,EAAE,CAAC;AAAEvS,cAAI,EAAE;AAAR,SAAD,CAHD;AAItBiO,kBAAU,EAAE,CAAC;AAAEjO,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAACwL,aAAD,EAAgB;AAAE,sBAAQ;AAAV,WAAhB;AAAzB,SAAD,CAJU;AAKtB2D,wBAAgB,EAAE,CAAC;AAAEnO,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAAC2L,eAAD,EAAkB;AAAE,sBAAQ;AAAV,WAAlB;AAAzB,SAAD,CALI;AAMtByD,wBAAgB,EAAE,CAAC;AAAEpO,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAAC6L,eAAD,EAAkB;AAAE,sBAAQ;AAAV,WAAlB;AAAzB,SAAD,CANI;AAOtBoH,0BAAkB,EAAE,CAAC;AAAEjS,cAAI,EAAE,6DAAR;AAAyBhB,cAAI,EAAE,CAACyB,YAAD,EAAe;AAAE2V,uBAAW,EAAE;AAAf,WAAf;AAA/B,SAAD,CAPE;AAQtBhE,uBAAe,EAAE,CAAC;AAAEpS,cAAI,EAAE,6DAAR;AAAyBhB,cAAI,EAAE,CAACmF,SAAD,EAAY;AAAEiS,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CARK;AAStBlE,6BAAqB,EAAE,CAAC;AAAElS,cAAI,EAAE,6DAAR;AAAyBhB,cAAI,EAAE,CAAC0E,eAAD,EAAkB;AACzD0S,uBAAW,EAAE;AAD4C,WAAlB;AAA/B,SAAD,CATD;AAYtBjE,6BAAqB,EAAE,CAAC;AAAEnS,cAAI,EAAE,6DAAR;AAAyBhB,cAAI,EAAE,CAAC2E,eAAD,EAAkB;AACzDyS,uBAAW,EAAE;AAD4C,WAAlB;AAA/B,SAAD;AAZD,OAA1B;AAgBA;;AAAc,OAAC,YAAY;AAAE,wEAAyBjL,QAAzB,EAAmC,CAAC;AACzDnL,cAAI,EAAE,uDADmD;AAEzDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,6BADX;AAECkZ,oBAAQ,EAAE,UAFX;AAGCrW,oBAAQ,EAAEoL,kBAHX;AAICrI,gBAAI,EAAE;AACF,uBAAS;AADP,aAJP;AAOC0C,yBAAa,EAAE,gEAAkBG,IAPlC;AAQC;AACA;AACA;AACA;AACAF,2BAAe,EAAE,sEAAwBC,OAZ1C;AAaC/N,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAEmI,SAAX;AAAsBsC,yBAAW,EAAEuJ;AAAnC,aAAD;AAbZ,WAAD;AAFmD,SAAD,CAAnC,EAiBrB,YAAY;AAAE,iBAAO,CAAC;AAAEnL,gBAAI,EAAE;AAAR,WAAD,EAAmC;AAAEA,gBAAI,EAAE;AAAR,WAAnC,EAAuE;AAAEA,gBAAI,EAAE;AAAR,WAAvE,EAAoG;AAAEA,gBAAI,EAAEmW,MAAR;AAAgBrU,sBAAU,EAAE,CAAC;AAC9I9B,kBAAI,EAAE,uDADwI;AAE9IhB,kBAAI,EAAE,CAAC,MAAD;AAFwI,aAAD;AAA5B,WAApG,EAGX;AAAEgB,gBAAI,EAAE,gEAAR;AAA+B8B,sBAAU,EAAE,CAAC;AAC9C9B,kBAAI,EAAE;AADwC,aAAD;AAA3C,WAHW,EAKX;AAAEA,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC9B,kBAAI,EAAE,oDAD4B;AAElChB,kBAAI,EAAE,CAAC,wDAAD;AAF4B,aAAD;AAA/B,WALW,EAQX;AAAEgB,gBAAI,EAAE;AAAR,WARW,CAAP;AAQyB,SAzBlB,EAyBoB;AAAEmN,iBAAO,EAAE,CAAC;AACjDnN,gBAAI,EAAE;AAD2C,WAAD,CAAX;AAErC6N,oBAAU,EAAE,CAAC;AACb7N,gBAAI,EAAE;AADO,WAAD,CAFyB;AAIrCuS,+BAAqB,EAAE,CAAC;AACxBvS,gBAAI,EAAE;AADkB,WAAD,CAJc;AAMrCiO,oBAAU,EAAE,CAAC;AACbjO,gBAAI,EAAE,uDADO;AAEbhB,gBAAI,EAAE,CAACwL,aAAD,EAAgB;AAAE,wBAAQ;AAAV,aAAhB;AAFO,WAAD,CANyB;AASrC2D,0BAAgB,EAAE,CAAC;AACnBnO,gBAAI,EAAE,uDADa;AAEnBhB,gBAAI,EAAE,CAAC2L,eAAD,EAAkB;AAAE,wBAAQ;AAAV,aAAlB;AAFa,WAAD,CATmB;AAYrCyD,0BAAgB,EAAE,CAAC;AACnBpO,gBAAI,EAAE,uDADa;AAEnBhB,gBAAI,EAAE,CAAC6L,eAAD,EAAkB;AAAE,wBAAQ;AAAV,aAAlB;AAFa,WAAD,CAZmB;AAerCoH,4BAAkB,EAAE,CAAC;AACrBjS,gBAAI,EAAE,6DADe;AAErBhB,gBAAI,EAAE,CAACyB,YAAD,EAAe;AAAE2V,yBAAW,EAAE;AAAf,aAAf;AAFe,WAAD,CAfiB;AAkBrChE,yBAAe,EAAE,CAAC;AAClBpS,gBAAI,EAAE,6DADY;AAElBhB,gBAAI,EAAE,CAACmF,SAAD,EAAY;AAAEiS,yBAAW,EAAE;AAAf,aAAZ;AAFY,WAAD,CAlBoB;AAqBrClE,+BAAqB,EAAE,CAAC;AACxBlS,gBAAI,EAAE,6DADkB;AAExBhB,gBAAI,EAAE,CAAC0E,eAAD,EAAkB;AAChB0S,yBAAW,EAAE;AADG,aAAlB;AAFkB,WAAD,CArBc;AA0BrCjE,+BAAqB,EAAE,CAAC;AACxBnS,gBAAI,EAAE,6DADkB;AAExBhB,gBAAI,EAAE,CAAC2E,eAAD,EAAkB;AAChByS,yBAAW,EAAE;AADG,aAAlB;AAFkB,WAAD;AA1Bc,SAzBpB;AAwDb,OAxDF;;AAyDd,UAAI,KAAJ,EAAW,CAqOV;AACD;;;;;;;;;AAOA,eAASrE,gBAAT,CAA0BsE,KAA1B,EAAiC/E,GAAjC,EAAsC;AAClC,eAAO+E,KAAK,CAACC,MAAN,CAAazF,KAAK,CAACC,IAAN,CAAWQ,GAAX,CAAb,CAAP;AACH;AAED;;;;;;AAKA;;;;;;;;;;;;UAUMiF,a;AACF;;;;AAIA,+BAAY7V,MAAZ,EAAoB8V,QAApB,EAA8B;AAAA;;AAC1B,eAAK9V,MAAL,GAAcA,MAAd;AACA,eAAK8V,QAAL,GAAgBA,QAAhB;AACA;;;;AAGA,eAAKlY,OAAL,GAAe,OAAf;AACA,eAAKkY,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACH;AACD;;;;;;;;;AAiBA;;;qCAGW;AACP,iBAAKC,kBAAL;;AACA,gBAAI,KAAKlY,UAAL,KAAoBsD,SAAxB,EAAmC;AAC/B,mBAAKtD,UAAL,GAAkB,KAAKmY,wBAAL,EAAlB;AACH;;AACD,gBAAI,CAAC,KAAK9X,YAAV,EAAwB;AACpB,mBAAKA,YAAL,GACI,KAAK4X,QAAL,CAAcG,mBAAd;AAAuC;;;;;AAKvC,wBAAChgB,IAAD,EAAOkC,IAAP;AAAA,uBAAgB;AAAE;AAAkBlC,sBAApB,CAA4BkC,IAA5B;AAAhB;AAAA,eANJ;AAOH;;AACD,gBAAI,KAAK6H,MAAT,EAAiB;AACb;AACA;AACA;AACA,mBAAKuB,SAAL,CAAeb,IAAf,GAAsB,KAAKA,IAA3B;AACA,mBAAKa,SAAL,CAAeX,UAAf,GAA4B,KAAKA,UAAjC;;AACA,mBAAKZ,MAAL,CAAYkW,YAAZ,CAAyB,KAAK3U,SAA9B;AACH,aAPD,MAQK;AACD,oBAAMoI,yCAAyC,EAA/C;AACH;AACJ;AACD;;;;;;wCAGc;AACV,gBAAI,KAAK3J,MAAT,EAAiB;AACb,mBAAKA,MAAL,CAAYmW,eAAZ,CAA4B,KAAK5U,SAAjC;AACH;AACJ;AACD;;;;;;;;qDAK2B;AACvB;AACA,gBAAMpJ,IAAI,GAAG,KAAKA,IAAlB;;AACA,gBAAI,qEAAe,CAACA,IAApB,EAA0B;AACtB,oBAAMyR,kCAAkC,EAAxC;AACH;;AACD,gBAAI,KAAKkM,QAAL,IAAiB,KAAKA,QAAL,CAAcM,0BAAnC,EAA+D;AAC3D,qBAAO,KAAKN,QAAL,CAAcM,0BAAd,CAAyCje,IAAzC,CAAP;AACH;;AACD,mBAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQke,WAAR,KAAwBle,IAAI,CAACme,KAAL,CAAW,CAAX,CAA/B;AACH;AACD;;;;;;;;+CAKqB;AACjB,gBAAI,KAAK/U,SAAT,EAAoB;AAChB,mBAAKA,SAAL,CAAepJ,IAAf,GAAsB,KAAKA,IAA3B;AACH;AACJ;;;8BA3EU;AACP,mBAAO,KAAK+H,KAAZ;AACH;AACD;;;;;4BAIS/H,I,EAAM;AACX,iBAAK+H,KAAL,GAAa/H,IAAb,CADW,CAEX;AACA;;AACA,iBAAK4d,kBAAL;AACH;;;;;;AAiELF,mBAAa,CAAC3W,IAAd,GAAqB,SAASqX,qBAAT,CAA+BnX,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIyW,aAAV,EAAyB,gEAAyBpL,QAAzB,EAAmC,CAAnC,CAAzB,EAAgE,gEAAyB3L,mBAAzB,EAA8C,CAA9C,CAAhE,CAAP;AAA2H,OAApL;;AACA+W,mBAAa,CAACzR,IAAd,GAAqB,gEAAyB;AAAE9E,YAAI,EAAEuW,aAAR;AAAuBtW,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD6V,iBAAS,EAAE,SAASoB,mBAAT,CAA6B/Y,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9J,4EAAyBsC,YAAzB,EAAuC,IAAvC;;AACA,4EAAyBf,UAAzB,EAAqC,IAArC;;AACA,4EAAyBS,gBAAzB,EAA2C,IAA3C;AACH;;AAAC,cAAIhC,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIgD,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAAC6D,SAAJ,GAAgBd,EAAE,CAACE,KAAxE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACgD,IAAJ,GAAWD,EAAE,CAACE,KAAnE;AACA,yEAAsBF,EAAE,GAAG,2DAA3B,MAAqD/C,GAAG,CAACkD,UAAJ,GAAiBH,EAAE,CAACE,KAAzE;AACH;AAAE,SATuC;AASrCG,cAAM,EAAE;AAAElD,iBAAO,EAAE,SAAX;AAAsBzF,cAAI,EAAE,MAA5B;AAAoC0F,oBAAU,EAAE,YAAhD;AAA8DK,sBAAY,EAAE;AAA5E,SAT6B;AASiEmG,aAAK,EAAE,CATxE;AAS2EC,YAAI,EAAE,CATjF;AASoFC,cAAM,EAAE,CAAC,CAAC,cAAD,EAAiB,EAAjB,CAAD,EAAuB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,YAA3B,EAAyC,CAAzC,EAA4C,kBAA5C,CAAvB,EAAwF,CAAC,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,YAApB,EAAkC,CAAlC,EAAqC,YAArC,CAAxF,EAA4I,CAAC,iBAAD,EAAoB,EAApB,CAA5I,EAAqK,CAAC,UAAD,EAAa,EAAb,CAArK,CAT5F;AASoRtF,gBAAQ,EAAE,SAASwX,sBAAT,CAAgChZ,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC3X,kFAA+B,CAA/B,EAAkC,CAAlC;;AACA,qEAAkB,CAAlB,EAAqBD,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;;AACA,qEAAkB,CAAlB,EAAqBM,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;;AACA;AACH;AAAE,SAduC;AAcrC2G,kBAAU,EAAE,CAAC1E,YAAD,EACbN,gBADa,EAEbT,UAFa,EAGb6C,aAHa,EAIbM,OAJa,CAdyB;AAkB5BuC,qBAAa,EAAE;AAlBa,OAAzB,CAArB;AAmBA;;AACAmR,mBAAa,CAACrW,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAEmL,QAAR;AAAkBrJ,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE;AAAR,WAAD;AAA9B,SADiC,EAEjC;AAAEA,cAAI,EAAE6B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE9B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBhB,gBAAI,EAAE,CAACQ,mBAAD;AAAtB,WAArB;AAA/B,SAFiC,CAAN;AAAA,OAA/B;;AAIA+W,mBAAa,CAACxU,cAAd,GAA+B;AAC3BlJ,YAAI,EAAE,CAAC;AAAEmH,cAAI,EAAE;AAAR,SAAD,CADqB;AAE3BzB,kBAAU,EAAE,CAAC;AAAEyB,cAAI,EAAE;AAAR,SAAD,CAFe;AAG3BpB,oBAAY,EAAE,CAAC;AAAEoB,cAAI,EAAE;AAAR,SAAD,CAHa;AAI3B1B,eAAO,EAAE,CAAC;AAAE0B,cAAI,EAAE;AAAR,SAAD,CAJkB;AAK3BiC,iBAAS,EAAE,CAAC;AAAEjC,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAACyB,YAAD,EAAe;AAAE,sBAAQ;AAAV,WAAf;AAAzB,SAAD,CALgB;AAM3BW,YAAI,EAAE,CAAC;AAAEpB,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAACU,UAAD,EAAa;AAAE,sBAAQ;AAAV,WAAb;AAAzB,SAAD,CANqB;AAO3B4B,kBAAU,EAAE,CAAC;AAAEtB,cAAI,EAAE,uDAAR;AAAmBhB,cAAI,EAAE,CAACmB,gBAAD,EAAmB;AAAE,sBAAQ;AAAV,WAAnB;AAAzB,SAAD;AAPe,OAA/B;AASA;;AAAc,OAAC,YAAY;AAAE,wEAAyBoW,aAAzB,EAAwC,CAAC;AAC9DvW,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,iBADX;AAEC6C,oBAAQ,gTAFT;AAYCyF,yBAAa,EAAE,gEAAkBG,IAZlC;AAaC;AACA;AACA;AACA;AACA;AACA;AACAF,2BAAe,EAAE,sEAAwBC;AAnB1C,WAAD;AAFwD,SAAD,CAAxC,EAuBrB,YAAY;AAAE,iBAAO,CAAC;AAAEtF,gBAAI,EAAEmL,QAAR;AAAkBrJ,sBAAU,EAAE,CAAC;AAC7C9B,kBAAI,EAAE;AADuC,aAAD;AAA9B,WAAD,EAEX;AAAEA,gBAAI,EAAE6B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC9B,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAEChB,kBAAI,EAAE,CAACQ,mBAAD;AAFP,aAFkC;AAA/B,WAFW,CAAP;AAOF,SA9BS,EA8BP;AAAElB,iBAAO,EAAE,CAAC;AACtB0B,gBAAI,EAAE;AADgB,WAAD,CAAX;AAEVnH,cAAI,EAAE,CAAC;AACPmH,gBAAI,EAAE;AADC,WAAD,CAFI;AAIVzB,oBAAU,EAAE,CAAC;AACbyB,gBAAI,EAAE;AADO,WAAD,CAJF;AAMVpB,sBAAY,EAAE,CAAC;AACfoB,gBAAI,EAAE;AADS,WAAD,CANJ;AAQViC,mBAAS,EAAE,CAAC;AACZjC,gBAAI,EAAE,uDADM;AAEZhB,gBAAI,EAAE,CAACyB,YAAD,EAAe;AAAE,wBAAQ;AAAV,aAAf;AAFM,WAAD,CARD;AAWVW,cAAI,EAAE,CAAC;AACPpB,gBAAI,EAAE,uDADC;AAEPhB,gBAAI,EAAE,CAACU,UAAD,EAAa;AAAE,wBAAQ;AAAV,aAAb;AAFC,WAAD,CAXI;AAcV4B,oBAAU,EAAE,CAAC;AACbtB,gBAAI,EAAE,uDADO;AAEbhB,gBAAI,EAAE,CAACmB,gBAAD,EAAmB;AAAE,wBAAQ;AAAV,aAAnB;AAFO,WAAD;AAdF,SA9BO;AA+Cb,OA/CF;;AAgDd,UAAI,KAAJ,EAAW,CAuDV;AAED;;;;;;AAKA;;;AACA,UAAMiX,qBAAqB,GAAG,CAC1BjM,QAD0B,EAE1BhH,SAF0B,EAG1BzE,UAH0B,EAI1B8E,aAJ0B,EAK1BrE,gBAL0B,EAM1BE,gBAN0B,EAO1BI,YAP0B,EAQ1BoC,OAR0B,EAS1B8C,MAT0B,EAU1BpD,aAV0B,EAW1BI,aAX0B,EAY1BiC,YAZ0B,EAa1BlB,eAb0B,EAc1B8B,YAd0B,EAe1B7B,eAf0B,EAgB1B6G,aAhB0B,EAiB1BG,eAjB0B,EAkB1BE,eAlB0B,EAmB1B0L,aAnB0B,CAA9B;;UAqBMc,c;;;;AAENA,oBAAc,CAACC,IAAf,GAAsB,+DAAwB;AAAEtX,YAAI,EAAEqX;AAAR,OAAxB,CAAtB;AACAA,oBAAc,CAACE,IAAf,GAAsB,+DAAwB;AAAEC,eAAO,EAAE,SAASC,sBAAT,CAAgC3X,CAAhC,EAAmC;AAAE,iBAAO,KAAKA,CAAC,IAAIuX,cAAV,GAAP;AAAqC;AAArF,OAAxB,CAAtB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOK,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BL,cAA1B,EAA0C;AAAE/f,sBAAY,EAAE,CAAC6T,QAAD,EACpHhH,SADoH,EAEpHzE,UAFoH,EAGpH8E,aAHoH,EAIpHrE,gBAJoH,EAKpHE,gBALoH,EAMpHI,YANoH,EAOpHoC,OAPoH,EAQpH8C,MARoH,EASpHpD,aAToH,EAUpHI,aAVoH,EAWpHiC,YAXoH,EAYpHlB,eAZoH,EAapH8B,YAboH,EAcpH7B,eAdoH,EAepH6G,aAfoH,EAgBpHG,eAhBoH,EAiBpHE,eAjBoH,EAkBpH0L,aAlBoH,CAAhB;AAkBpFtf,iBAAO,EAAE,CAACkU,QAAD,EACzBhH,SADyB,EAEzBzE,UAFyB,EAGzB8E,aAHyB,EAIzBrE,gBAJyB,EAKzBE,gBALyB,EAMzBI,YANyB,EAOzBoC,OAPyB,EAQzB8C,MARyB,EASzBpD,aATyB,EAUzBI,aAVyB,EAWzBiC,YAXyB,EAYzBlB,eAZyB,EAazB8B,YAbyB,EAczB7B,eAdyB,EAezB6G,aAfyB,EAgBzBG,eAhByB,EAiBzBE,eAjByB,EAkBzB0L,aAlByB;AAlB2E,SAA1C,CAAnD;AAoCa,OApC5B;AAqCA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBc,cAAzB,EAAyC,CAAC;AAC/DrX,cAAI,EAAE,sDADyD;AAE/DhB,cAAI,EAAE,CAAC;AACC/H,mBAAO,EAAEmgB,qBADV;AAEC9f,wBAAY,EAAE8f;AAFf,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAQd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACvvpZ,GAAG,GAAG,CAAC,CAAC,CAAC,SAAD,CAAD,CAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,SAAD,CAAZ;;AACA,eAAS0Z,2BAAT,CAAqCxZ,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACC,OAAxC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BD,MAAM,CAACE,UAAtC,EAAkD,GAAlD;AACH;AAAE;;AACH,eAASqZ,2BAAT,CAAqCzZ,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMM,OAAO,GAAGL,GAAG,CAACM,SAApB;;AACA,cAAMC,MAAM,GAAG,6DAAf;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACL,OAAxC;;AACA,kEAAiB,CAAjB;;AACA,2EAA0B,GAA1B,EAA+BK,MAAM,CAACC,YAAP,CAAoBH,OAApB,EAA6BE,MAAM,CAAC9F,IAApC,CAA/B,EAA0E,GAA1E;AACH;AAAE;;UACGgf,Q;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,yCAASC,SAAT;AACA;;;;AAGA,kBAAKzL,cAAL,GAAsB,kBAAtB;AALU;AAMb;;;QAPkB,2D;;AASvBwL,cAAQ,CAACjY,IAAT,GAAgB,SAASmY,gBAAT,CAA0BjY,CAA1B,EAA6B;AAAE,eAAOkY,qBAAqB,CAAClY,CAAC,IAAI+X,QAAN,CAA5B;AAA8C,OAA7F;;AACAA,cAAQ,CAAC/S,IAAT,GAAgB,gEAAyB;AAAE9E,YAAI,EAAE6X,QAAR;AAAkB5X,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAAhB,CAA7B;AAA0EwC,iBAAS,EAAE,CAAC,CAAD,EAAI,WAAJ,CAArF;AAAuGuT,gBAAQ,EAAE,CAAC,UAAD,CAAjH;AAA+HrU,gBAAQ,EAAE,CAAC,iEAA0B,CACjM;AAAExK,iBAAO,EAAE,2DAAX;AAAqByK,qBAAW,EAAEiW;AAAlC,SADiM,EAEjM;AAAE1gB,iBAAO,EAAE,4DAAX;AAAsByK,qBAAW,EAAEiW;AAAnC,SAFiM,CAA1B,CAAD,EAGtK,wEAHsK,CAAzI;AAGO5B,0BAAkB,EAAEhY,GAH3B;AAGgC8G,aAAK,EAAE,CAHvC;AAG0CC,YAAI,EAAE,CAHhD;AAGmDC,cAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,EAA0B,CAAC,WAAD,EAAc,EAAd,CAA1B,EAA6C,CAAC,iBAAD,EAAoB,EAApB,CAA7C,CAH3D;AAGkItF,gBAAQ,EAAE,SAASsY,iBAAT,CAA2B9Z,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/N,0EAAuBH,GAAvB;;AACA,uEAAoB,CAApB;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;;AACA,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SATkC;AAShCmH,kBAAU,EAAE,CAAC,kEAAD,EAAyB,gEAAzB,EAA+C,kEAA/C,CAToB;AASoD+S,cAAM,EAAE,CAAC,ixDAAD,CAT5D;AASi1D9S,qBAAa,EAAE;AATh2D,OAAzB,CAAhB;;AAUA,UAAM4S,qBAAqB,GAAG,oEAA6BH,QAA7B,CAA9B;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,QAAzB,EAAmC,CAAC;AACzD7X,cAAI,EAAE,uDADmD;AAEzDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,6BADX;AAECkZ,oBAAQ,EAAE,UAFX;AAGCrW,oBAAQ,EAAE,qEAHX;AAIC+C,gBAAI,EAAE;AACF,uBAAS;AADP,aAJP;AAOCnL,qBAAS,EAAE,CACP;AAAEJ,qBAAO,EAAE,2DAAX;AAAqByK,yBAAW,EAAEiW;AAAlC,aADO,EAEP;AAAE1gB,qBAAO,EAAE,4DAAX;AAAsByK,yBAAW,EAAEiW;AAAnC,aAFO,CAPZ;AAWCzS,yBAAa,EAAE,gEAAkBG,IAXlC;AAYC;AACA;AACAF,2BAAe,EAAE,sEAAwBC,OAd1C;AAeC4S,kBAAM,EAAE,CAAC,ixDAAD;AAfT,WAAD;AAFmD,SAAD,CAAnC,EAmBrB,IAnBqB,EAmBf,IAnBe;AAmBP,OAnBR;;AAoBd,UAAI,KAAJ,EAAW,CAOV;AAED;;;;;;AAKA;;;;;;UAIMC,U;;;;;;;;;;;;QAAmB,6D;;AAEzBA,gBAAU,CAACvY,IAAX,GAAkB,SAASwY,kBAAT,CAA4BtY,CAA5B,EAA+B;AAAE,eAAOuY,uBAAuB,CAACvY,CAAC,IAAIqY,UAAN,CAA9B;AAAkD,OAArG;;AACAA,gBAAU,CAACpY,IAAX,GAAkB,gEAAyB;AAAEC,YAAI,EAAEmY,UAAR;AAAoBlY,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyD0B,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,6DAAX;AAAuByK,qBAAW,EAAEuW;AAApC,SAAD,CAA1B,CAAD,EAAgF,wEAAhF;AAAnE,OAAzB,CAAlB;;AACA,UAAME,uBAAuB,GAAG,oEAA6BF,UAA7B,CAAhC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,UAAzB,EAAqC,CAAC;AAC3DnY,cAAI,EAAE,uDADqD;AAE3DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,cADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,6DAAX;AAAuByK,yBAAW,EAAEuW;AAApC,aAAD;AAFZ,WAAD;AAFqD,SAAD,CAArC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMG,gB;;;;;;;;;;;;QAAyB,mE;;AAE/BA,sBAAgB,CAAC1Y,IAAjB,GAAwB,SAAS2Y,wBAAT,CAAkCzY,CAAlC,EAAqC;AAAE,eAAO0Y,6BAA6B,CAAC1Y,CAAC,IAAIwY,gBAAN,CAApC;AAA8D,OAA7H;;AACAA,sBAAgB,CAACvY,IAAjB,GAAwB,gEAAyB;AAAEC,YAAI,EAAEsY,gBAAR;AAA0BrY,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,CAArC;AAAqE0B,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,mEAAX;AAA6ByK,qBAAW,EAAE0W;AAA1C,SAAD,CAA1B,CAAD,EAA4F,wEAA5F;AAA/E,OAAzB,CAAxB;;AACA,UAAME,6BAA6B,GAAG,oEAA6BF,gBAA7B,CAAtC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,gBAAzB,EAA2C,CAAC;AACjEtY,cAAI,EAAE,uDAD2D;AAEjEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oBADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,mEAAX;AAA6ByK,yBAAW,EAAE0W;AAA1C,aAAD;AAFZ,WAAD;AAF2D,SAAD,CAA3C,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMG,gB;;;;;;;;;;;;QAAyB,mE;;AAE/BA,sBAAgB,CAAC7Y,IAAjB,GAAwB,SAAS8Y,wBAAT,CAAkC5Y,CAAlC,EAAqC;AAAE,eAAO6Y,6BAA6B,CAAC7Y,CAAC,IAAI2Y,gBAAN,CAApC;AAA8D,OAA7H;;AACAA,sBAAgB,CAAC1Y,IAAjB,GAAwB,gEAAyB;AAAEC,YAAI,EAAEyY,gBAAR;AAA0BxY,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,CAArC;AAAqE0B,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,mEAAX;AAA6ByK,qBAAW,EAAE6W;AAA1C,SAAD,CAA1B,CAAD,EAA4F,wEAA5F;AAA/E,OAAzB,CAAxB;;AACA,UAAME,6BAA6B,GAAG,oEAA6BF,gBAA7B,CAAtC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,gBAAzB,EAA2C,CAAC;AACjEzY,cAAI,EAAE,uDAD2D;AAEjEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oBADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,mEAAX;AAA6ByK,yBAAW,EAAE6W;AAA1C,aAAD;AAFZ,WAAD;AAF2D,SAAD,CAA3C,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMG,Y;;;;;;;;;;;;QAAqB,+D;;AAE3BA,kBAAY,CAAChZ,IAAb,GAAoB,SAASiZ,oBAAT,CAA8B/Y,CAA9B,EAAiC;AAAE,eAAOgZ,yBAAyB,CAAChZ,CAAC,IAAI8Y,YAAN,CAAhC;AAAsD,OAA7G;;AACAA,kBAAY,CAAC7Y,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAE4Y,YAAR;AAAsB3Y,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6DuB,cAAM,EAAE;AAAEC,gBAAM,EAAE,QAAV;AAAoB5I,cAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB;AAA1B,SAArE;AAA2H8I,gBAAQ,EAAE,CAAC,iEAA0B,CACjM;AAAExK,iBAAO,EAAE,+DAAX;AAAyByK,qBAAW,EAAEgX;AAAtC,SADiM,EAEjM;AAAEzhB,iBAAO,EAAE,4BAAX;AAAyCyK,qBAAW,EAAEgX;AAAtD,SAFiM,CAA1B,CAAD,EAGtK,wEAHsK;AAArI,OAAzB,CAApB;AAIAA,kBAAY,CAAC7W,cAAb,GAA8B;AAC1BlJ,YAAI,EAAE,CAAC;AAAEmH,cAAI,EAAE,mDAAR;AAAehB,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD;AADoB,OAA9B;;AAGA,UAAM8Z,yBAAyB,GAAG,oEAA6BF,YAA7B,CAAlC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,YAAzB,EAAuC,CAAC;AAC7D5Y,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,gBADX;AAEC0E,kBAAM,EAAE,CAAC,QAAD,CAFT;AAGCjK,qBAAS,EAAE,CACP;AAAEJ,qBAAO,EAAE,+DAAX;AAAyByK,yBAAW,EAAEgX;AAAtC,aADO,EAEP;AAAEzhB,qBAAO,EAAE,4BAAX;AAAyCyK,yBAAW,EAAEgX;AAAtD,aAFO;AAHZ,WAAD;AAFuD,SAAD,CAAvC,EAUrB,IAVqB,EAUf;AAAE/f,cAAI,EAAE,CAAC;AACXmH,gBAAI,EAAE,mDADK;AAEXhB,gBAAI,EAAE,CAAC,cAAD;AAFK,WAAD;AAAR,SAVe;AAab,OAbF;;AAcd,UAAI,KAAJ,EAAW,CAQV;AACD;;;;;UAGM+Z,a;;;;;AACF;;;;AAIA,+BAAY9W,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA;;AAC/B,wCAAMD,SAAN,EAAiBC,UAAjB;AACAA,oBAAU,CAACE,aAAX,CAAyBC,SAAzB,CAAmCC,GAAnC,sBAAqDL,SAAS,CAACpB,oBAA/D;AAF+B;AAGlC;;;QARuB,gE;;AAU5BkY,mBAAa,CAACnZ,IAAd,GAAqB,SAASoZ,qBAAT,CAA+BlZ,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIiZ,aAAV,EAAyB,gEAAyB,+DAAzB,CAAzB,EAAwE,gEAAyB,wDAAzB,CAAxE,CAAP;AAA8H,OAAvL;;AACAA,mBAAa,CAAChZ,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAE+Y,aAAR;AAAuB9Y,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,iBAA5B,CAAnG;AAAmJd,gBAAQ,EAAE,CAAC,wEAAD;AAA7J,OAAzB,CAArB;AACA;;AACAoX,mBAAa,CAAC7Y,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAE;AAAR,SADiC,EAEjC;AAAEA,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB+Y,aAAzB,EAAwC,CAAC;AAC9D/Y,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sCADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,iBADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFwD,SAAD,CAAxC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAE;AAAR,WAAD,EAAgC;AAAEA,gBAAI,EAAE;AAAR,WAAhC,CAAP;AAAsE,SAT/D,EASiE,IATjE;AASyE,OATxF;AAUd;;;;;UAGMiZ,a;;;;;AACF;;;;AAIA,+BAAYhX,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA;;AAC/B,wCAAMD,SAAN,EAAiBC,UAAjB;AACAA,oBAAU,CAACE,aAAX,CAAyBC,SAAzB,CAAmCC,GAAnC,sBAAqDL,SAAS,CAACpB,oBAA/D;AAF+B;AAGlC;;;QARuB,gE;;AAU5BoY,mBAAa,CAACrZ,IAAd,GAAqB,SAASsZ,qBAAT,CAA+BpZ,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAImZ,aAAV,EAAyB,gEAAyB,+DAAzB,CAAzB,EAAwE,gEAAyB,wDAAzB,CAAxE,CAAP;AAA8H,OAAvL;;AACAA,mBAAa,CAAClZ,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAEiZ,aAAR;AAAuBhZ,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,iBAAxB,CAAnG;AAA+Id,gBAAQ,EAAE,CAAC,wEAAD;AAAzJ,OAAzB,CAArB;AACA;;AACAsX,mBAAa,CAAC/Y,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEF,cAAI,EAAE;AAAR,SADiC,EAEjC;AAAEA,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBiZ,aAAzB,EAAwC,CAAC;AAC9DjZ,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sCADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,iBADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFwD,SAAD,CAAxC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAE;AAAR,WAAD,EAAgC;AAAEA,gBAAI,EAAE;AAAR,WAAhC,CAAP;AAAsE,SAT/D,EASiE,IATjE;AASyE,OATxF;AAUd;;;;;UAGMmZ,O;;;;;AACF;;;;AAIA,yBAAYlX,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AAAA;;AAC/B,wCAAMD,SAAN,EAAiBC,UAAjB;AACAA,oBAAU,CAACE,aAAX,CAAyBC,SAAzB,CAAmCC,GAAnC,sBAAqDL,SAAS,CAACpB,oBAA/D;AAF+B;AAGlC;;;QARiB,0D;;AAUtBsY,aAAO,CAACvZ,IAAR,GAAe,SAASwZ,eAAT,CAAyBtZ,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIqZ,OAAV,EAAmB,gEAAyB,+DAAzB,CAAnB,EAAkE,gEAAyB,wDAAzB,CAAlE,CAAP;AAAwH,OAArK;;AACAA,aAAO,CAACpZ,IAAR,GAAe,gEAAyB;AAAEC,YAAI,EAAEmZ,OAAR;AAAiBlZ,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf,CAA5B;AAAoEwC,iBAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,UAAxB,CAA/E;AAAoHd,gBAAQ,EAAE,CAAC,wEAAD;AAA9H,OAAzB,CAAf;AACA;;AACAwX,aAAO,CAACjZ,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEF,cAAI,EAAE;AAAR,SAD2B,EAE3B;AAAEA,cAAI,EAAE;AAAR,SAF2B,CAAN;AAAA,OAAzB;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmZ,OAAzB,EAAkC,CAAC;AACxDnZ,cAAI,EAAE,uDADkD;AAExDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,wBADX;AAEC4F,gBAAI,EAAE;AACF,uBAAS,UADP;AAEF,sBAAQ;AAFN;AAFP,WAAD;AAFkD,SAAD,CAAlC,EASrB,YAAY;AAAE,iBAAO,CAAC;AAAE1C,gBAAI,EAAE;AAAR,WAAD,EAAgC;AAAEA,gBAAI,EAAE;AAAR,WAAhC,CAAP;AAAsE,SAT/D,EASiE,IATjE;AASyE,OATxF;AAWd;;;;;;AAKA;;;;;;UAIMqZ,e;;;;;;;;;;;;QAAwB,kE;;AAE9BA,qBAAe,CAACzZ,IAAhB,GAAuB,SAAS0Z,uBAAT,CAAiCxZ,CAAjC,EAAoC;AAAE,eAAOyZ,4BAA4B,CAACzZ,CAAC,IAAIuZ,eAAN,CAAnC;AAA4D,OAAzH;;AACAA,qBAAe,CAACtZ,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAEqZ,eAAR;AAAyBpZ,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmEuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C3B,gBAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,SAA3E;AAAqKE,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,kEAAX;AAA4ByK,qBAAW,EAAEyX;AAAzC,SAAD,CAA1B,CAAD,EAA0F,wEAA1F;AAA/K,OAAzB,CAAvB;;AACA,UAAME,4BAA4B,GAAG,oEAA6BF,eAA7B,CAArC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,eAAzB,EAA0C,CAAC;AAChErZ,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,mBADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,kEAAX;AAA4ByK,yBAAW,EAAEyX;AAAzC,aAAD,CAFZ;AAGC7X,kBAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAHT,WAAD;AAF0D,SAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,OAPR;;AAQd,UAAI,KAAJ,EAAW,CAGV;AACD;;;;;;UAIMgY,e;;;;;;;;;;;;QAAwB,kE;;AAE9BA,qBAAe,CAAC5Z,IAAhB,GAAuB,SAAS6Z,uBAAT,CAAiC3Z,CAAjC,EAAoC;AAAE,eAAO4Z,4BAA4B,CAAC5Z,CAAC,IAAI0Z,eAAN,CAAnC;AAA4D,OAAzH;;AACAA,qBAAe,CAACzZ,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAEwZ,eAAR;AAAyBvZ,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmEuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C3B,gBAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,SAA3E;AAAqKE,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,kEAAX;AAA4ByK,qBAAW,EAAE4X;AAAzC,SAAD,CAA1B,CAAD,EAA0F,wEAA1F;AAA/K,OAAzB,CAAvB;;AACA,UAAME,4BAA4B,GAAG,oEAA6BF,eAA7B,CAArC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,eAAzB,EAA0C,CAAC;AAChExZ,cAAI,EAAE,uDAD0D;AAEhEhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,mBADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,kEAAX;AAA4ByK,yBAAW,EAAE4X;AAAzC,aAAD,CAFZ;AAGChY,kBAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAHT,WAAD;AAF0D,SAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,OAPR;;AAQd,UAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;;UAMMmY,S;;;;;;;;;;;;QAAkB,4D;;AAExBA,eAAS,CAAC/Z,IAAV,GAAiB,SAASga,iBAAT,CAA2B9Z,CAA3B,EAA8B;AAAE,eAAO+Z,sBAAsB,CAAC/Z,CAAC,IAAI6Z,SAAN,CAA7B;AAAgD,OAAjG;;AACAA,eAAS,CAAC5Z,IAAV,GAAiB,gEAAyB;AAAEC,YAAI,EAAE2Z,SAAR;AAAmB1Z,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDuB,cAAM,EAAE;AAAE4B,iBAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAAX;AAA4CiB,cAAI,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAAlD,SAA/D;AAA8I1C,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,4DAAX;AAAsByK,qBAAW,EAAE+X;AAAnC,SAAD,CAA1B,CAAD,EAA8E,wEAA9E;AAAxJ,OAAzB,CAAjB;;AACA,UAAME,sBAAsB,GAAG,oEAA6BF,SAA7B,CAA/B;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,SAAzB,EAAoC,CAAC;AAC1D3Z,cAAI,EAAE,uDADoD;AAE1DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,aADX;AAECvF,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,4DAAX;AAAsByK,yBAAW,EAAE+X;AAAnC,aAAD,CAFZ;AAGCnY,kBAAM,EAAE,CAAC,2BAAD,EAA8B,qBAA9B;AAHT,WAAD;AAFoD,SAAD,CAApC,EAOrB,IAPqB,EAOf,IAPe;AAOP,OAPR;AAQd;;;;;UAGMsY,Y;;;;;;;;;;;;QAAqB,+D;;AAE3BA,kBAAY,CAACla,IAAb,GAAoB,SAASma,oBAAT,CAA8Bja,CAA9B,EAAiC;AAAE,eAAOka,yBAAyB,CAACla,CAAC,IAAIga,YAAN,CAAhC;AAAsD,OAA7G;;AACAA,kBAAY,CAAChV,IAAb,GAAoB,gEAAyB;AAAE9E,YAAI,EAAE8Z,YAAR;AAAsB7Z,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsIuT,gBAAQ,EAAE,CAAC,cAAD,CAAhJ;AAAkKrU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,+DAAX;AAAyByK,qBAAW,EAAEkY;AAAtC,SAAD,CAA1B,CAAD,EAAoF,wEAApF,CAA5K;AAAoS/U,aAAK,EAAE,CAA3S;AAA8SC,YAAI,EAAE,CAApT;AAAuTC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAA/T;AAAwVtF,gBAAQ,EAAE,SAASsa,qBAAT,CAA+B9b,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC7b,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFsC;AAEpCgH,kBAAU,EAAE,CAAC,gEAAD,CAFwB;AAEAC,qBAAa,EAAE;AAFf,OAAzB,CAApB;;AAGA,UAAM4U,yBAAyB,GAAG,oEAA6BF,YAA7B,CAAlC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,YAAzB,EAAuC,CAAC;AAC7D9Z,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oCADX;AAEC6C,oBAAQ,EAAE,mEAFX;AAGC+C,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG,IAVlC;AAWCyQ,oBAAQ,EAAE,cAXX;AAYCze,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,+DAAX;AAAyByK,yBAAW,EAAEkY;AAAtC,aAAD;AAZZ,WAAD;AAFuD,SAAD,CAAvC,EAgBrB,IAhBqB,EAgBf,IAhBe;AAgBP,OAhBR;AAiBd;;;;;UAGMI,Y;;;;;;;;;;;;QAAqB,+D;;AAE3BA,kBAAY,CAACta,IAAb,GAAoB,SAASua,oBAAT,CAA8Bra,CAA9B,EAAiC;AAAE,eAAOsa,yBAAyB,CAACta,CAAC,IAAIoa,YAAN,CAAhC;AAAsD,OAA7G;;AACAA,kBAAY,CAACpV,IAAb,GAAoB,gEAAyB;AAAE9E,YAAI,EAAEka,YAAR;AAAsBja,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqFwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsIuT,gBAAQ,EAAE,CAAC,cAAD,CAAhJ;AAAkKrU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,+DAAX;AAAyByK,qBAAW,EAAEsY;AAAtC,SAAD,CAA1B,CAAD,EAAoF,wEAApF,CAA5K;AAAoSnV,aAAK,EAAE,CAA3S;AAA8SC,YAAI,EAAE,CAApT;AAAuTC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAA/T;AAAwVtF,gBAAQ,EAAE,SAAS0a,qBAAT,CAA+Blc,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC7b,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFsC;AAEpCgH,kBAAU,EAAE,CAAC,gEAAD,CAFwB;AAEAC,qBAAa,EAAE;AAFf,OAAzB,CAApB;;AAGA,UAAMgV,yBAAyB,GAAG,oEAA6BF,YAA7B,CAAlC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,YAAzB,EAAuC,CAAC;AAC7Dla,cAAI,EAAE,uDADuD;AAE7DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,oCADX;AAEC6C,oBAAQ,EAAE,mEAFX;AAGC+C,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG,IAVlC;AAWCyQ,oBAAQ,EAAE,cAXX;AAYCze,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,+DAAX;AAAyByK,yBAAW,EAAEsY;AAAtC,aAAD;AAZZ,WAAD;AAFuD,SAAD,CAAvC,EAgBrB,IAhBqB,EAgBf,IAhBe;AAgBP,OAhBR;AAiBd;;;;;UAGMI,M;;;;;;;;;;;;QAAe,yD;;AAErBA,YAAM,CAAC1a,IAAP,GAAc,SAAS2a,cAAT,CAAwBza,CAAxB,EAA2B;AAAE,eAAO0a,mBAAmB,CAAC1a,CAAC,IAAIwa,MAAN,CAA1B;AAA0C,OAArF;;AACAA,YAAM,CAACxV,IAAP,GAAc,gEAAyB;AAAE9E,YAAI,EAAEsa,MAAR;AAAgBra,iBAAS,EAAE,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,IAAD,EAAO,SAAP,EAAkB,EAAlB,CAAd,CAA3B;AAAiEwC,iBAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,SAAnB,CAA5E;AAA2GuT,gBAAQ,EAAE,CAAC,QAAD,CAArH;AAAiIrU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAExK,iBAAO,EAAE,yDAAX;AAAmByK,qBAAW,EAAE0Y;AAAhC,SAAD,CAA1B,CAAD,EAAwE,wEAAxE,CAA3I;AAAuPvV,aAAK,EAAE,CAA9P;AAAiQC,YAAI,EAAE,CAAvQ;AAA0QC,cAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAlR;AAA2StF,gBAAQ,EAAE,SAAS8a,eAAT,CAAyBtc,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpY,6EAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,SAFgC;AAE9BgH,kBAAU,EAAE,CAAC,gEAAD,CAFkB;AAEMC,qBAAa,EAAE;AAFrB,OAAzB,CAAd;;AAGA,UAAMoV,mBAAmB,GAAG,oEAA6BF,MAA7B,CAA5B;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,MAAzB,EAAiC,CAAC;AACvDta,cAAI,EAAE,uDADiD;AAEvDhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,sBADX;AAEC6C,oBAAQ,EAAE,mEAFX;AAGC+C,gBAAI,EAAE;AACF,uBAAS,SADP;AAEF,sBAAQ;AAFN,aAHP;AAOC;AACA;AACA2C,2BAAe,EAAE,sEAAwBC,OAT1C;AAUCF,yBAAa,EAAE,gEAAkBG,IAVlC;AAWCyQ,oBAAQ,EAAE,QAXX;AAYCze,qBAAS,EAAE,CAAC;AAAEJ,qBAAO,EAAE,yDAAX;AAAmByK,yBAAW,EAAE0Y;AAAhC,aAAD;AAZZ,WAAD;AAFiD,SAAD,CAAjC,EAgBrB,IAhBqB,EAgBf,IAhBe;AAgBP,OAhBR;AAkBd;;;;;;AAKA;;;;;;;;;;;;UAUMI,a;;;;;;;;;;;;QAAsB,gE;;AAE5BA,mBAAa,CAAC9a,IAAd,GAAqB,SAAS+a,qBAAT,CAA+B7a,CAA/B,EAAkC;AAAE,eAAO8a,0BAA0B,CAAC9a,CAAC,IAAI4a,aAAN,CAAjC;AAAwD,OAAjH;;AACAA,mBAAa,CAAC5V,IAAd,GAAqB,gEAAyB;AAAE9E,YAAI,EAAE0a,aAAR;AAAuBza,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD0B,gBAAQ,EAAE,CAAC,wEAAD,CAAnE;AAAwGoD,aAAK,EAAE,CAA/G;AAAkHC,YAAI,EAAE,CAAxH;AAA2HC,cAAM,EAAE,CAAC,CAAC,cAAD,EAAiB,EAAjB,CAAD,EAAuB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,YAA3B,EAAyC,CAAzC,EAA4C,kBAA5C,CAAvB,EAAwF,CAAC,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,YAApB,EAAkC,CAAlC,EAAqC,YAArC,CAAxF,EAA4I,CAAC,iBAAD,EAAoB,EAApB,CAA5I,EAAqK,CAAC,UAAD,EAAa,EAAb,CAArK,CAAnI;AAA2TtF,gBAAQ,EAAE,SAASkb,sBAAT,CAAgC1c,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACla,kFAA+B,CAA/B,EAAkC,CAAlC;;AACA,qEAAkB,CAAlB,EAAqBwZ,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;;AACA,qEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;;AACA;AACH;AAAE,SALuC;AAKrCzS,kBAAU,EAAE,CAACyT,YAAD,EACbN,gBADa,EAEbH,UAFa,EAGbY,aAHa,EAIbI,OAJa,CALyB;AAS5B/T,qBAAa,EAAE;AATa,OAAzB,CAArB;;AAUA,UAAMwV,0BAA0B,GAAG,oEAA6BF,aAA7B,CAAnC;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,aAAzB,EAAwC,CAAC;AAC9D1a,cAAI,EAAE,uDADwD;AAE9DhB,cAAI,EAAE,CAAC;AACClC,oBAAQ,EAAE,iBADX;AAEC6C,oBAAQ,gTAFT;AAYCyF,yBAAa,EAAE,gEAAkBG,IAZlC;AAaC;AACA;AACA;AACA;AACA;AACA;AACAF,2BAAe,EAAE,sEAAwBC;AAnB1C,WAAD;AAFwD,SAAD,CAAxC,EAuBrB,IAvBqB,EAuBf,IAvBe;AAuBP,OAvBR;AAyBd;;;;;;AAKA;;;AACA,UAAM8R,qBAAqB,GAAG,CAC1B;AACAS,cAF0B,EAG1B;AACAS,sBAJ0B,EAK1Be,eAL0B,EAM1BT,YAN0B,EAO1BT,UAP0B,EAQ1BwB,SAR0B,EAS1BlB,gBAT0B,EAU1Be,eAV0B,EAW1B;AACAT,mBAZ0B,EAa1BI,OAb0B,EAc1BF,aAd0B,EAe1B;AACAa,kBAhB0B,EAiB1BQ,MAjB0B,EAkB1BJ,YAlB0B,EAmB1BQ,aAnB0B,CAA9B;;UAqBMI,c;;;;AAENA,oBAAc,CAACxD,IAAf,GAAsB,+DAAwB;AAAEtX,YAAI,EAAE8a;AAAR,OAAxB,CAAtB;AACAA,oBAAc,CAACvD,IAAf,GAAsB,+DAAwB;AAAEC,eAAO,EAAE,SAASuD,sBAAT,CAAgCjb,CAAhC,EAAmC;AAAE,iBAAO,KAAKA,CAAC,IAAIgb,cAAV,GAAP;AAAqC,SAArF;AAAuF9jB,eAAO,EAAE,CAAC,CACnI,iEADmI,EAEnI,sEAFmI,CAAD,EAItI,sEAJsI;AAAhG,OAAxB,CAAtB;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAO0gB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BoD,cAA1B,EAA0C;AAAExjB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACugB,QAAD,EACzIS,gBADyI,EAEzIe,eAFyI,EAGzIT,YAHyI,EAIzIT,UAJyI,EAKzIwB,SALyI,EAMzIlB,gBANyI,EAOzIe,eAPyI,EAQzIT,aARyI,EASzII,OATyI,EAUzIF,aAVyI,EAWzIa,YAXyI,EAYzIQ,MAZyI,EAazIJ,YAbyI,EAczIQ,aAdyI,CAAP;AAcjH,WAdmF;AAcjF1jB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,iEAAD,EACjD,sEADiD,CAAP;AACvB,WAfiF;AAe/EC,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EACnD4gB,QADmD,EAEnDS,gBAFmD,EAGnDe,eAHmD,EAInDT,YAJmD,EAKnDT,UALmD,EAMnDwB,SANmD,EAOnDlB,gBAPmD,EAQnDe,eARmD,EASnDT,aATmD,EAUnDI,OAVmD,EAWnDF,aAXmD,EAYnDa,YAZmD,EAanDQ,MAbmD,EAcnDJ,YAdmD,EAenDQ,aAfmD,CAAP;AAe3B;AA9BmF,SAA1C,CAAnD;AA8BgB,OA9B/B;AA+BA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBI,cAAzB,EAAyC,CAAC;AAC/D9a,cAAI,EAAE,sDADyD;AAE/DhB,cAAI,EAAE,CAAC;AACChI,mBAAO,EAAE,CACL,iEADK,EAEL,sEAFK,CADV;AAKCC,mBAAO,EAAE,CAAC,sEAAD,EAAkBmgB,qBAAlB,CALV;AAMC9f,wBAAY,EAAE8f;AANf,WAAD;AAFyD,SAAD,CAAzC,EAUrB,IAVqB,EAUf,IAVe;AAUP,OAVR;AAYd;;;;;;AAKA;;;;;;;AAKA,UAAM4D,gBAAgB,GAAG,gBAAzB;AACA;;;;;;;;;;;;;;;UAcMC,kB;;;;;AACF;;;AAGA,sCAA8B;AAAA;;AAAA,cAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAC1B;AACA;;;;AAGA,kBAAKC,WAAL,GAAmB,IAAI,oDAAJ,CAAoB,EAApB,CAAnB;AACA;;;;AAGA,kBAAKC,OAAL,GAAe,IAAI,oDAAJ,CAAoB,EAApB,CAAf;AACA;;;;AAGA,kBAAKC,oBAAL,GAA4B,IAAI,4CAAJ,EAA5B;AACA;;;;;AAIA,kBAAKC,0BAAL,GAAkC,kDAAaC,KAA/C;AACA;;;;;;;;;;AASA,kBAAKC,mBAAL;AAA4B;;;;;AAK5B,oBAAC7kB,IAAD,EAAO8kB,YAAP,EAAwB;AACpB;AACA,gBAAMtG,KAAK;AAAK;AAAkBxe,gBAApB,CAA4B8kB,YAA5B,CAAd;;AACA,gBAAI,6EAAetG,KAAf,CAAJ,EAA2B;AACvB;AACA,kBAAMuG,WAAW,GAAGhP,MAAM,CAACyI,KAAD,CAA1B,CAFuB,CAGvB;AACA;;AACA,qBAAOuG,WAAW,GAAGV,gBAAd,GAAiCU,WAAjC,GAA+CvG,KAAtD;AACH;;AACD,mBAAOA,KAAP;AACH,WAhBD;AAiBA;;;;;;;;;;;AASA,kBAAKwG,QAAL;AAAiB;;;;;AAKjB,oBAAChlB,IAAD,EAAOilB,IAAP,EAAgB;AACZ;AACA,gBAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;AACA;;AACA,gBAAM3V,SAAS,GAAG0V,IAAI,CAAC1V,SAAvB;;AACA,gBAAI,CAAC2V,MAAD,IAAW3V,SAAS,IAAI,EAA5B,EAAgC;AAC5B,qBAAOvP,IAAP;AACH;;AACD,mBAAOA,IAAI,CAACilB,IAAL;AAAW;;;;;AAKlB,sBAACE,CAAD,EAAIC,CAAJ,EAAU;AACN;AACA,kBAAIC,MAAM,GAAG,QAAKR,mBAAL,CAAyBM,CAAzB,EAA4BD,MAA5B,CAAb;AACA;;;AACA,kBAAII,MAAM,GAAG,QAAKT,mBAAL,CAAyBO,CAAzB,EAA4BF,MAA5B,CAAb,CAJM,CAKN;AACA;AACA;AACA;;AACA;;;AACA,kBAAIK,gBAAgB,GAAG,CAAvB;;AACA,kBAAIF,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAAhC,EAAsC;AAClC;AACA,oBAAID,MAAM,GAAGC,MAAb,EAAqB;AACjBC,kCAAgB,GAAG,CAAnB;AACH,iBAFD,MAGK,IAAIF,MAAM,GAAGC,MAAb,EAAqB;AACtBC,kCAAgB,GAAG,CAAC,CAApB;AACH;AACJ,eARD,MASK,IAAIF,MAAM,IAAI,IAAd,EAAoB;AACrBE,gCAAgB,GAAG,CAAnB;AACH,eAFI,MAGA,IAAID,MAAM,IAAI,IAAd,EAAoB;AACrBC,gCAAgB,GAAG,CAAC,CAApB;AACH;;AACD,qBAAOA,gBAAgB,IAAIhW,SAAS,IAAI,KAAb,GAAqB,CAArB,GAAyB,CAAC,CAA9B,CAAvB;AACH,aAhCM,CAAP;AAiCH,WA9CD;AA+CA;;;;;;;;;;;;AAUA,kBAAKiW,eAAL;AAAwB;;;;;AAKxB,oBAACxlB,IAAD,EAAO2b,MAAP,EAAkB;AACd;;AACA;AACA,gBAAM8J,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY3lB,IAAZ,EAAkBic,MAAlB;AAA0B;;;;;AAK1C,sBAAC2J,WAAD,EAAcC,GAAd,EAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAOD,WAAW;AAAK;AAAkB5lB,kBAApB,CAA4B6lB,GAA5B,CAAd,GAAiD,GAAxD;AACH,aAbe,EAaZ,EAbY,EAaRC,WAbQ,EAAhB,CAHc,CAiBd;;AACA;;AACA,gBAAMC,iBAAiB,GAAGpK,MAAM,CAACqK,IAAP,GAAcF,WAAd,EAA1B;AACA,mBAAOL,OAAO,CAACQ,OAAR,CAAgBF,iBAAhB,KAAsC,CAAC,CAA9C;AACH,WA1BD;;AA2BA,kBAAKxL,KAAL,GAAa,IAAI,oDAAJ,CAAoBgK,WAApB,CAAb;;AACA,kBAAK2B,yBAAL;;AA3I0B;AA4I7B;AACD;;;;;;;;;AAuDA;;;;;;sDAM4B;AAAA;;AACxB;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,gBAAMC,UAAU,GAAG,KAAKC,KAAL;AACd;AAAkB,+DAAM,KAAKA,KAAL,CAAWD,UAAjB,EAA6B,KAAKC,KAAL,CAAWC,WAAxC,CADJ,GAEf,gDAAG,IAAH,CAFJ;AAGA;;AACA,gBAAMC,UAAU,GAAG,KAAKC,UAAL;AACd;AAAkB,+DAAM,KAAKA,UAAL,CAAgBC,IAAtB,EAA4B,KAAK9B,oBAAjC,EAAuD,KAAK6B,UAAL,CAAgBF,WAAvE,CADJ,GAEf,gDAAG,IAAH,CAFJ;AAGA;;AACA,gBAAMhK,UAAU,GAAG,KAAK9B,KAAxB,CAhBwB,CAiBxB;;AACA;;AACA,gBAAMkM,YAAY,GAAG,2DAAc,CAACpK,UAAD,EAAa,KAAKoI,OAAlB,CAAd,EAChBjI,IADgB,CACX;AAAK;;;;AAIf;AAAA;AAAA,kBAAExc,IAAF;;AAAA,qBAAY,OAAI,CAAC0mB,WAAL,CAAiB1mB,IAAjB,CAAZ;AAAA,aAJU,CADW,CAArB,CAnBwB,CAyBxB;;AACA;;AACA,gBAAM2mB,WAAW,GAAG,2DAAc,CAACF,YAAD,EAAeN,UAAf,CAAd,EACf3J,IADe,CACV;AAAK;;;;AAIf;AAAA;AAAA,kBAAExc,IAAF;;AAAA,qBAAY,OAAI,CAAC4mB,UAAL,CAAgB5mB,IAAhB,CAAZ;AAAA,aAJU,CADU,CAApB,CA3BwB,CAiCxB;;AACA;;AACA,gBAAM6mB,aAAa,GAAG,2DAAc,CAACF,WAAD,EAAcL,UAAd,CAAd,EACjB9J,IADiB,CACZ;AAAK;;;;AAIf;AAAA;AAAA,kBAAExc,IAAF;;AAAA,qBAAY,OAAI,CAAC8mB,SAAL,CAAe9mB,IAAf,CAAZ;AAAA,aAJU,CADY,CAAtB,CAnCwB,CAyCxB;;AACA,iBAAK2kB,0BAAL,CAAgCxI,WAAhC;;AACA,iBAAKwI,0BAAL,GAAkCkC,aAAa,CAAClgB,SAAd;AAAyB;;;;AAI3D,sBAAA3G,IAAI;AAAA,qBAAI,OAAI,CAACwkB,WAAL,CAAiB9M,IAAjB,CAAsB1X,IAAtB,CAAJ;AAAA,aAJ8B,CAAlC;AAKH;AACD;;;;;;;;;;sCAOYA,I,EAAM;AAAA;;AACd;AACA;AACA;AACA,iBAAKymB,YAAL,GACI,CAAC,KAAK9K,MAAN,GAAe3b,IAAf,GAAsBA,IAAI,CAAC2b,MAAL;AAAa;;;;AAInC,sBAAAoL,GAAG;AAAA,qBAAI,OAAI,CAACvB,eAAL,CAAqBuB,GAArB,EAA0B,OAAI,CAACpL,MAA/B,CAAJ;AAAA,aAJmB,CAD1B;;AAMA,gBAAI,KAAKqL,SAAT,EAAoB;AAChB,mBAAKC,gBAAL,CAAsB,KAAKR,YAAL,CAAkBxW,MAAxC;AACH;;AACD,mBAAO,KAAKwW,YAAZ;AACH;AACD;;;;;;;;;;qCAOWzmB,I,EAAM;AACb;AACA,gBAAI,CAAC,KAAKilB,IAAV,EAAgB;AACZ,qBAAOjlB,IAAP;AACH;;AACD,mBAAO,KAAKglB,QAAL,CAAchlB,IAAI,CAACqgB,KAAL,EAAd,EAA4B,KAAK4E,IAAjC,CAAP;AACH;AACD;;;;;;;;;oCAMUjlB,I,EAAM;AACZ,gBAAI,CAAC,KAAKgnB,SAAV,EAAqB;AACjB,qBAAOhnB,IAAP;AACH;AACD;;;AACA,gBAAMknB,UAAU,GAAG,KAAKF,SAAL,CAAeG,SAAf,GAA2B,KAAKH,SAAL,CAAeI,QAA7D;AACA,mBAAOpnB,IAAI,CAACqgB,KAAL,CAAW6G,UAAX,EAAuBA,UAAU,GAAG,KAAKF,SAAL,CAAeI,QAAnD,CAAP;AACH;AACD;;;;;;;;;;2CAOiBC,kB,EAAoB;AAAA;;AACjCC,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF;AACA,kBAAMR,SAAS,GAAG,OAAI,CAACA,SAAvB;;AACA,kBAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AACDA,uBAAS,CAAC/W,MAAV,GAAmBoX,kBAAnB,CANE,CAOF;;AACA,kBAAIL,SAAS,CAACG,SAAV,GAAsB,CAA1B,EAA6B;AACzB;AACA,oBAAMM,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUX,SAAS,CAAC/W,MAAV,GAAmB+W,SAAS,CAACI,QAAvC,IAAmD,CAAnD,IAAwD,CAA9E;AACA;;AACA,oBAAMQ,YAAY,GAAGF,IAAI,CAACG,GAAL,CAASb,SAAS,CAACG,SAAnB,EAA8BM,aAA9B,CAArB;;AACA,oBAAIG,YAAY,KAAKZ,SAAS,CAACG,SAA/B,EAA0C;AACtCH,2BAAS,CAACG,SAAV,GAAsBS,YAAtB,CADsC,CAEtC;AACA;;AACA,yBAAI,CAAClD,oBAAL,CAA0BhN,IAA1B;AACH;AACJ;AACJ,aAvBD;AAwBH;AACD;;;;;;;;oCAKU;AAAE,mBAAO,KAAK8M,WAAZ;AAA0B;AACtC;;;;;;;;uCAKa,CAAG;;;8BAxML;AAAE,mBAAO,KAAKjK,KAAL,CAAWiE,KAAlB;AAA0B;AACvC;;;;;4BAISxe,I,EAAM;AAAE,iBAAKua,KAAL,CAAW7C,IAAX,CAAgB1X,IAAhB;AAAwB;AACzC;;;;;;;;8BAKa;AAAE,mBAAO,KAAKykB,OAAL,CAAajG,KAApB;AAA4B;AAC3C;;;;;4BAIW7C,M,EAAQ;AAAE,iBAAK8I,OAAL,CAAa/M,IAAb,CAAkBiE,MAAlB;AAA4B;AACjD;;;;;;;;8BAKW;AAAE,mBAAO,KAAKyK,KAAZ;AAAoB;AACjC;;;;;4BAISnB,I,EAAM;AACX,iBAAKmB,KAAL,GAAanB,IAAb;;AACA,iBAAKiB,yBAAL;AACH;AACD;;;;;;;;;;;;;;8BAWgB;AAAE,mBAAO,KAAKK,UAAZ;AAAyB;AAC3C;;;;;4BAIcS,S,EAAW;AACrB,iBAAKT,UAAL,GAAkBS,SAAlB;;AACA,iBAAKd,yBAAL;AACH;;;;QAvM4B,6D;;AA+VjC,UAAI,KAAJ,EAAW,CAmFV;AAED;;;;;;AAMA;;;AAMA","file":"cosmos-google-groups-es5.js","sourcesContent":["export * from './lib/google-groups.module';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MsalGuard } from '@azure/msal-angular';\nimport { RolesGuard } from \"@cosmos/guards\";\n\nimport { GroupsHomeComponent } from './groups-home/groups-home.component';\nimport { GroupDetailComponent } from './group-detail/group-detail.component';\nimport { GroupsListComponent } from './groups-list/groups-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'group',\n    component: GroupDetailComponent,\n    data: {\n      roles: ['cosmos-superuser', 'cosmos-user-its']\n    },\n    canActivate: [\n      MsalGuard, RolesGuard\n    ]\n  },\n  { \n    path: 'list',\n    component: GroupsListComponent,\n    data: {\n      roles: ['cosmos-superuser', 'cosmos-user-its']\n    },\n    canActivate: [\n      MsalGuard, RolesGuard\n    ]\n  },\n  { \n    path: '',\n    component: GroupsHomeComponent,\n    data: {\n      roles: ['cosmos-superuser', 'cosmos-user-its']\n    },\n    canActivate: [\n      MsalGuard, RolesGuard\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoogleGroupsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MsalInterceptor } from '@azure/msal-angular';\n\nimport { MatTableModule } from \"@angular/material/table\";\n\nimport { GoogleGroupsRoutingModule } from './google-groups-routing.module';\n\nimport { GroupsHomeComponent } from './groups-home/groups-home.component';\nimport { GroupsSearchComponent } from './groups-search/groups-search.component';\n\nimport { GroupDetailComponent } from './group-detail/group-detail.component';\nimport { GroupsListComponent } from './groups-list/groups-list.component';\n\nimport { MembershipsListComponent } from './memberships-list/memberships-list.component';\nimport { MembershipDetailComponent } from './membership-detail/membership-detail.component';\n\n@NgModule({\n  declarations: [\n    GroupDetailComponent,\n    GroupsListComponent,\n    GroupsHomeComponent,\n    GroupsSearchComponent,\n    MembershipsListComponent,\n    MembershipDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n\n    GoogleGroupsRoutingModule\n  ],\n  exports: [\n    GroupDetailComponent,\n    GroupsListComponent,\n    GroupsHomeComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: MsalInterceptor, multi: true }\n  ]\n})\nexport class GoogleGroupsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from \"rxjs\";\nimport { MessagesService } from '@cosmos/messages';\nimport { CodexService } from \"@cosmos/codex-service\";\nimport { IGORService } from \"@cosmos/igor-service\";\n\nimport { GoogleGroup } from \"@cosmos/types\";\nimport { IGORGroup } from \"@cosmos/types\";\n\nimport { GROUPS } from \"@cosmos/mocks\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleGroupsService {\n  private groups: GoogleGroup[] = [];\n\n  constructor(\n    private messagesService: MessagesService,\n    private codexService: CodexService,\n    private igorService: IGORService\n  ) { }\n\n  listGroups(list: string): Observable<GoogleGroup[]> {\n    //this.messagesService.add('Google Groups Service: fetched Groups');\n    //return of(GROUPS);\n\n    let groups = this.igorService.listGroups(list);\n    return groups;\n  }\n\n  getMock(): IGORGroup {\n    let group = {\n      business_owner: 'some_one@wrdsb.ca',\n\n      membership_automation_active: true,\n      automate_mangers: true,\n      automate_members: true,\n      automate_owners: true,\n\n      managers_people_sets: [],\n      members_people_sets: [],\n      owners_people_sets: [],\n\n      configuration_automation_active: true,\n      configuration_templates: '',\n\n      google_id: '017dp8vu2oqr4lq',\n      etag: '\"nM32qckM4XsKqhG-zylXvkNQRY8/UiI5pz7y-TQVoLQLz8rK-yrKCoc\"',\n      email: 'eds-students@wrdsb.ca',\n      name: 'EDSS Students',\n      description: 'A private notifications group for all EDSS students.',\n      adminCreated: true,\n      nonEditableAliases: [ 'eds-students@wrdsb.on.ca' ],\n      whoCanJoin: 'INVITED_CAN_JOIN',\n      whoCanViewMembership: 'ALL_MANAGERS_CAN_VIEW',\n      whoCanViewGroup: 'ALL_MEMBERS_CAN_VIEW',\n      whoCanInvite: 'ALL_OWNERS_CAN_INVITE',\n      whoCanAdd: 'ALL_OWNERS_CAN_ADD',\n      allowExternalMembers: 'false',\n      whoCanPostMessage: 'ALL_MANAGERS_CAN_POST',\n      allowWebPosting: 'false',\n      primaryLanguage: 'en',\n      maxMessageBytes: 26214400,\n      isArchived: 'true',\n      archiveOnly: 'false',\n      messageModerationLevel: 'MODERATE_NONE',\n      spamModerationLevel: 'ALLOW',\n      replyTo: 'REPLY_TO_LIST',\n      customReplyTo: 'eds-students@wrdsb.ca',\n      includeCustomFooter: 'false',\n      customFooterText: '\\'',\n      sendMessageDenyNotification: 'true',\n      defaultMessageDenyNotificationText: 'You do not have permission to post to eds-students@wrdsb.ca.',\n      showInGroupDirectory: 'false',\n      allowGoogleCommunication: 'false',\n      membersCanPostAsTheGroup: 'true',\n      messageDisplayFont: 'DEFAULT_FONT',\n      includeInGlobalAddressList: 'true',\n      whoCanLeaveGroup: 'NONE_CAN_LEAVE',\n      whoCanContactOwner: 'ANYONE_CAN_CONTACT',\n      whoCanAddReferences: 'NONE',\n      whoCanAssignTopics: 'OWNERS_AND_MANAGERS',\n      whoCanUnassignTopic: 'OWNERS_AND_MANAGERS',\n      whoCanTakeTopics: 'OWNERS_AND_MANAGERS',\n      whoCanMarkDuplicate: 'OWNERS_AND_MANAGERS',\n      whoCanMarkNoResponseNeeded: 'OWNERS_AND_MANAGERS',\n      whoCanMarkFavoriteReplyOnAnyTopic: 'OWNERS_AND_MANAGERS',\n      whoCanMarkFavoriteReplyOnOwnTopic: 'NONE',\n      whoCanUnmarkFavoriteReplyOnAnyTopic: 'OWNERS_AND_MANAGERS',\n      whoCanEnterFreeFormTags: 'OWNERS_AND_MANAGERS',\n      whoCanModifyTagsAndCategories: 'OWNERS_AND_MANAGERS',\n      favoriteRepliesOnTop: 'true',\n      whoCanApproveMembers: 'ALL_OWNERS_CAN_APPROVE',\n      whoCanBanUsers: 'OWNERS_ONLY',\n      whoCanModifyMembers: 'OWNERS_ONLY',\n      whoCanApproveMessages: 'OWNERS_AND_MANAGERS',\n      whoCanDeleteAnyPost: 'OWNERS_AND_MANAGERS',\n      whoCanDeleteTopics: 'OWNERS_AND_MANAGERS',\n      whoCanLockTopics: 'OWNERS_AND_MANAGERS',\n      whoCanMoveTopicsIn: 'OWNERS_AND_MANAGERS',\n      whoCanMoveTopicsOut: 'OWNERS_AND_MANAGERS',\n      whoCanPostAnnouncements: 'OWNERS_AND_MANAGERS',\n      whoCanHideAbuse: 'OWNERS_AND_MANAGERS',\n      whoCanMakeTopicsSticky: 'OWNERS_AND_MANAGERS',\n      whoCanModerateMembers: 'OWNERS_ONLY',\n      whoCanModerateContent: 'OWNERS_AND_MANAGERS',\n      whoCanAssistContent: 'OWNERS_AND_MANAGERS',\n      customRolesEnabledForSettingsToBeMerged: 'false',\n      enableCollaborativeInbox: 'false',\n      whoCanDiscoverGroup: 'ALL_MEMBERS_CAN_DISCOVER'\n    } as IGORGroup;\n\n    return group;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { IGORGroup } from \"@cosmos/types\";\nimport { GoogleGroupsService } from '../google-groups.service';\n\n@Component({\n  selector: 'cosmos-google-group-detail',\n  templateUrl: './group-detail.component.html',\n  styleUrls: ['./group-detail.component.scss']\n})\nexport class GroupDetailComponent implements OnInit {\n  group: IGORGroup;\n\n  constructor(private groupsService: GoogleGroupsService) { }\n\n  ngOnInit() {\n    this.group = this.groupsService.getMock();\n  }\n\n}\n","<h1>{{group.name}}</h1>\n\n        <div><strong>google_id:</strong> {{group.google_id}}</div>\n        <div><strong>email:</strong> {{group.email}}</div>\n        <div><strong>name:</strong> {{group.name}}</div>\n        <div><strong>description:</strong> {{group.description}}</div>\n\n        <div><strong>business_owner:</strong> {{group.business_owner}}</div>\n\n        <div><strong>membership_automation_active:</strong> {{group.membership_automation_active}}</div>\n        \n        <div><strong>automate_mangers:</strong> {{group.automate_managers}}</div>\n        <div><strong>automate_members:</strong> {{group.automate_members}}</div>\n        <div><strong>automate_owners:</strong> {{group.automate_owners}}</div>\n        \n        <div><strong>managers_people_sets:</strong> {{group.managers_people_sets}}</div>\n        <div><strong>members_people_sets:</strong> {{group.members_people_sets}}</div>\n        <div><strong>owners_people_sets:</strong> {{group.owners_people_sets}}</div>\n        \n        <div><strong>configuration_automation_active:</strong> {{group.configuration_automation_active}}</div>\n        <div><strong>configuration_templates:</strong> {{group.configuration_templates}}</div>\n\n        <div><strong>adminCreated:</strong> {{group.adminCreated}}</div>\n        <div><strong>nonEditableAliases:</strong> {{group.nonEditableAliases}}</div>\n\n        <div><strong>whoCanViewGroup:</strong> {{group.whoCanViewGroup}}</div>\n\n        <div><strong>whoCanPostMessage:</strong> {{group.whoCanPostMessage}}</div>\n        <div><strong>allowWebPosting:</strong> {{group.allowWebPosting}}</div>\n        <div><strong>membersCanPostAsTheGroup:</strong> {{group.membersCanPostAsTheGroup}}</div>\n        <div><strong>whoCanApproveMessages:</strong> {{group.whoCanApproveMessages}}</div>\n        <div><strong>whoCanDeleteAnyPost:</strong> {{group.whoCanDeleteAnyPost}}</div>\n        <div><strong>whoCanPostAnnouncements:</strong> {{group.whoCanPostAnnouncements}}</div>\n\n        <div><strong>primaryLanguage:</strong> {{group.primaryLanguage}}</div>\n        <div><strong>maxMessageBytes:</strong> {{group.maxMessageBytes}}</div>\n        <div><strong>allowGoogleCommunication:</strong> {{group.allowGoogleCommunication}}</div>\n\n        <div><strong>isArchived:</strong> {{group.isArchived}}</div>\n        <div><strong>archiveOnly:</strong> {{group.archiveOnly}}</div>\n\n        <div><strong>messageModerationLevel:</strong> {{group.messageModerationLevel}}</div>\n        <div><strong>spamModerationLevel:</strong> {{group.spamModerationLevel}}</div>\n\n        <div><strong>replyTo:</strong> {{group.replyTo}}</div>\n        <div><strong>customReplyTo:</strong> {{group.customReplyTo}}</div>\n\n        <div><strong>includeCustomFooter:</strong> {{group.includeCustomFooter}}</div>\n        <div><strong>customFooterText:</strong> {{group.customFooterText}}</div>\n\n        <div><strong>sendMessageDenyNotification:</strong> {{group.sendMessageDenyNotification}}</div>\n        <div><strong>defaultMessageDenyNotificationText:</strong> {{group.defaultMessageDenyNotificationText}}</div>\n\n        <div><strong>messageDisplayFont:</strong> {{group.messageDisplayFont}}</div>\n        <div><strong>whoCanContactOwner:</strong> {{group.whoCanContactOwner}}</div>\n\n        <div><strong>enableCollaborativeInbox:</strong> {{group.enableCollaborativeInbox}}</div>\n        <div><strong>whoCanAddReferences:</strong> {{group.whoCanAddReferences}}</div>\n        <div><strong>whoCanMarkDuplicate:</strong> {{group.whoCanMarkDuplicate}}</div>\n        <div><strong>whoCanMarkNoResponseNeeded:</strong> {{group.whoCanMarkNoResponseNeeded}}</div>\n        <div><strong>whoCanMarkFavoriteReplyOnAnyTopic:</strong> {{group.whoCanMarkFavoriteReplyOnAnyTopic}}</div>\n        <div><strong>whoCanMarkFavoriteReplyOnOwnTopic:</strong> {{group.whoCanMarkFavoriteReplyOnOwnTopic}}</div>\n        <div><strong>whoCanUnmarkFavoriteReplyOnAnyTopic:</strong> {{group.whoCanUnmarkFavoriteReplyOnAnyTopic}}</div>\n        <div><strong>whoCanEnterFreeFormTags:</strong> {{group.whoCanEnterFreeFormTags}}</div>\n        <div><strong>whoCanModifyTagsAndCategories:</strong> {{group.whoCanModifyTagsAndCategories}}</div>\n        <div><strong>favoriteRepliesOnTop:</strong> {{group.favoriteRepliesOnTop}}</div>\n\n        <div><strong>whoCanAssignTopics:</strong> {{group.whoCanAssignTopics}}</div>\n        <div><strong>whoCanUnassignTopic:</strong> {{group.whoCanUnassignTopic}}</div>\n        <div><strong>whoCanTakeTopics:</strong> {{group.whoCanTakeTopics}}</div>\n        <div><strong>whoCanDeleteTopics:</strong> {{group.whoCanDeleteTopics}}</div>\n        <div><strong>whoCanLockTopics:</strong> {{group.whoCanLockTopics}}</div>\n        <div><strong>whoCanMoveTopicsIn:</strong> {{group.whoCanMoveTopicsIn}}</div>\n        <div><strong>whoCanMoveTopicsOut:</strong> {{group.whoCanMoveTopicsOut}}</div>\n        <div><strong>whoCanMakeTopicsSticky:</strong> {{group.whoCanMakeTopicsSticky}}</div>\n\n        <div><strong>whoCanHideAbuse:</strong> {{group.whoCanHideAbuse}}</div>\n        <div><strong>whoCanModerateContent:</strong> {{group.whoCanModerateContent}}</div>\n        <div><strong>whoCanAssistContent:</strong> {{group.whoCanAssistContent}}</div>\n\n        <div><strong>showInGroupDirectory:</strong> {{group.showInGroupDirectory}}</div>\n        <div><strong>whoCanDiscoverGroup:</strong> {{group.whoCanDiscoverGroup}}</div>\n        <div><strong>includeInGlobalAddressList:</strong> {{group.includeInGlobalAddressList}}</div>\n\n        <div><strong>Who Can Join:</strong> {{group.whoCanJoin}}</div>\n        <div><strong>Who Can View Membership:</strong> {{group.whoCanViewMembership}}</div>\n        <div><strong>Who Can Invite:</strong> {{group.whoCanInvite}}</div>\n        <div><strong>Who Can Add:</strong> {{group.whoCanAdd}}</div>\n        <div><strong>Allow External Members:</strong> {{group.allowExternalMembers}}</div>\n        <div><strong>Who Can Moderate Members:</strong> {{group.whoCanModerateMembers}}</div>\n        <div><strong>Who Can Approve Members:</strong> {{group.whoCanApproveMembers}}</div>\n        <div><strong>Who Can Ban Users:</strong> {{group.whoCanBanUsers}}</div>\n        <div><strong>Who Can Modify Members:</strong> {{group.whoCanModifyMembers}}</div>\n        <div><strong>Who Can Leave Group:</strong> {{group.whoCanLeaveGroup}}</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-google-groups-home',\n  templateUrl: './groups-home.component.html',\n  styleUrls: ['./groups-home.component.scss']\n})\nexport class GroupsHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>groups-home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\nimport { IGORGroup } from \"@cosmos/types\";\nimport { GoogleGroupsService } from '../google-groups.service';\n\n@Component({\n  selector: 'cosmos-google-groups-list',\n  templateUrl: './groups-list.component.html',\n  styleUrls: ['./groups-list.component.scss']\n})\nexport class GroupsListComponent implements OnInit {\n  displayedColumns: string[] = [\n    'name',\n    'email',\n    'description',\n    'adminCreated',\n    'membership_automation_active',\n    //'owners',\n    //'managers'\n  ];\n\n  groups: IGORGroup[];\n  selectedGroup: IGORGroup;\n\n  constructor(private groupsService: GoogleGroupsService) { }\n\n  ngOnInit() {\n    this.getGroups();\n  }\n\n  onSelect(group: IGORGroup): void {\n    this.selectedGroup = group;\n  }\n\n  getGroups(): void {\n    this.groupsService.listGroups('admin_created')\n      .subscribe(groups => this.groups = groups);\n  }\n}\n","<div class=\"widget\">\n  <div class=\"widget-sidebar\"></div>\n\n  <div class=\"widget-content\">\n\n    <div class=\"widget-title\">Google Groups</div>\n\n    <div class=\"widget-main\">\n\n      <table mat-table [dataSource]=\"groups\" class=\"mat-elevation-z8\">\n        <!-- email Column -->\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef> Email </th>\n          <td mat-cell *matCellDef=\"let group\"> {{group.email}} </td>\n        </ng-container>\n\n        <!-- displayName Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let group\"> {{group.name}} </td>\n        </ng-container>\n\n        <!-- description Column -->\n        <ng-container matColumnDef=\"description\">\n          <th mat-header-cell *matHeaderCellDef> Description </th>\n          <td mat-cell *matCellDef=\"let group\"> {{group.description}} </td>\n        </ng-container>\n\n        <!-- adminCreated Column -->\n        <ng-container matColumnDef=\"adminCreated\">\n          <th mat-header-cell *matHeaderCellDef> Admin Created? </th>\n          <td mat-cell *matCellDef=\"let group\"> {{group.adminCreated}} </td>\n        </ng-container>\n\n        <!-- membership_automation_active Column -->\n        <ng-container matColumnDef=\"membership_automation_active\">\n          <th mat-header-cell *matHeaderCellDef> Automated? </th>\n          <td mat-cell *matCellDef=\"let group\"> {{group.membership_automation_active}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onSelect(group)\"></tr>\n      </table>\n\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"selectedGroup\">\n  <h2>{{selectedGroup.name}} Details</h2>\n  <div><span>id: </span>{{selectedGroup.id}}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-groups-search',\n  templateUrl: './groups-search.component.html',\n  styleUrls: ['./groups-search.component.scss']\n})\nexport class GroupsSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>groups-search works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-google-group-membership-detail',\n  templateUrl: './membership-detail.component.html',\n  styleUrls: ['./membership-detail.component.scss']\n})\nexport class MembershipDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>membership-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cosmos-google-group-memberships-list',\n  templateUrl: './memberships-list.component.html',\n  styleUrls: ['./memberships-list.component.scss']\n})\nexport class MembershipsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>memberships-list works!</p>\n","export * from './lib/messages.module';\nexport * from './lib/messages.service';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MessagesComponent\n  ],\n  exports: [\n    MessagesComponent\n  ]\n})\nexport class MessagesModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from \"../messages.service\";\n\n@Component({\n  selector: 'cosmos-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messagesService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\" (click)=\"messagesService.clear()\">clear</button>\n  <div *ngFor='let message of messagesService.messages'> {{message}} </div>\n\n</div>\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule,\n        MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map"]}