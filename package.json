{
  "name": "cosmos",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "nx": "nx",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "postinstall": "ngcc --properties es2015 browser module main --first-only --create-ivy-entry-points && node ./decorate-angular-cli.js",
    "bindings:codex": "cd apps/codex-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:flenderson": "cd apps/flenderson-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:hagar": "cd apps/hagar-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:houston": "cd apps/houston-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:igor": "cd apps/igor-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:panama": "cd apps/panama-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:quartermaster": "cd apps/quartermaster-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:skinner": "cd apps/skinner-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:skyline": "cd apps/skyline-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:sorting-hat": "cd apps/sorting-hat-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "bindings:viewfinder": "cd apps/viewfinder-functions/src/ && func extensions install && dotnet build extensions.csproj -o bin --no-incremental",
    "zip:codex": "cd dist/codex-functions && bestzip ../codex-functions.zip *",
    "zip:flenderson": "cd dist/flenderson-functions && bestzip ../flenderson-functions.zip *",
    "zip:hagar": "cd dist/hagar-functions && bestzip ../hagar-functions.zip *",
    "zip:houston": "cd dist/houston-functions && bestzip ../houston-functions.zip *",
    "zip:igor": "cd dist/igor-functions && bestzip ../igor-functions.zip *",
    "zip:panama": "cd dist/panama-functions && bestzip ../panama-functions.zip *",
    "zip:quartermaster": "cd dist/quartermaster-functions && bestzip ../quartermaster-functions.zip *",
    "zip:skinner": "cd dist/skinner-functions && bestzip ../skinner-functions.zip *",
    "zip:skyline": "cd dist/skyline-functions && bestzip ../skyline-functions.zip *",
    "zip:sorting-hat": "cd dist/sorting-hat-functions && bestzip ../sorting-hat-functions.zip *",
    "zip:viewfinder": "cd dist/viewfinder-functions && bestzip ../viewfinder-functions.zip *",
    "deploy:codex": "az functionapp deployment source config-zip -g wrdsb-codex -n wrdsb-codex --src ./dist/codex-functions.zip",
    "deploy:flenderson": "az functionapp deployment source config-zip -g wrdsb-flenderson -n wrdsb-flenderson2 --src ./dist/flenderson-functions.zip",
    "deploy:hagar": "az functionapp deployment source config-zip -g wrdsb-hagar -n wrdsb-hagar --src ./dist/hagar-functions.zip",
    "deploy:houston": "az functionapp deployment source config-zip -g wrdsb-houston -n wrdsb-houston --src ./dist/houston-functions.zip",
    "deploy:igor": "az functionapp deployment source config-zip -g wrdsb-igor -n wrdsb-igor3 --src ./dist/igor-functions.zip",
    "deploy:panama": "az functionapp deployment source config-zip -g wrdsb-panama -n wrdsb-panama --src ./dist/panama-functions.zip",
    "deploy:quartermaster": "az functionapp deployment source config-zip -g wrdsb-quartermaster -n wrdsb-quartermaster --src ./dist/quartermaster-functions.zip",
    "deploy:skinner": "az functionapp deployment source config-zip -g wrdsb-skinner -n wrdsb-skinner2 --src ./dist/skinner-functions.zip",
    "deploy:skyline": "az functionapp deployment source config-zip -g wrdsb-skyline -n wrdsb-skyline --src ./dist/skyline-functions.zip",
    "deploy:sorting-hat": "az functionapp deployment source config-zip -g wrdsb-sorting-hat -n wrdsb-sorting-hat --src ./dist/sorting-hat-functions.zip",
    "deploy:viewfinder": "az functionapp deployment source config-zip -g wrdsb-viewfinder -n wrdsb-viewfinder --src ./dist/viewfinder-functions.zip",
    "deploy:viewfinder-console": "az storage blob upload-batch -s ./dist/apps/viewfinder-console/ -d '$web' --account-name wrdsbviewfinder",
    "monitor:codex": "func azure functionapp logstream wrdsb-codex",
    "monitor:flenderson": "func azure functionapp logstream wrdsb-flenderson2",
    "monitor:hagar": "func azure functionapp logstream wrdsb-hagar",
    "monitor:houston": "func azure functionapp logstream wrdsb-houston",
    "monitor:igor": "func azure functionapp logstream wrdsb-igor3",
    "monitor:panama": "func azure functionapp logstream wrdsb-panama",
    "monitor:quartermaster": "func azure functionapp logstream wrdsb-quartermaster",
    "monitor:skinner": "func azure functionapp logstream wrdsb-skinner2",
    "monitor:skyline": "func azure functionapp logstream wrdsb-skyline",
    "monitor:sorting-hat": "func azure functionapp logstream wrdsb-sorting-hat",
    "monitor:viewfinder": "func azure functionapp logstream wrdsb-viewfinder",
    "workspace-generator": "nx workspace-generator"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "11.1.0",
    "@angular/cdk": "11.1.0",
    "@angular/common": "11.1.0",
    "@angular/compiler": "11.1.0",
    "@angular/core": "11.1.0",
    "@angular/forms": "11.1.0",
    "@angular/localize": "11.1.0",
    "@angular/material": "11.1.0",
    "@angular/platform-browser": "11.1.0",
    "@angular/platform-browser-dynamic": "11.1.0",
    "@angular/router": "11.1.0",
    "@angular/service-worker": "11.1.0",
    "@aspnet/signalr": "^1.1.4",
    "@azure/cosmos": "^3.9.5",
    "@azure/msal-angular": "^2.0.0-alpha.6",
    "@azure/msal-browser": "^2.12.0",
    "@azure/search-documents": "^11.0.3",
    "@azure/storage-blob": "^12.4.0",
    "@azure/storage-file-datalake": "^12.3.0",
    "@azure/storage-queue": "^12.3.0",
    "@fortawesome/angular-fontawesome": "0.8.1",
    "@fortawesome/fontawesome-svg-core": "^1.2.34",
    "@fortawesome/free-brands-svg-icons": "^5.15.2",
    "@fortawesome/free-regular-svg-icons": "^5.15.2",
    "@fortawesome/free-solid-svg-icons": "^5.15.2",
    "@microsoft/mgt": "2.0.1",
    "@microsoft/microsoft-graph-client": "^2.2.1",
    "@microsoft/microsoft-graph-types": "^1.28.0",
    "@ng-bootstrap/ng-bootstrap": "9.0.1",
    "@nrwl/angular": "11.1.5",
    "@sendgrid/mail": "7.4.2",
    "angular-fontawesome": "^1.0.0",
    "angular-in-memory-web-api": "^0.11.0",
    "async": "3.2.0",
    "axios": "0.21.1",
    "azure-storage": "^2.8.1",
    "core-js": "3.8.3",
    "cz-conventional-changelog": "^3.3.0",
    "googleapis": "67.0.0",
    "howler": "^2.2.1",
    "jwt-decode": "3.1.2",
    "lodash": "^4.17.20",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.32",
    "ngx-howler": "11.0.0",
    "rxjs": "6.6.3",
    "rxjs-compat": "^6.6.3",
    "tslib": "^2.0.0",
    "wpapi": "^1.2.1",
    "zone.js": "0.11.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.1101.0",
    "@angular/cli": "11.1.0",
    "@angular/compiler-cli": "11.1.0",
    "@angular/language-service": "11.1.0",
    "@azure/functions": "^1.0.3",
    "@nrwl/cli": "11.1.5",
    "@nrwl/cypress": "11.1.5",
    "@nrwl/eslint-plugin-nx": "11.1.5",
    "@nrwl/jest": "11.1.5",
    "@nrwl/node": "11.1.5",
    "@nrwl/tao": "11.1.5",
    "@nrwl/workspace": "11.1.5",
    "@types/gapi": "0.0.39",
    "@types/jest": "26.0.20",
    "@types/lodash": "^4.14.168",
    "@types/node": "14.14.22",
    "@typescript-eslint/eslint-plugin": "4.14.0",
    "@typescript-eslint/parser": "4.14.0",
    "bestzip": "^2.1.7",
    "codelyzer": "6.0.1",
    "cypress": "6.3.0",
    "dotenv": "8.2.0",
    "eslint": "7.18.0",
    "eslint-config-prettier": "7.2.0",
    "eslint-plugin-cypress": "^2.10.3",
    "jest": "26.6.3",
    "jest-preset-angular": "8.3.2",
    "prettier": "2.2.1",
    "ts-jest": "26.4.4",
    "ts-node": "9.1.1",
    "tsconfig-paths-webpack-plugin": "^3.3.0",
    "typescript": "4.1.3"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
