{
  "version": 1,
  "projects": {
    "panama-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/panama-console",
      "sourceRoot": "apps/panama-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/panama-console",
            "index": "apps/panama-console/src/index.html",
            "main": "apps/panama-console/src/main.ts",
            "polyfills": "apps/panama-console/src/polyfills.ts",
            "tsConfig": "apps/panama-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/panama-console/src/favicon.ico",
              "apps/panama-console/src/assets"
            ],
            "styles": ["apps/panama-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/panama-console/src/environments/environment.ts",
                  "with": "apps/panama-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "panama-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "panama-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "panama-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-console/tsconfig.app.json",
              "apps/panama-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/panama-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/panama-console/jest.config.js",
            "tsConfig": "apps/panama-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/panama-console/src/test-setup.ts"
          }
        }
      }
    },
    "panama-console-e2e": {
      "root": "apps/panama-console-e2e",
      "sourceRoot": "apps/panama-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/panama-console-e2e/cypress.json",
            "tsConfig": "apps/panama-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "panama-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "panama-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/panama-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/panama-console-e2e/**"]
          }
        }
      }
    },
    "igor-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/igor-console",
      "sourceRoot": "apps/igor-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/igor-console",
            "index": "apps/igor-console/src/index.html",
            "main": "apps/igor-console/src/main.ts",
            "polyfills": "apps/igor-console/src/polyfills.ts",
            "tsConfig": "apps/igor-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/igor-console/src/favicon.ico",
              "apps/igor-console/src/assets"
            ],
            "styles": ["apps/igor-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/igor-console/src/environments/environment.ts",
                  "with": "apps/igor-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "igor-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "igor-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "igor-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-console/tsconfig.app.json",
              "apps/igor-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/igor-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-console/jest.config.js",
            "tsConfig": "apps/igor-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/igor-console/src/test-setup.ts"
          }
        }
      }
    },
    "igor-console-e2e": {
      "root": "apps/igor-console-e2e",
      "sourceRoot": "apps/igor-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/igor-console-e2e/cypress.json",
            "tsConfig": "apps/igor-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "igor-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "igor-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/igor-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/igor-console-e2e/**"]
          }
        }
      }
    },
    "hagar-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hagar-console",
      "sourceRoot": "apps/hagar-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hagar-console",
            "index": "apps/hagar-console/src/index.html",
            "main": "apps/hagar-console/src/main.ts",
            "polyfills": "apps/hagar-console/src/polyfills.ts",
            "tsConfig": "apps/hagar-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hagar-console/src/favicon.ico",
              "apps/hagar-console/src/assets"
            ],
            "styles": ["apps/hagar-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hagar-console/src/environments/environment.ts",
                  "with": "apps/hagar-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hagar-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "hagar-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hagar-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-console/tsconfig.app.json",
              "apps/hagar-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hagar-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hagar-console/jest.config.js",
            "tsConfig": "apps/hagar-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/hagar-console/src/test-setup.ts"
          }
        }
      }
    },
    "hagar-console-e2e": {
      "root": "apps/hagar-console-e2e",
      "sourceRoot": "apps/hagar-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/hagar-console-e2e/cypress.json",
            "tsConfig": "apps/hagar-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "hagar-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "hagar-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/hagar-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/hagar-console-e2e/**"]
          }
        }
      }
    },
    "sorting-hat-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/sorting-hat-console",
      "sourceRoot": "apps/sorting-hat-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/sorting-hat-console",
            "index": "apps/sorting-hat-console/src/index.html",
            "main": "apps/sorting-hat-console/src/main.ts",
            "polyfills": "apps/sorting-hat-console/src/polyfills.ts",
            "tsConfig": "apps/sorting-hat-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/sorting-hat-console/src/favicon.ico",
              "apps/sorting-hat-console/src/assets"
            ],
            "styles": ["apps/sorting-hat-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-console/src/environments/environment.ts",
                  "with": "apps/sorting-hat-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "sorting-hat-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "sorting-hat-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "sorting-hat-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-console/tsconfig.app.json",
              "apps/sorting-hat-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/sorting-hat-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-console/jest.config.js",
            "tsConfig": "apps/sorting-hat-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/sorting-hat-console/src/test-setup.ts"
          }
        }
      }
    },
    "sorting-hat-console-e2e": {
      "root": "apps/sorting-hat-console-e2e",
      "sourceRoot": "apps/sorting-hat-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/sorting-hat-console-e2e/cypress.json",
            "tsConfig": "apps/sorting-hat-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "sorting-hat-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "sorting-hat-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/sorting-hat-console-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-console-e2e/**"
            ]
          }
        }
      }
    },
    "viewfinder-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/viewfinder-console",
      "sourceRoot": "apps/viewfinder-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/viewfinder-console",
            "index": "apps/viewfinder-console/src/index.html",
            "main": "apps/viewfinder-console/src/main.ts",
            "polyfills": "apps/viewfinder-console/src/polyfills.ts",
            "tsConfig": "apps/viewfinder-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/viewfinder-console/src/favicon.ico",
              "apps/viewfinder-console/src/assets"
            ],
            "styles": ["apps/viewfinder-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/viewfinder-console/src/environments/environment.ts",
                  "with": "apps/viewfinder-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "viewfinder-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "viewfinder-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "viewfinder-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/viewfinder-console/tsconfig.app.json",
              "apps/viewfinder-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/viewfinder-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/viewfinder-console/jest.config.js",
            "tsConfig": "apps/viewfinder-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/viewfinder-console/src/test-setup.ts"
          }
        }
      }
    },
    "viewfinder-console-e2e": {
      "root": "apps/viewfinder-console-e2e",
      "sourceRoot": "apps/viewfinder-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/viewfinder-console-e2e/cypress.json",
            "tsConfig": "apps/viewfinder-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "viewfinder-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "viewfinder-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/viewfinder-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/viewfinder-console-e2e/**"]
          }
        }
      }
    },
    "houston-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/houston-console",
      "sourceRoot": "apps/houston-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/houston-console",
            "index": "apps/houston-console/src/index.html",
            "main": "apps/houston-console/src/main.ts",
            "polyfills": "apps/houston-console/src/polyfills.ts",
            "tsConfig": "apps/houston-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/houston-console/src/favicon.ico",
              "apps/houston-console/src/assets"
            ],
            "styles": ["apps/houston-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/houston-console/src/environments/environment.ts",
                  "with": "apps/houston-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "houston-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "houston-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "houston-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-console/tsconfig.app.json",
              "apps/houston-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/houston-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/houston-console/jest.config.js",
            "tsConfig": "apps/houston-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/houston-console/src/test-setup.ts"
          }
        }
      }
    },
    "houston-console-e2e": {
      "root": "apps/houston-console-e2e",
      "sourceRoot": "apps/houston-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/houston-console-e2e/cypress.json",
            "tsConfig": "apps/houston-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "houston-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "houston-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/houston-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/houston-console-e2e/**"]
          }
        }
      }
    },
    "codex-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/codex-console",
      "sourceRoot": "apps/codex-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/codex-console",
            "index": "apps/codex-console/src/index.html",
            "main": "apps/codex-console/src/main.ts",
            "polyfills": "apps/codex-console/src/polyfills.ts",
            "tsConfig": "apps/codex-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/codex-console/src/favicon.ico",
              "apps/codex-console/src/assets"
            ],
            "styles": ["apps/codex-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/codex-console/src/environments/environment.ts",
                  "with": "apps/codex-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "codex-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "codex-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "codex-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-console/tsconfig.app.json",
              "apps/codex-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/codex-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/codex-console/jest.config.js",
            "tsConfig": "apps/codex-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/codex-console/src/test-setup.ts"
          }
        }
      }
    },
    "codex-console-e2e": {
      "root": "apps/codex-console-e2e",
      "sourceRoot": "apps/codex-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/codex-console-e2e/cypress.json",
            "tsConfig": "apps/codex-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "codex-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "codex-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/codex-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/codex-console-e2e/**"]
          }
        }
      }
    },
    "igor-types": {
      "root": "libs/igor-types",
      "sourceRoot": "libs/igor-types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/igor-types/tsconfig.lib.json",
              "libs/igor-types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/igor-types/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/igor-types/jest.config.js",
            "tsConfig": "libs/igor-types/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "hagar-types": {
      "root": "libs/hagar-types",
      "sourceRoot": "libs/hagar-types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/hagar-types/tsconfig.lib.json",
              "libs/hagar-types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/hagar-types/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/hagar-types/jest.config.js",
            "tsConfig": "libs/hagar-types/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "azure-functions-shared": {
      "root": "libs/azure-functions-shared",
      "sourceRoot": "libs/azure-functions-shared/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/azure-functions-shared/tsconfig.lib.json",
              "libs/azure-functions-shared/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/azure-functions-shared/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/azure-functions-shared/jest.config.js",
            "tsConfig": "libs/azure-functions-shared/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "sorting-hat": {
      "projectType": "library",
      "root": "libs/sorting-hat",
      "sourceRoot": "libs/sorting-hat/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/sorting-hat/tsconfig.lib.json",
              "libs/sorting-hat/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/sorting-hat/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/sorting-hat/jest.config.js",
            "tsConfig": "libs/sorting-hat/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/sorting-hat/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "sorting-hat-types": {
      "projectType": "library",
      "root": "libs/sorting-hat-types",
      "sourceRoot": "libs/sorting-hat-types/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/sorting-hat-types/tsconfig.lib.json",
              "libs/sorting-hat-types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/sorting-hat-types/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/sorting-hat-types/jest.config.js",
            "tsConfig": "libs/sorting-hat-types/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/sorting-hat-types/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "sorting-hat-functions": {
      "root": "apps/sorting-hat-functions",
      "sourceRoot": "apps/sorting-hat-functions/src",
      "projectType": "application",
      "prefix": "sorting-hat-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/sorting-hat-functions",
            "main": "apps/sorting-hat-functions/src/main.ts",
            "tsConfig": "apps/sorting-hat-functions/tsconfig.app.json",
            "assets": ["apps/sorting-hat-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-functions/src/environments/environment.ts",
                  "with": "apps/sorting-hat-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "sorting-hat-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-functions/tsconfig.app.json",
              "apps/sorting-hat-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/sorting-hat-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-functions/jest.config.js",
            "tsConfig": "apps/sorting-hat-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "igor-functions": {
      "root": "apps/igor-functions",
      "sourceRoot": "apps/igor-functions/src",
      "projectType": "application",
      "prefix": "igor-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/igor-functions",
            "main": "apps/igor-functions/src/main.ts",
            "tsConfig": "apps/igor-functions/tsconfig.app.json",
            "assets": ["apps/igor-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/igor-functions/src/environments/environment.ts",
                  "with": "apps/igor-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "igor-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-functions/tsconfig.app.json",
              "apps/igor-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/igor-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-functions/jest.config.js",
            "tsConfig": "apps/igor-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "hagar-functions": {
      "root": "apps/hagar-functions",
      "sourceRoot": "apps/hagar-functions/src",
      "projectType": "application",
      "prefix": "hagar-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/hagar-functions",
            "main": "apps/hagar-functions/src/main.ts",
            "tsConfig": "apps/hagar-functions/tsconfig.app.json",
            "assets": ["apps/hagar-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hagar-functions/src/environments/environment.ts",
                  "with": "apps/hagar-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hagar-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-functions/tsconfig.app.json",
              "apps/hagar-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hagar-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hagar-functions/jest.config.js",
            "tsConfig": "apps/hagar-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "skyline-functions": {
      "root": "apps/skyline-functions",
      "sourceRoot": "apps/skyline-functions/src",
      "projectType": "application",
      "prefix": "skyline-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/skyline-functions",
            "main": "apps/skyline-functions/src/main.ts",
            "tsConfig": "apps/skyline-functions/tsconfig.app.json",
            "assets": ["apps/skyline-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/skyline-functions/src/environments/environment.ts",
                  "with": "apps/skyline-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skyline-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skyline-functions/tsconfig.app.json",
              "apps/skyline-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skyline-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skyline-functions/jest.config.js",
            "tsConfig": "apps/skyline-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "skinner-functions": {
      "root": "apps/skinner-functions",
      "sourceRoot": "apps/skinner-functions/src",
      "projectType": "application",
      "prefix": "skinner-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/skinner-functions",
            "main": "apps/skinner-functions/src/main.ts",
            "tsConfig": "apps/skinner-functions/tsconfig.app.json",
            "assets": ["apps/skinner-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/skinner-functions/src/environments/environment.ts",
                  "with": "apps/skinner-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skinner-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skinner-functions/tsconfig.app.json",
              "apps/skinner-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skinner-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skinner-functions/jest.config.js",
            "tsConfig": "apps/skinner-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "flenderson-functions": {
      "root": "apps/flenderson-functions",
      "sourceRoot": "apps/flenderson-functions/src",
      "projectType": "application",
      "prefix": "flenderson-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/flenderson-functions",
            "main": "apps/flenderson-functions/src/main.ts",
            "tsConfig": "apps/flenderson-functions/tsconfig.app.json",
            "assets": ["apps/flenderson-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/flenderson-functions/src/environments/environment.ts",
                  "with": "apps/flenderson-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "flenderson-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/flenderson-functions/tsconfig.app.json",
              "apps/flenderson-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/flenderson-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/flenderson-functions/jest.config.js",
            "tsConfig": "apps/flenderson-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "panama-functions": {
      "root": "apps/panama-functions",
      "sourceRoot": "apps/panama-functions/src",
      "projectType": "application",
      "prefix": "panama-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/panama-functions",
            "main": "apps/panama-functions/src/main.ts",
            "tsConfig": "apps/panama-functions/tsconfig.app.json",
            "assets": ["apps/panama-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/panama-functions/src/environments/environment.ts",
                  "with": "apps/panama-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "panama-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-functions/tsconfig.app.json",
              "apps/panama-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/panama-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/panama-functions/jest.config.js",
            "tsConfig": "apps/panama-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "radar-functions": {
      "root": "apps/radar-functions",
      "sourceRoot": "apps/radar-functions/src",
      "projectType": "application",
      "prefix": "radar-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/radar-functions",
            "main": "apps/radar-functions/src/main.ts",
            "tsConfig": "apps/radar-functions/tsconfig.app.json",
            "assets": ["apps/radar-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/radar-functions/src/environments/environment.ts",
                  "with": "apps/radar-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "radar-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/radar-functions/tsconfig.app.json",
              "apps/radar-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/radar-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/radar-functions/jest.config.js",
            "tsConfig": "apps/radar-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "lamson-functions": {
      "root": "apps/lamson-functions",
      "sourceRoot": "apps/lamson-functions/src",
      "projectType": "application",
      "prefix": "lamson-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/lamson-functions",
            "main": "apps/lamson-functions/src/main.ts",
            "tsConfig": "apps/lamson-functions/tsconfig.app.json",
            "assets": ["apps/lamson-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/lamson-functions/src/environments/environment.ts",
                  "with": "apps/lamson-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "lamson-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/lamson-functions/tsconfig.app.json",
              "apps/lamson-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/lamson-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/lamson-functions/jest.config.js",
            "tsConfig": "apps/lamson-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "houston-functions": {
      "root": "apps/houston-functions",
      "sourceRoot": "apps/houston-functions/src",
      "projectType": "application",
      "prefix": "houston-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/houston-functions",
            "main": "apps/houston-functions/src/main.ts",
            "tsConfig": "apps/houston-functions/tsconfig.app.json",
            "assets": ["apps/houston-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/houston-functions/src/environments/environment.ts",
                  "with": "apps/houston-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "houston-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-functions/tsconfig.app.json",
              "apps/houston-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/houston-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/houston-functions/jest.config.js",
            "tsConfig": "apps/houston-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "codex-functions": {
      "root": "apps/codex-functions",
      "sourceRoot": "apps/codex-functions/src",
      "projectType": "application",
      "prefix": "codex-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/codex-functions",
            "main": "apps/codex-functions/src/main.ts",
            "tsConfig": "apps/codex-functions/tsconfig.app.json",
            "assets": ["apps/codex-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/codex-functions/src/environments/environment.ts",
                  "with": "apps/codex-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "codex-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-functions/tsconfig.app.json",
              "apps/codex-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/codex-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/codex-functions/jest.config.js",
            "tsConfig": "apps/codex-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "flenderson-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/flenderson-console",
      "sourceRoot": "apps/flenderson-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/flenderson-console",
            "index": "apps/flenderson-console/src/index.html",
            "main": "apps/flenderson-console/src/main.ts",
            "polyfills": "apps/flenderson-console/src/polyfills.ts",
            "tsConfig": "apps/flenderson-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/flenderson-console/src/favicon.ico",
              "apps/flenderson-console/src/assets"
            ],
            "styles": ["apps/flenderson-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/flenderson-console/src/environments/environment.ts",
                  "with": "apps/flenderson-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "flenderson-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "flenderson-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "flenderson-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/flenderson-console/tsconfig.app.json",
              "apps/flenderson-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/flenderson-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/flenderson-console/jest.config.js",
            "tsConfig": "apps/flenderson-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/flenderson-console/src/test-setup.ts"
          }
        }
      }
    },
    "flenderson-console-e2e": {
      "root": "apps/flenderson-console-e2e",
      "sourceRoot": "apps/flenderson-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/flenderson-console-e2e/cypress.json",
            "tsConfig": "apps/flenderson-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "flenderson-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "flenderson-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/flenderson-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/flenderson-console-e2e/**"]
          }
        }
      }
    },
    "lamson-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/lamson-console",
      "sourceRoot": "apps/lamson-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/lamson-console",
            "index": "apps/lamson-console/src/index.html",
            "main": "apps/lamson-console/src/main.ts",
            "polyfills": "apps/lamson-console/src/polyfills.ts",
            "tsConfig": "apps/lamson-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/lamson-console/src/favicon.ico",
              "apps/lamson-console/src/assets"
            ],
            "styles": ["apps/lamson-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/lamson-console/src/environments/environment.ts",
                  "with": "apps/lamson-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "lamson-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "lamson-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "lamson-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/lamson-console/tsconfig.app.json",
              "apps/lamson-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/lamson-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/lamson-console/jest.config.js",
            "tsConfig": "apps/lamson-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/lamson-console/src/test-setup.ts"
          }
        }
      }
    },
    "lamson-console-e2e": {
      "root": "apps/lamson-console-e2e",
      "sourceRoot": "apps/lamson-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/lamson-console-e2e/cypress.json",
            "tsConfig": "apps/lamson-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "lamson-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "lamson-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/lamson-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/lamson-console-e2e/**"]
          }
        }
      }
    },
    "radar-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/radar-console",
      "sourceRoot": "apps/radar-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/radar-console",
            "index": "apps/radar-console/src/index.html",
            "main": "apps/radar-console/src/main.ts",
            "polyfills": "apps/radar-console/src/polyfills.ts",
            "tsConfig": "apps/radar-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/radar-console/src/favicon.ico",
              "apps/radar-console/src/assets"
            ],
            "styles": ["apps/radar-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/radar-console/src/environments/environment.ts",
                  "with": "apps/radar-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "radar-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "radar-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "radar-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/radar-console/tsconfig.app.json",
              "apps/radar-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/radar-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/radar-console/jest.config.js",
            "tsConfig": "apps/radar-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/radar-console/src/test-setup.ts"
          }
        }
      }
    },
    "radar-console-e2e": {
      "root": "apps/radar-console-e2e",
      "sourceRoot": "apps/radar-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/radar-console-e2e/cypress.json",
            "tsConfig": "apps/radar-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "radar-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "radar-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/radar-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/radar-console-e2e/**"]
          }
        }
      }
    },
    "skinner-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/skinner-console",
      "sourceRoot": "apps/skinner-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/skinner-console",
            "index": "apps/skinner-console/src/index.html",
            "main": "apps/skinner-console/src/main.ts",
            "polyfills": "apps/skinner-console/src/polyfills.ts",
            "tsConfig": "apps/skinner-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/skinner-console/src/favicon.ico",
              "apps/skinner-console/src/assets"
            ],
            "styles": ["apps/skinner-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/skinner-console/src/environments/environment.ts",
                  "with": "apps/skinner-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "skinner-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "skinner-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "skinner-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skinner-console/tsconfig.app.json",
              "apps/skinner-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skinner-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skinner-console/jest.config.js",
            "tsConfig": "apps/skinner-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/skinner-console/src/test-setup.ts"
          }
        }
      }
    },
    "skinner-console-e2e": {
      "root": "apps/skinner-console-e2e",
      "sourceRoot": "apps/skinner-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/skinner-console-e2e/cypress.json",
            "tsConfig": "apps/skinner-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "skinner-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "skinner-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/skinner-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/skinner-console-e2e/**"]
          }
        }
      }
    },
    "skyline-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/skyline-console",
      "sourceRoot": "apps/skyline-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/skyline-console",
            "index": "apps/skyline-console/src/index.html",
            "main": "apps/skyline-console/src/main.ts",
            "polyfills": "apps/skyline-console/src/polyfills.ts",
            "tsConfig": "apps/skyline-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/skyline-console/src/favicon.ico",
              "apps/skyline-console/src/assets"
            ],
            "styles": ["apps/skyline-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/skyline-console/src/environments/environment.ts",
                  "with": "apps/skyline-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "skyline-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "skyline-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "skyline-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skyline-console/tsconfig.app.json",
              "apps/skyline-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skyline-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skyline-console/jest.config.js",
            "tsConfig": "apps/skyline-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/skyline-console/src/test-setup.ts"
          }
        }
      }
    },
    "skyline-console-e2e": {
      "root": "apps/skyline-console-e2e",
      "sourceRoot": "apps/skyline-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/skyline-console-e2e/cypress.json",
            "tsConfig": "apps/skyline-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "skyline-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "skyline-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/skyline-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/skyline-console-e2e/**"]
          }
        }
      }
    },
    "viewfinder-functions": {
      "root": "apps/viewfinder-functions",
      "sourceRoot": "apps/viewfinder-functions/src",
      "projectType": "application",
      "prefix": "viewfinder-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/viewfinder-functions",
            "main": "apps/viewfinder-functions/src/main.ts",
            "tsConfig": "apps/viewfinder-functions/tsconfig.app.json",
            "assets": ["apps/viewfinder-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/viewfinder-functions/src/environments/environment.ts",
                  "with": "apps/viewfinder-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "viewfinder-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/viewfinder-functions/tsconfig.app.json",
              "apps/viewfinder-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/viewfinder-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/viewfinder-functions/jest.config.js",
            "tsConfig": "apps/viewfinder-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "claptrap-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/claptrap-console",
      "sourceRoot": "apps/claptrap-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/claptrap-console",
            "index": "apps/claptrap-console/src/index.html",
            "main": "apps/claptrap-console/src/main.ts",
            "polyfills": "apps/claptrap-console/src/polyfills.ts",
            "tsConfig": "apps/claptrap-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/claptrap-console/src/favicon.ico",
              "apps/claptrap-console/src/assets"
            ],
            "styles": ["apps/claptrap-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/claptrap-console/src/environments/environment.ts",
                  "with": "apps/claptrap-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "claptrap-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "claptrap-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "claptrap-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/claptrap-console/tsconfig.app.json",
              "apps/claptrap-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/claptrap-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/claptrap-console/jest.config.js",
            "tsConfig": "apps/claptrap-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/claptrap-console/src/test-setup.ts"
          }
        }
      }
    },
    "claptrap-console-e2e": {
      "root": "apps/claptrap-console-e2e",
      "sourceRoot": "apps/claptrap-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/claptrap-console-e2e/cypress.json",
            "tsConfig": "apps/claptrap-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "claptrap-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "claptrap-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/claptrap-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/claptrap-console-e2e/**"]
          }
        }
      }
    },
    "claptrap-functions": {
      "root": "apps/claptrap-functions",
      "sourceRoot": "apps/claptrap-functions/src",
      "projectType": "application",
      "prefix": "claptrap-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/claptrap-functions",
            "main": "apps/claptrap-functions/src/main.ts",
            "tsConfig": "apps/claptrap-functions/tsconfig.app.json",
            "assets": ["apps/claptrap-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/claptrap-functions/src/environments/environment.ts",
                  "with": "apps/claptrap-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "claptrap-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/claptrap-functions/tsconfig.app.json",
              "apps/claptrap-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/claptrap-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/claptrap-functions/jest.config.js",
            "tsConfig": "apps/claptrap-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "mcp-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/mcp-console",
      "sourceRoot": "apps/mcp-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/mcp-console",
            "index": "apps/mcp-console/src/index.html",
            "main": "apps/mcp-console/src/main.ts",
            "polyfills": "apps/mcp-console/src/polyfills.ts",
            "tsConfig": "apps/mcp-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/mcp-console/src/favicon.ico",
              "apps/mcp-console/src/assets"
            ],
            "styles": ["apps/mcp-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/mcp-console/src/environments/environment.ts",
                  "with": "apps/mcp-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mcp-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "mcp-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "mcp-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mcp-console/tsconfig.app.json",
              "apps/mcp-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mcp-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mcp-console/jest.config.js",
            "tsConfig": "apps/mcp-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/mcp-console/src/test-setup.ts"
          }
        }
      }
    },
    "mcp-console-e2e": {
      "root": "apps/mcp-console-e2e",
      "sourceRoot": "apps/mcp-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mcp-console-e2e/cypress.json",
            "tsConfig": "apps/mcp-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "mcp-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mcp-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/mcp-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/mcp-console-e2e/**"]
          }
        }
      }
    },
    "mcp-functions": {
      "root": "apps/mcp-functions",
      "sourceRoot": "apps/mcp-functions/src",
      "projectType": "application",
      "prefix": "mcp-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/mcp-functions",
            "main": "apps/mcp-functions/src/main.ts",
            "tsConfig": "apps/mcp-functions/tsconfig.app.json",
            "assets": ["apps/mcp-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/mcp-functions/src/environments/environment.ts",
                  "with": "apps/mcp-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "mcp-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mcp-functions/tsconfig.app.json",
              "apps/mcp-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mcp-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mcp-functions/jest.config.js",
            "tsConfig": "apps/mcp-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "relay-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/relay-console",
      "sourceRoot": "apps/relay-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/relay-console",
            "index": "apps/relay-console/src/index.html",
            "main": "apps/relay-console/src/main.ts",
            "polyfills": "apps/relay-console/src/polyfills.ts",
            "tsConfig": "apps/relay-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/relay-console/src/favicon.ico",
              "apps/relay-console/src/assets"
            ],
            "styles": ["apps/relay-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/relay-console/src/environments/environment.ts",
                  "with": "apps/relay-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "relay-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "relay-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "relay-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/relay-console/tsconfig.app.json",
              "apps/relay-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/relay-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/relay-console/jest.config.js",
            "tsConfig": "apps/relay-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/relay-console/src/test-setup.ts"
          }
        }
      }
    },
    "relay-console-e2e": {
      "root": "apps/relay-console-e2e",
      "sourceRoot": "apps/relay-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/relay-console-e2e/cypress.json",
            "tsConfig": "apps/relay-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "relay-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "relay-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/relay-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/relay-console-e2e/**"]
          }
        }
      }
    },
    "relay-functions": {
      "root": "apps/relay-functions",
      "sourceRoot": "apps/relay-functions/src",
      "projectType": "application",
      "prefix": "relay-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/relay-functions",
            "main": "apps/relay-functions/src/main.ts",
            "tsConfig": "apps/relay-functions/tsconfig.app.json",
            "assets": ["apps/relay-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/relay-functions/src/environments/environment.ts",
                  "with": "apps/relay-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "relay-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/relay-functions/tsconfig.app.json",
              "apps/relay-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/relay-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/relay-functions/jest.config.js",
            "tsConfig": "apps/relay-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "babbage-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/babbage-console",
      "sourceRoot": "apps/babbage-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/babbage-console",
            "index": "apps/babbage-console/src/index.html",
            "main": "apps/babbage-console/src/main.ts",
            "polyfills": "apps/babbage-console/src/polyfills.ts",
            "tsConfig": "apps/babbage-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/babbage-console/src/favicon.ico",
              "apps/babbage-console/src/assets"
            ],
            "styles": ["apps/babbage-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/babbage-console/src/environments/environment.ts",
                  "with": "apps/babbage-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "babbage-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "babbage-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "babbage-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/babbage-console/tsconfig.app.json",
              "apps/babbage-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/babbage-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/babbage-console/jest.config.js",
            "tsConfig": "apps/babbage-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/babbage-console/src/test-setup.ts"
          }
        }
      }
    },
    "babbage-console-e2e": {
      "root": "apps/babbage-console-e2e",
      "sourceRoot": "apps/babbage-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/babbage-console-e2e/cypress.json",
            "tsConfig": "apps/babbage-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "babbage-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "babbage-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/babbage-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/babbage-console-e2e/**"]
          }
        }
      }
    },
    "babbage-functions": {
      "root": "apps/babbage-functions",
      "sourceRoot": "apps/babbage-functions/src",
      "projectType": "application",
      "prefix": "babbage-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/babbage-functions",
            "main": "apps/babbage-functions/src/main.ts",
            "tsConfig": "apps/babbage-functions/tsconfig.app.json",
            "assets": ["apps/babbage-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/babbage-functions/src/environments/environment.ts",
                  "with": "apps/babbage-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "babbage-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/babbage-functions/tsconfig.app.json",
              "apps/babbage-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/babbage-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/babbage-functions/jest.config.js",
            "tsConfig": "apps/babbage-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "hedwig-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hedwig-console",
      "sourceRoot": "apps/hedwig-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hedwig-console",
            "index": "apps/hedwig-console/src/index.html",
            "main": "apps/hedwig-console/src/main.ts",
            "polyfills": "apps/hedwig-console/src/polyfills.ts",
            "tsConfig": "apps/hedwig-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hedwig-console/src/favicon.ico",
              "apps/hedwig-console/src/assets"
            ],
            "styles": ["apps/hedwig-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hedwig-console/src/environments/environment.ts",
                  "with": "apps/hedwig-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hedwig-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "hedwig-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hedwig-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hedwig-console/tsconfig.app.json",
              "apps/hedwig-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hedwig-console/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hedwig-console/jest.config.js",
            "tsConfig": "apps/hedwig-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/hedwig-console/src/test-setup.ts"
          }
        }
      }
    },
    "hedwig-console-e2e": {
      "root": "apps/hedwig-console-e2e",
      "sourceRoot": "apps/hedwig-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/hedwig-console-e2e/cypress.json",
            "tsConfig": "apps/hedwig-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "hedwig-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "hedwig-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/hedwig-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/hedwig-console-e2e/**"]
          }
        }
      }
    },
    "hedwig-functions": {
      "root": "apps/hedwig-functions",
      "sourceRoot": "apps/hedwig-functions/src",
      "projectType": "application",
      "prefix": "hedwig-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/hedwig-functions",
            "main": "apps/hedwig-functions/src/main.ts",
            "tsConfig": "apps/hedwig-functions/tsconfig.app.json",
            "assets": ["apps/hedwig-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hedwig-functions/src/environments/environment.ts",
                  "with": "apps/hedwig-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hedwig-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hedwig-functions/tsconfig.app.json",
              "apps/hedwig-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hedwig-functions/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hedwig-functions/jest.config.js",
            "tsConfig": "apps/hedwig-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui": {
      "root": "libs/ui",
      "sourceRoot": "libs/ui/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/tsconfig.lib.json",
              "libs/ui/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui/jest.config.js",
            "tsConfig": "libs/ui/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-layout": {
      "projectType": "library",
      "root": "libs/ui-layout",
      "sourceRoot": "libs/ui-layout/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui-layout/tsconfig.lib.json",
              "libs/ui-layout/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui-layout/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui-layout/jest.config.js",
            "tsConfig": "libs/ui-layout/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/ui-layout/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "ui-navigation": {
      "projectType": "library",
      "root": "libs/ui-navigation",
      "sourceRoot": "libs/ui-navigation/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui-navigation/tsconfig.lib.json",
              "libs/ui-navigation/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui-navigation/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui-navigation/jest.config.js",
            "tsConfig": "libs/ui-navigation/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/ui-navigation/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "ui-panels": {
      "projectType": "library",
      "root": "libs/ui-panels",
      "sourceRoot": "libs/ui-panels/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui-panels/tsconfig.lib.json",
              "libs/ui-panels/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui-panels/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui-panels/jest.config.js",
            "tsConfig": "libs/ui-panels/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/ui-panels/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "ui-theme": {
      "projectType": "library",
      "root": "libs/ui-theme",
      "sourceRoot": "libs/ui-theme/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui-theme/tsconfig.lib.json",
              "libs/ui-theme/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui-theme/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui-theme/jest.config.js",
            "tsConfig": "libs/ui-theme/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/ui-theme/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "powder-coat": {
      "projectType": "library",
      "root": "libs/powder-coat",
      "sourceRoot": "libs/powder-coat/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/powder-coat/tsconfig.lib.json",
              "libs/powder-coat/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/powder-coat/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/powder-coat/jest.config.js",
            "tsConfig": "libs/powder-coat/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/powder-coat/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular",
    "analytics": false
  },
  "schematics": {
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  },
  "defaultProject": "panama-console"
}
