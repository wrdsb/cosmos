{
  "version": 1,
  "projects": {
    "panama-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/panama-console",
      "sourceRoot": "apps/panama-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/panama-console",
            "index": "apps/panama-console/src/index.html",
            "main": "apps/panama-console/src/main.ts",
            "polyfills": "apps/panama-console/src/polyfills.ts",
            "tsConfig": "apps/panama-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/panama-console/src/favicon.ico",
              "apps/panama-console/src/assets"
            ],
            "styles": [
              "apps/panama-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/panama-console/src/environments/environment.ts",
                  "with": "apps/panama-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "panama-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "panama-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "panama-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-console/tsconfig.app.json",
              "apps/panama-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/panama-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/panama-console/jest.config.js",
            "tsConfig": "apps/panama-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/panama-console/src/test-setup.ts"
          }
        }
      }
    },
    "panama-console-e2e": {
      "root": "apps/panama-console-e2e",
      "sourceRoot": "apps/panama-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/panama-console-e2e/cypress.json",
            "tsConfig": "apps/panama-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "panama-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "panama-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/panama-console-e2e/**"
            ]
          }
        }
      }
    },
    "igor-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/igor-console",
      "sourceRoot": "apps/igor-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/igor-console",
            "index": "apps/igor-console/src/index.html",
            "main": "apps/igor-console/src/main.ts",
            "polyfills": "apps/igor-console/src/polyfills.ts",
            "tsConfig": "apps/igor-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/igor-console/src/favicon.ico",
              "apps/igor-console/src/assets"
            ],
            "styles": [
              "apps/igor-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/igor-console/src/environments/environment.ts",
                  "with": "apps/igor-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "igor-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "igor-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "igor-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-console/tsconfig.app.json",
              "apps/igor-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/igor-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-console/jest.config.js",
            "tsConfig": "apps/igor-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/igor-console/src/test-setup.ts"
          }
        }
      }
    },
    "igor-console-e2e": {
      "root": "apps/igor-console-e2e",
      "sourceRoot": "apps/igor-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/igor-console-e2e/cypress.json",
            "tsConfig": "apps/igor-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "igor-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "igor-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/igor-console-e2e/**"
            ]
          }
        }
      }
    },
    "hagar-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hagar-console",
      "sourceRoot": "apps/hagar-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hagar-console",
            "index": "apps/hagar-console/src/index.html",
            "main": "apps/hagar-console/src/main.ts",
            "polyfills": "apps/hagar-console/src/polyfills.ts",
            "tsConfig": "apps/hagar-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hagar-console/src/favicon.ico",
              "apps/hagar-console/src/assets"
            ],
            "styles": [
              "apps/hagar-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hagar-console/src/environments/environment.ts",
                  "with": "apps/hagar-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hagar-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "hagar-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hagar-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-console/tsconfig.app.json",
              "apps/hagar-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/hagar-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hagar-console/jest.config.js",
            "tsConfig": "apps/hagar-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/hagar-console/src/test-setup.ts"
          }
        }
      }
    },
    "hagar-console-e2e": {
      "root": "apps/hagar-console-e2e",
      "sourceRoot": "apps/hagar-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/hagar-console-e2e/cypress.json",
            "tsConfig": "apps/hagar-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "hagar-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "hagar-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/hagar-console-e2e/**"
            ]
          }
        }
      }
    },
    "sorting-hat-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/sorting-hat-console",
      "sourceRoot": "apps/sorting-hat-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/sorting-hat-console",
            "index": "apps/sorting-hat-console/src/index.html",
            "main": "apps/sorting-hat-console/src/main.ts",
            "polyfills": "apps/sorting-hat-console/src/polyfills.ts",
            "tsConfig": "apps/sorting-hat-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/sorting-hat-console/src/favicon.ico",
              "apps/sorting-hat-console/src/assets"
            ],
            "styles": [
              "apps/sorting-hat-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-console/src/environments/environment.ts",
                  "with": "apps/sorting-hat-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "sorting-hat-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "sorting-hat-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "sorting-hat-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-console/tsconfig.app.json",
              "apps/sorting-hat-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-console/jest.config.js",
            "tsConfig": "apps/sorting-hat-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/sorting-hat-console/src/test-setup.ts"
          }
        }
      }
    },
    "sorting-hat-console-e2e": {
      "root": "apps/sorting-hat-console-e2e",
      "sourceRoot": "apps/sorting-hat-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/sorting-hat-console-e2e/cypress.json",
            "tsConfig": "apps/sorting-hat-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "sorting-hat-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "sorting-hat-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-console-e2e/**"
            ]
          }
        }
      }
    },
    "viewfinder-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/viewfinder-console",
      "sourceRoot": "apps/viewfinder-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/viewfinder-console",
            "index": "apps/viewfinder-console/src/index.html",
            "main": "apps/viewfinder-console/src/main.ts",
            "polyfills": "apps/viewfinder-console/src/polyfills.ts",
            "tsConfig": "apps/viewfinder-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/viewfinder-console/src/favicon.ico",
              "apps/viewfinder-console/src/assets"
            ],
            "styles": [
              "apps/viewfinder-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/viewfinder-console/src/environments/environment.ts",
                  "with": "apps/viewfinder-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "viewfinder-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "viewfinder-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "viewfinder-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/viewfinder-console/tsconfig.app.json",
              "apps/viewfinder-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/viewfinder-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/viewfinder-console/jest.config.js",
            "tsConfig": "apps/viewfinder-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/viewfinder-console/src/test-setup.ts"
          }
        }
      }
    },
    "viewfinder-console-e2e": {
      "root": "apps/viewfinder-console-e2e",
      "sourceRoot": "apps/viewfinder-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/viewfinder-console-e2e/cypress.json",
            "tsConfig": "apps/viewfinder-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "viewfinder-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "viewfinder-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/viewfinder-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/viewfinder-console-e2e/**"
            ]
          }
        }
      }
    },
    "houston-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/houston-console",
      "sourceRoot": "apps/houston-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/houston-console",
            "index": "apps/houston-console/src/index.html",
            "main": "apps/houston-console/src/main.ts",
            "polyfills": "apps/houston-console/src/polyfills.ts",
            "tsConfig": "apps/houston-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/houston-console/src/favicon.ico",
              "apps/houston-console/src/assets"
            ],
            "styles": [
              "apps/houston-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/houston-console/src/environments/environment.ts",
                  "with": "apps/houston-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "houston-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "houston-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "houston-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-console/tsconfig.app.json",
              "apps/houston-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/houston-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/houston-console/jest.config.js",
            "tsConfig": "apps/houston-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/houston-console/src/test-setup.ts"
          }
        }
      }
    },
    "houston-console-e2e": {
      "root": "apps/houston-console-e2e",
      "sourceRoot": "apps/houston-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/houston-console-e2e/cypress.json",
            "tsConfig": "apps/houston-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "houston-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "houston-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/houston-console-e2e/**"
            ]
          }
        }
      }
    },
    "codex-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/codex-console",
      "sourceRoot": "apps/codex-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/codex-console",
            "index": "apps/codex-console/src/index.html",
            "main": "apps/codex-console/src/main.ts",
            "polyfills": "apps/codex-console/src/polyfills.ts",
            "tsConfig": "apps/codex-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/codex-console/src/favicon.ico",
              "apps/codex-console/src/assets"
            ],
            "styles": [
              "apps/codex-console/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/codex-console/src/environments/environment.ts",
                  "with": "apps/codex-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "codex-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "codex-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "codex-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-console/tsconfig.app.json",
              "apps/codex-console/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/codex-console/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/codex-console/jest.config.js",
            "tsConfig": "apps/codex-console/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/codex-console/src/test-setup.ts"
          }
        }
      }
    },
    "codex-console-e2e": {
      "root": "apps/codex-console-e2e",
      "sourceRoot": "apps/codex-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/codex-console-e2e/cypress.json",
            "tsConfig": "apps/codex-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "codex-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "codex-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-console-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/codex-console-e2e/**"
            ]
          }
        }
      }
    },
    "igor-types": {
      "root": "libs/igor-types",
      "sourceRoot": "libs/igor-types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/igor-types/tsconfig.lib.json",
              "libs/igor-types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/igor-types/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/igor-types/jest.config.js",
            "tsConfig": "libs/igor-types/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "hagar-types": {
      "root": "libs/hagar-types",
      "sourceRoot": "libs/hagar-types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/hagar-types/tsconfig.lib.json",
              "libs/hagar-types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/hagar-types/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/hagar-types/jest.config.js",
            "tsConfig": "libs/hagar-types/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "azure-functions-shared": {
      "root": "libs/azure-functions-shared",
      "sourceRoot": "libs/azure-functions-shared/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/azure-functions-shared/tsconfig.lib.json",
              "libs/azure-functions-shared/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/azure-functions-shared/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/azure-functions-shared/jest.config.js",
            "tsConfig": "libs/azure-functions-shared/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "sorting-hat": {
      "projectType": "library",
      "root": "libs/sorting-hat",
      "sourceRoot": "libs/sorting-hat/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/sorting-hat/tsconfig.lib.json",
              "libs/sorting-hat/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/sorting-hat/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/sorting-hat/jest.config.js",
            "tsConfig": "libs/sorting-hat/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/sorting-hat/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "sorting-hat-types": {
      "projectType": "library",
      "root": "libs/sorting-hat-types",
      "sourceRoot": "libs/sorting-hat-types/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/sorting-hat-types/tsconfig.lib.json",
              "libs/sorting-hat-types/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/sorting-hat-types/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/sorting-hat-types/jest.config.js",
            "tsConfig": "libs/sorting-hat-types/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "libs/sorting-hat-types/src/test-setup.ts"
          }
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "sorting-hat-functions": {
      "root": "apps/sorting-hat-functions",
      "sourceRoot": "apps/sorting-hat-functions/src",
      "projectType": "application",
      "prefix": "sorting-hat-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/sorting-hat-functions",
            "main": "apps/sorting-hat-functions/src/main.ts",
            "tsConfig": "apps/sorting-hat-functions/tsconfig.app.json",
            "assets": [
              "apps/sorting-hat-functions/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-functions/src/environments/environment.ts",
                  "with": "apps/sorting-hat-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "sorting-hat-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-functions/tsconfig.app.json",
              "apps/sorting-hat-functions/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-functions/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-functions/jest.config.js",
            "tsConfig": "apps/sorting-hat-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "igor-functions": {
      "root": "apps/igor-functions",
      "sourceRoot": "apps/igor-functions/src",
      "projectType": "application",
      "prefix": "igor-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/igor-functions",
            "main": "apps/igor-functions/src/main.ts",
            "tsConfig": "apps/igor-functions/tsconfig.app.json",
            "assets": [
              "apps/igor-functions/src/assets"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/igor-functions/src/environments/environment.ts",
                  "with": "apps/igor-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "igor-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-functions/tsconfig.app.json",
              "apps/igor-functions/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/igor-functions/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-functions/jest.config.js",
            "tsConfig": "apps/igor-functions/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular",
    "analytics": false
  },
  "schematics": {
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  },
  "defaultProject": "panama-console"
}
