{
  "version": 1,
  "projects": {
    "panama-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/panama-console",
      "sourceRoot": "apps/panama-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/panama-console",
            "index": "apps/panama-console/src/index.html",
            "main": "apps/panama-console/src/main.ts",
            "polyfills": "apps/panama-console/src/polyfills.ts",
            "tsConfig": "apps/panama-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/panama-console/src/favicon.ico",
              "apps/panama-console/src/assets"
            ],
            "styles": ["apps/panama-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/panama-console/src/environments/environment.ts",
                  "with": "apps/panama-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "panama-console:build",
            "port": 4250
          },
          "configurations": {
            "production": {
              "browserTarget": "panama-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "panama-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-console/tsconfig.app.json",
              "apps/panama-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/panama-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/panama-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/panama-console"]
        }
      }
    },
    "panama-console-e2e": {
      "root": "apps/panama-console-e2e",
      "sourceRoot": "apps/panama-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/panama-console-e2e/cypress.json",
            "tsConfig": "apps/panama-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "panama-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "panama-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/panama-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/panama-console-e2e/**/*"]
          }
        }
      }
    },
    "igor-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/igor-console",
      "sourceRoot": "apps/igor-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/igor-console",
            "index": "apps/igor-console/src/index.html",
            "main": "apps/igor-console/src/main.ts",
            "polyfills": "apps/igor-console/src/polyfills.ts",
            "tsConfig": "apps/igor-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/igor-console/src/favicon.ico",
              "apps/igor-console/src/assets"
            ],
            "styles": ["apps/igor-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/igor-console/src/environments/environment.ts",
                  "with": "apps/igor-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "igor-console:build",
            "port": 4234
          },
          "configurations": {
            "production": {
              "browserTarget": "igor-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "igor-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-console/tsconfig.app.json",
              "apps/igor-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/igor-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/igor-console"]
        }
      }
    },
    "igor-console-e2e": {
      "root": "apps/igor-console-e2e",
      "sourceRoot": "apps/igor-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/igor-console-e2e/cypress.json",
            "tsConfig": "apps/igor-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "igor-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "igor-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/igor-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/igor-console-e2e/**/*"]
          }
        }
      }
    },
    "hagar-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hagar-console",
      "sourceRoot": "apps/hagar-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hagar-console",
            "index": "apps/hagar-console/src/index.html",
            "main": "apps/hagar-console/src/main.ts",
            "polyfills": "apps/hagar-console/src/polyfills.ts",
            "tsConfig": "apps/hagar-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hagar-console/src/favicon.ico",
              "apps/hagar-console/src/assets"
            ],
            "styles": ["apps/hagar-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hagar-console/src/environments/environment.ts",
                  "with": "apps/hagar-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hagar-console:build",
            "port": 4226
          },
          "configurations": {
            "production": {
              "browserTarget": "hagar-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hagar-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-console/tsconfig.app.json",
              "apps/hagar-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hagar-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hagar-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/hagar-console"]
        }
      }
    },
    "hagar-console-e2e": {
      "root": "apps/hagar-console-e2e",
      "sourceRoot": "apps/hagar-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/hagar-console-e2e/cypress.json",
            "tsConfig": "apps/hagar-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "hagar-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "hagar-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/hagar-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/hagar-console-e2e/**/*"]
          }
        }
      }
    },
    "sorting-hat-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/sorting-hat-console",
      "sourceRoot": "apps/sorting-hat-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/sorting-hat-console",
            "index": "apps/sorting-hat-console/src/index.html",
            "main": "apps/sorting-hat-console/src/main.ts",
            "polyfills": "apps/sorting-hat-console/src/polyfills.ts",
            "tsConfig": "apps/sorting-hat-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/sorting-hat-console/src/favicon.ico",
              "apps/sorting-hat-console/src/assets"
            ],
            "styles": ["apps/sorting-hat-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-console/src/environments/environment.ts",
                  "with": "apps/sorting-hat-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "sorting-hat-console:build",
            "port": 4276
          },
          "configurations": {
            "production": {
              "browserTarget": "sorting-hat-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "sorting-hat-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-console/tsconfig.app.json",
              "apps/sorting-hat-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/sorting-hat-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/sorting-hat-console"]
        }
      }
    },
    "sorting-hat-console-e2e": {
      "root": "apps/sorting-hat-console-e2e",
      "sourceRoot": "apps/sorting-hat-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/sorting-hat-console-e2e/cypress.json",
            "tsConfig": "apps/sorting-hat-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "sorting-hat-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "sorting-hat-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/sorting-hat-console-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-console-e2e/**/*"
            ]
          }
        }
      }
    },
    "viewfinder-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/viewfinder-console",
      "sourceRoot": "apps/viewfinder-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/viewfinder-console",
            "index": "apps/viewfinder-console/src/index.html",
            "main": "apps/viewfinder-console/src/main.ts",
            "polyfills": "apps/viewfinder-console/src/polyfills.ts",
            "tsConfig": "apps/viewfinder-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/viewfinder-console/src/favicon.ico",
              "apps/viewfinder-console/src/assets",
              "apps/viewfinder-console/src/manifest.webmanifest"
            ],
            "styles": ["apps/viewfinder-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/viewfinder-console/src/environments/environment.ts",
                  "with": "apps/viewfinder-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/viewfinder-console/ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "viewfinder-console:build",
            "port": 4290
          },
          "configurations": {
            "production": {
              "browserTarget": "viewfinder-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "viewfinder-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/viewfinder-console/tsconfig.app.json",
              "apps/viewfinder-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/viewfinder-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/viewfinder-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/viewfinder-console"]
        }
      }
    },
    "viewfinder-console-e2e": {
      "root": "apps/viewfinder-console-e2e",
      "sourceRoot": "apps/viewfinder-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/viewfinder-console-e2e/cypress.json",
            "tsConfig": "apps/viewfinder-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "viewfinder-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "viewfinder-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/viewfinder-console-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/viewfinder-console-e2e/**/*"
            ]
          }
        }
      }
    },
    "houston-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/houston-console",
      "sourceRoot": "apps/houston-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/houston-console",
            "index": "apps/houston-console/src/index.html",
            "main": "apps/houston-console/src/main.ts",
            "polyfills": "apps/houston-console/src/polyfills.ts",
            "tsConfig": "apps/houston-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/houston-console/src/favicon.ico",
              "apps/houston-console/src/assets"
            ],
            "styles": ["apps/houston-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/houston-console/src/environments/environment.ts",
                  "with": "apps/houston-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "houston-console:build",
            "port": 4230
          },
          "configurations": {
            "production": {
              "browserTarget": "houston-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "houston-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-console/tsconfig.app.json",
              "apps/houston-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/houston-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/houston-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/houston-console"]
        }
      }
    },
    "houston-console-e2e": {
      "root": "apps/houston-console-e2e",
      "sourceRoot": "apps/houston-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/houston-console-e2e/cypress.json",
            "tsConfig": "apps/houston-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "houston-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "houston-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/houston-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/houston-console-e2e/**/*"]
          }
        }
      }
    },
    "codex-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/codex-console",
      "sourceRoot": "apps/codex-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/codex-console",
            "index": "apps/codex-console/src/index.html",
            "main": "apps/codex-console/src/main.ts",
            "polyfills": "apps/codex-console/src/polyfills.ts",
            "tsConfig": "apps/codex-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/codex-console/src/favicon.ico",
              "apps/codex-console/src/assets"
            ],
            "styles": ["apps/codex-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/codex-console/src/environments/environment.ts",
                  "with": "apps/codex-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "codex-console:build",
            "port": 4214
          },
          "configurations": {
            "production": {
              "browserTarget": "codex-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "codex-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-console/tsconfig.app.json",
              "apps/codex-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/codex-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/codex-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/codex-console"]
        }
      }
    },
    "codex-console-e2e": {
      "root": "apps/codex-console-e2e",
      "sourceRoot": "apps/codex-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/codex-console-e2e/cypress.json",
            "tsConfig": "apps/codex-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "codex-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "codex-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/codex-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/codex-console-e2e/**/*"]
          }
        }
      }
    },
    "sorting-hat-functions": {
      "root": "apps/sorting-hat-functions",
      "sourceRoot": "apps/sorting-hat-functions/src",
      "projectType": "application",
      "prefix": "sorting-hat-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/sorting-hat-functions",
            "tsConfig": "apps/sorting-hat-functions/tsconfig.app.json",
            "webpackConfig": "apps/sorting-hat-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/sorting-hat-functions/src",
                "glob": "**/function.json",
                "output": "./sorting-hat-functions"
              },
              {
                "input": "./apps/sorting-hat-functions/src",
                "glob": "host.json",
                "output": "./sorting-hat-functions"
              },
              {
                "input": "./apps/sorting-hat-functions/src",
                "glob": "proxies.json",
                "output": "./sorting-hat-functions"
              },
              {
                "input": "./apps/sorting-hat-functions/src",
                "glob": "extensions.csproj",
                "output": "./sorting-hat-functions"
              },
              {
                "input": "./apps/sorting-hat-functions/src/bin",
                "glob": "**.*",
                "output": "./sorting-hat-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/sorting-hat-functions/src/environments/environment.ts",
                  "with": "apps/sorting-hat-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "sorting-hat-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/sorting-hat-functions/tsconfig.app.json",
              "apps/sorting-hat-functions/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/sorting-hat-functions/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/sorting-hat-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/sorting-hat-functions"]
        }
      }
    },
    "igor-functions": {
      "root": "apps/igor-functions",
      "sourceRoot": "apps/igor-functions/src",
      "projectType": "application",
      "prefix": "igor-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/igor-functions",
            "tsConfig": "apps/igor-functions/tsconfig.app.json",
            "webpackConfig": "apps/igor-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/igor-functions/src",
                "glob": "**/function.json",
                "output": "./igor-functions"
              },
              {
                "input": "./apps/igor-functions/src",
                "glob": "host.json",
                "output": "./igor-functions"
              },
              {
                "input": "./apps/igor-functions/src",
                "glob": "proxies.json",
                "output": "./igor-functions"
              },
              {
                "input": "./apps/igor-functions/src",
                "glob": "extensions.csproj",
                "output": "./igor-functions"
              },
              {
                "input": "./apps/igor-functions/src/bin",
                "glob": "**.*",
                "output": "./igor-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/igor-functions/src/environments/environment.ts",
                  "with": "apps/igor-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "igor-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/igor-functions/tsconfig.app.json",
              "apps/igor-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/igor-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/igor-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/igor-functions"]
        }
      }
    },
    "hagar-functions": {
      "root": "apps/hagar-functions",
      "sourceRoot": "apps/hagar-functions/src",
      "projectType": "application",
      "prefix": "hagar-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/hagar-functions",
            "tsConfig": "apps/hagar-functions/tsconfig.app.json",
            "webpackConfig": "apps/hagar-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/hagar-functions/src",
                "glob": "**/function.json",
                "output": "./hagar-functions"
              },
              {
                "input": "./apps/hagar-functions/src",
                "glob": "host.json",
                "output": "./hagar-functions"
              },
              {
                "input": "./apps/hagar-functions/src",
                "glob": "proxies.json",
                "output": "./hagar-functions"
              },
              {
                "input": "./apps/hagar-functions/src",
                "glob": "extensions.csproj",
                "output": "./hagar-functions"
              },
              {
                "input": "./apps/hagar-functions/src/bin",
                "glob": "**.*",
                "output": "./hagar-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hagar-functions/src/environments/environment.ts",
                  "with": "apps/hagar-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hagar-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hagar-functions/tsconfig.app.json",
              "apps/hagar-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hagar-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hagar-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/hagar-functions"]
        }
      }
    },
    "flynn": {
      "root": "apps/flynn",
      "sourceRoot": "apps/flynn/src",
      "projectType": "application",
      "prefix": "flynn",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/flynn-functions",
            "tsConfig": "apps/flynn-functions/tsconfig.app.json",
            "webpackConfig": "apps/flynn-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/flynn-functions/src",
                "glob": "**/function.json",
                "output": "./flynn-functions"
              },
              {
                "input": "./apps/flynn-functions/src",
                "glob": "host.json",
                "output": "./flynn-functions"
              },
              {
                "input": "./apps/flynn-functions/src",
                "glob": "proxies.json",
                "output": "./flynn-functions"
              },
              {
                "input": "./apps/flynn-functions/src",
                "glob": "extensions.csproj",
                "output": "./flynn-functions"
              },
              {
                "input": "./apps/flynn-functions/src/bin",
                "glob": "**.*",
                "output": "./flynn-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/flynn-functions/src/environments/environment.ts",
                  "with": "apps/flynn-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "flynn:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/flynn/tsconfig.app.json",
              "apps/flynn/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/flynn/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/flynn/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/flynn"]
        }
      }
    },
    "skyline-functions": {
      "root": "apps/skyline-functions",
      "sourceRoot": "apps/skyline-functions/src",
      "projectType": "application",
      "prefix": "skyline-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/skyline-functions",
            "tsConfig": "apps/skyline-functions/tsconfig.app.json",
            "webpackConfig": "apps/skyliner-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/skyline-functions/src",
                "glob": "**/function.json",
                "output": "./skyline-functions"
              },
              {
                "input": "./apps/skyline-functions/src",
                "glob": "host.json",
                "output": "./skyline-functions"
              },
              {
                "input": "./apps/skyline-functions/src",
                "glob": "proxies.json",
                "output": "./skyline-functions"
              },
              {
                "input": "./apps/skyline-functions/src",
                "glob": "extensions.csproj",
                "output": "./skyline-functions"
              },
              {
                "input": "./apps/skyline-functions/src/bin",
                "glob": "**.*",
                "output": "./skyline-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/skyline-functions/src/environments/environment.ts",
                  "with": "apps/skyline-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skyline-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skyline-functions/tsconfig.app.json",
              "apps/skyline-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skyline-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skyline-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skyline-functions"]
        }
      }
    },
    "skinner-functions": {
      "root": "apps/skinner-functions",
      "sourceRoot": "apps/skinner-functions/src",
      "projectType": "application",
      "prefix": "skinner-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/skinner-functions",
            "tsConfig": "apps/skinner-functions/tsconfig.app.json",
            "webpackConfig": "apps/skinner-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/skinner-functions/src",
                "glob": "**/function.json",
                "output": "./skinner-functions"
              },
              {
                "input": "./apps/skinner-functions/src",
                "glob": "host.json",
                "output": "./skinner-functions"
              },
              {
                "input": "./apps/skinner-functions/src",
                "glob": "proxies.json",
                "output": "./skinner-functions"
              },
              {
                "input": "./apps/skinner-functions/src",
                "glob": "extensions.csproj",
                "output": "./skinner-functions"
              },
              {
                "input": "./apps/skinner-functions/src/bin",
                "glob": "**.*",
                "output": "./skinner-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/skinner-functions/src/environments/environment.ts",
                  "with": "apps/skinner-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "skinner-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skinner-functions/tsconfig.app.json",
              "apps/skinner-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skinner-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skinner-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skinner-functions"]
        }
      }
    },
    "flenderson-functions": {
      "root": "apps/flenderson-functions",
      "sourceRoot": "apps/flenderson-functions/src",
      "projectType": "application",
      "prefix": "flenderson-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/flenderson-functions",
            "tsConfig": "apps/flenderson-functions/tsconfig.app.json",
            "webpackConfig": "apps/flenderson-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/flenderson-functions/src",
                "glob": "**/function.json",
                "output": "./flenderson-functions"
              },
              {
                "input": "./apps/flenderson-functions/src",
                "glob": "host.json",
                "output": "./flenderson-functions"
              },
              {
                "input": "./apps/flenderson-functions/src",
                "glob": "proxies.json",
                "output": "./flenderson-functions"
              },
              {
                "input": "./apps/flenderson-functions/src",
                "glob": "extensions.csproj",
                "output": "./flenderson-functions"
              },
              {
                "input": "./apps/flenderson-functions/src/bin",
                "glob": "**.*",
                "output": "./flenderson-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/flenderson-functions/src/environments/environment.ts",
                  "with": "apps/flenderson-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "flenderson-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/flenderson-functions/tsconfig.app.json",
              "apps/flenderson-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/flenderson-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/flenderson-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/flenderson-functions"]
        }
      }
    },
    "panama-functions": {
      "root": "apps/panama-functions",
      "sourceRoot": "apps/panama-functions/src",
      "projectType": "application",
      "prefix": "panama-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/panama-functions",
            "tsConfig": "apps/panama-functions/tsconfig.app.json",
            "webpackConfig": "apps/panama-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/panama-functions/src",
                "glob": "**/function.json",
                "output": "./panama-functions"
              },
              {
                "input": "./apps/panama-functions/src",
                "glob": "host.json",
                "output": "./panama-functions"
              },
              {
                "input": "./apps/panama-functions/src",
                "glob": "proxies.json",
                "output": "./panama-functions"
              },
              {
                "input": "./apps/panama-functions/src",
                "glob": "extensions.csproj",
                "output": "./panama-functions"
              },
              {
                "input": "./apps/panama-functions/src/bin",
                "glob": "**.*",
                "output": "./panama-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/panama-functions/src/environments/environment.ts",
                  "with": "apps/panama-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "panama-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/panama-functions/tsconfig.app.json",
              "apps/panama-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/panama-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/panama-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/panama-functions"]
        }
      }
    },
    "radar-functions": {
      "root": "apps/radar-functions",
      "sourceRoot": "apps/radar-functions/src",
      "projectType": "application",
      "prefix": "radar-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/radar-functions",
            "tsConfig": "apps/radar-functions/tsconfig.app.json",
            "webpackConfig": "apps/radar-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/radar-functions/src",
                "glob": "**/function.json",
                "output": "./radar-functions"
              },
              {
                "input": "./apps/radar-functions/src",
                "glob": "host.json",
                "output": "./radar-functions"
              },
              {
                "input": "./apps/radar-functions/src",
                "glob": "proxies.json",
                "output": "./radar-functions"
              },
              {
                "input": "./apps/radar-functions/src",
                "glob": "extensions.csproj",
                "output": "./radar-functions"
              },
              {
                "input": "./apps/radar-functions/src/bin",
                "glob": "**.*",
                "output": "./radar-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/radar-functions/src/environments/environment.ts",
                  "with": "apps/radar-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "radar-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/radar-functions/tsconfig.app.json",
              "apps/radar-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/radar-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/radar-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/radar-functions"]
        }
      }
    },
    "lamson-functions": {
      "root": "apps/lamson-functions",
      "sourceRoot": "apps/lamson-functions/src",
      "projectType": "application",
      "prefix": "lamson-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/lamson-functions",
            "tsConfig": "apps/lamson-functions/tsconfig.app.json",
            "webpackConfig": "apps/lamson-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/lamson-functions/src",
                "glob": "**/function.json",
                "output": "./lamson-functions"
              },
              {
                "input": "./apps/lamson-functions/src",
                "glob": "host.json",
                "output": "./lamson-functions"
              },
              {
                "input": "./apps/lamson-functions/src",
                "glob": "proxies.json",
                "output": "./lamson-functions"
              },
              {
                "input": "./apps/lamson-functions/src",
                "glob": "extensions.csproj",
                "output": "./lamson-functions"
              },
              {
                "input": "./apps/lamson-functions/src/bin",
                "glob": "**.*",
                "output": "./lamson-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/lamson-functions/src/environments/environment.ts",
                  "with": "apps/lamson-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "lamson-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/lamson-functions/tsconfig.app.json",
              "apps/lamson-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/lamson-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/lamson-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/lamson-functions"]
        }
      }
    },
    "houston-functions": {
      "root": "apps/houston-functions",
      "sourceRoot": "apps/houston-functions/src",
      "projectType": "application",
      "prefix": "houston-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/houston-functions",
            "tsConfig": "apps/houston-functions/tsconfig.app.json",
            "webpackConfig": "apps/houston-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/houston-functions/src",
                "glob": "**/function.json",
                "output": "./houston-functions"
              },
              {
                "input": "./apps/houston-functions/src",
                "glob": "host.json",
                "output": "./houston-functions"
              },
              {
                "input": "./apps/houston-functions/src",
                "glob": "proxies.json",
                "output": "./houston-functions"
              },
              {
                "input": "./apps/houston-functions/src",
                "glob": "extensions.csproj",
                "output": "./houston-functions"
              },
              {
                "input": "./apps/houston-functions/src/bin",
                "glob": "**.*",
                "output": "./houston-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/houston-functions/src/environments/environment.ts",
                  "with": "apps/houston-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "houston-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/houston-functions/tsconfig.app.json",
              "apps/houston-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/houston-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/houston-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/houston-functions"]
        }
      }
    },
    "codex-functions": {
      "root": "apps/codex-functions",
      "sourceRoot": "apps/codex-functions/src",
      "projectType": "application",
      "prefix": "codex-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/codex-functions",
            "tsConfig": "apps/codex-functions/tsconfig.app.json",
            "webpackConfig": "apps/codex-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/codex-functions/src",
                "glob": "**/function.json",
                "output": "./codex-functions"
              },
              {
                "input": "./apps/codex-functions/src",
                "glob": "host.json",
                "output": "./codex-functions"
              },
              {
                "input": "./apps/codex-functions/src",
                "glob": "proxies.json",
                "output": "./codex-functions"
              },
              {
                "input": "./apps/codex-functions/src",
                "glob": "extensions.csproj",
                "output": "./codex-functions"
              },
              {
                "input": "./apps/codex-functions/src/bin",
                "glob": "**.*",
                "output": "./codex-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/codex-functions/src/environments/environment.ts",
                  "with": "apps/codex-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "codex-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/codex-functions/tsconfig.app.json",
              "apps/codex-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/codex-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/codex-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/codex-functions"]
        }
      }
    },
    "flenderson-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/flenderson-console",
      "sourceRoot": "apps/flenderson-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/flenderson-console",
            "index": "apps/flenderson-console/src/index.html",
            "main": "apps/flenderson-console/src/main.ts",
            "polyfills": "apps/flenderson-console/src/polyfills.ts",
            "tsConfig": "apps/flenderson-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/flenderson-console/src/favicon.ico",
              "apps/flenderson-console/src/assets"
            ],
            "styles": ["apps/flenderson-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/flenderson-console/src/environments/environment.ts",
                  "with": "apps/flenderson-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "flenderson-console:build",
            "port": 4220
          },
          "configurations": {
            "production": {
              "browserTarget": "flenderson-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "flenderson-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/flenderson-console/tsconfig.app.json",
              "apps/flenderson-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/flenderson-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/flenderson-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/flenderson-console"]
        }
      }
    },
    "flenderson-console-e2e": {
      "root": "apps/flenderson-console-e2e",
      "sourceRoot": "apps/flenderson-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/flenderson-console-e2e/cypress.json",
            "tsConfig": "apps/flenderson-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "flenderson-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "flenderson-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/flenderson-console-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/flenderson-console-e2e/**/*"
            ]
          }
        }
      }
    },
    "lamson-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/lamson-console",
      "sourceRoot": "apps/lamson-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/lamson-console",
            "index": "apps/lamson-console/src/index.html",
            "main": "apps/lamson-console/src/main.ts",
            "polyfills": "apps/lamson-console/src/polyfills.ts",
            "tsConfig": "apps/lamson-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/lamson-console/src/favicon.ico",
              "apps/lamson-console/src/assets"
            ],
            "styles": ["apps/lamson-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/lamson-console/src/environments/environment.ts",
                  "with": "apps/lamson-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "lamson-console:build",
            "port": 4240
          },
          "configurations": {
            "production": {
              "browserTarget": "lamson-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "lamson-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/lamson-console/tsconfig.app.json",
              "apps/lamson-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/lamson-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/lamson-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/lamson-console"]
        }
      }
    },
    "lamson-console-e2e": {
      "root": "apps/lamson-console-e2e",
      "sourceRoot": "apps/lamson-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/lamson-console-e2e/cypress.json",
            "tsConfig": "apps/lamson-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "lamson-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "lamson-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/lamson-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/lamson-console-e2e/**/*"]
          }
        }
      }
    },
    "radar-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/radar-console",
      "sourceRoot": "apps/radar-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/radar-console",
            "index": "apps/radar-console/src/index.html",
            "main": "apps/radar-console/src/main.ts",
            "polyfills": "apps/radar-console/src/polyfills.ts",
            "tsConfig": "apps/radar-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/radar-console/src/favicon.ico",
              "apps/radar-console/src/assets"
            ],
            "styles": ["apps/radar-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/radar-console/src/environments/environment.ts",
                  "with": "apps/radar-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "radar-console:build",
            "port": 4256
          },
          "configurations": {
            "production": {
              "browserTarget": "radar-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "radar-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/radar-console/tsconfig.app.json",
              "apps/radar-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/radar-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/radar-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/radar-console"]
        }
      }
    },
    "radar-console-e2e": {
      "root": "apps/radar-console-e2e",
      "sourceRoot": "apps/radar-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/radar-console-e2e/cypress.json",
            "tsConfig": "apps/radar-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "radar-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "radar-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/radar-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/radar-console-e2e/**/*"]
          }
        }
      }
    },
    "skinner-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/skinner-console",
      "sourceRoot": "apps/skinner-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/skinner-console",
            "index": "apps/skinner-console/src/index.html",
            "main": "apps/skinner-console/src/main.ts",
            "polyfills": "apps/skinner-console/src/polyfills.ts",
            "tsConfig": "apps/skinner-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/skinner-console/src/favicon.ico",
              "apps/skinner-console/src/assets"
            ],
            "styles": ["apps/skinner-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/skinner-console/src/environments/environment.ts",
                  "with": "apps/skinner-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "skinner-console:build",
            "port": 4266
          },
          "configurations": {
            "production": {
              "browserTarget": "skinner-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "skinner-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skinner-console/tsconfig.app.json",
              "apps/skinner-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skinner-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skinner-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skinner-console"]
        }
      }
    },
    "skinner-console-e2e": {
      "root": "apps/skinner-console-e2e",
      "sourceRoot": "apps/skinner-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/skinner-console-e2e/cypress.json",
            "tsConfig": "apps/skinner-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "skinner-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "skinner-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/skinner-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/skinner-console-e2e/**/*"]
          }
        }
      }
    },
    "skyline-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/skyline-console",
      "sourceRoot": "apps/skyline-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/skyline-console",
            "index": "apps/skyline-console/src/index.html",
            "main": "apps/skyline-console/src/main.ts",
            "polyfills": "apps/skyline-console/src/polyfills.ts",
            "tsConfig": "apps/skyline-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/skyline-console/src/favicon.ico",
              "apps/skyline-console/src/assets"
            ],
            "styles": ["apps/skyline-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/skyline-console/src/environments/environment.ts",
                  "with": "apps/skyline-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "skyline-console:build",
            "port": 4270
          },
          "configurations": {
            "production": {
              "browserTarget": "skyline-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "skyline-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/skyline-console/tsconfig.app.json",
              "apps/skyline-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/skyline-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/skyline-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/skyline-console"]
        }
      }
    },
    "skyline-console-e2e": {
      "root": "apps/skyline-console-e2e",
      "sourceRoot": "apps/skyline-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/skyline-console-e2e/cypress.json",
            "tsConfig": "apps/skyline-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "skyline-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "skyline-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/skyline-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/skyline-console-e2e/**/*"]
          }
        }
      }
    },
    "viewfinder-functions": {
      "root": "apps/viewfinder-functions",
      "sourceRoot": "apps/viewfinder-functions/src",
      "projectType": "application",
      "prefix": "viewfinder-functions",
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/viewfinder-functions",
            "tsConfig": "apps/viewfinder-functions/tsconfig.app.json",
            "webpackConfig": "apps/viewfinder-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/viewfinder-functions/src",
                "glob": "**/function.json",
                "output": "./viewfinder-functions"
              },
              {
                "input": "./apps/viewfinder-functions/src",
                "glob": "host.json",
                "output": "./viewfinder-functions"
              },
              {
                "input": "./apps/viewfinder-functions/src",
                "glob": "proxies.json",
                "output": "./viewfinder-functions"
              },
              {
                "input": "./apps/viewfinder-functions/src",
                "glob": "extensions.csproj",
                "output": "./viewfinder-functions"
              },
              {
                "input": "./apps/viewfinder-functions/src/bin",
                "glob": "**.*",
                "output": "./viewfinder-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/viewfinder-functions/src/environments/environment.ts",
                  "with": "apps/viewfinder-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "viewfinder-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/viewfinder-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/viewfinder-functions"],
          "options": {
            "jestConfig": "apps/viewfinder-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "claptrap-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/claptrap-console",
      "sourceRoot": "apps/claptrap-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/claptrap-console",
            "index": "apps/claptrap-console/src/index.html",
            "main": "apps/claptrap-console/src/main.ts",
            "polyfills": "apps/claptrap-console/src/polyfills.ts",
            "tsConfig": "apps/claptrap-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/claptrap-console/src/favicon.ico",
              "apps/claptrap-console/src/assets"
            ],
            "styles": ["apps/claptrap-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/claptrap-console/src/environments/environment.ts",
                  "with": "apps/claptrap-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "claptrap-console:build",
            "port": 4210
          },
          "configurations": {
            "production": {
              "browserTarget": "claptrap-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "claptrap-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/claptrap-console/tsconfig.app.json",
              "apps/claptrap-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/claptrap-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/claptrap-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/claptrap-console"]
        }
      }
    },
    "claptrap-console-e2e": {
      "root": "apps/claptrap-console-e2e",
      "sourceRoot": "apps/claptrap-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/claptrap-console-e2e/cypress.json",
            "tsConfig": "apps/claptrap-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "claptrap-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "claptrap-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/claptrap-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/claptrap-console-e2e/**/*"]
          }
        }
      }
    },
    "claptrap-functions": {
      "root": "apps/claptrap-functions",
      "sourceRoot": "apps/claptrap-functions/src",
      "projectType": "application",
      "prefix": "claptrap-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/claptrap-functions",
            "tsConfig": "apps/claptrap-functions/tsconfig.app.json",
            "webpackConfig": "apps/claptrap-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/claptrap-functions/src",
                "glob": "**/function.json",
                "output": "./claptrap-functions"
              },
              {
                "input": "./apps/claptrap-functions/src",
                "glob": "host.json",
                "output": "./claptrap-functions"
              },
              {
                "input": "./apps/claptrap-functions/src",
                "glob": "proxies.json",
                "output": "./claptrap-functions"
              },
              {
                "input": "./apps/claptrap-functions/src",
                "glob": "extensions.csproj",
                "output": "./claptrap-functions"
              },
              {
                "input": "./apps/claptrap-functions/src/bin",
                "glob": "**.*",
                "output": "./claptrap-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/claptrap-functions/src/environments/environment.ts",
                  "with": "apps/claptrap-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "claptrap-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/claptrap-functions/tsconfig.app.json",
              "apps/claptrap-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/claptrap-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/claptrap-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/claptrap-functions"]
        }
      }
    },
    "mcp-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/mcp-console",
      "sourceRoot": "apps/mcp-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/mcp-console",
            "index": "apps/mcp-console/src/index.html",
            "main": "apps/mcp-console/src/main.ts",
            "polyfills": "apps/mcp-console/src/polyfills.ts",
            "tsConfig": "apps/mcp-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/mcp-console/src/favicon.ico",
              "apps/mcp-console/src/assets"
            ],
            "styles": ["apps/mcp-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/mcp-console/src/environments/environment.ts",
                  "with": "apps/mcp-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mcp-console:build",
            "port": 4244
          },
          "configurations": {
            "production": {
              "browserTarget": "mcp-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "mcp-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mcp-console/tsconfig.app.json",
              "apps/mcp-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mcp-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mcp-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/mcp-console"]
        }
      }
    },
    "mcp-console-e2e": {
      "root": "apps/mcp-console-e2e",
      "sourceRoot": "apps/mcp-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mcp-console-e2e/cypress.json",
            "tsConfig": "apps/mcp-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "mcp-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mcp-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/mcp-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/mcp-console-e2e/**/*"]
          }
        }
      }
    },
    "mcp-functions": {
      "root": "apps/mcp-functions",
      "sourceRoot": "apps/mcp-functions/src",
      "projectType": "application",
      "prefix": "mcp-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/mcp-functions",
            "tsConfig": "apps/mcp-functions/tsconfig.app.json",
            "webpackConfig": "apps/mcp-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/mcp-functions/src",
                "glob": "**/function.json",
                "output": "./mcp-functions"
              },
              {
                "input": "./apps/mcp-functions/src",
                "glob": "host.json",
                "output": "./mcp-functions"
              },
              {
                "input": "./apps/mcp-functions/src",
                "glob": "proxies.json",
                "output": "./mcp-functions"
              },
              {
                "input": "./apps/mcp-functions/src",
                "glob": "extensions.csproj",
                "output": "./mcp-functions"
              },
              {
                "input": "./apps/mcp-functions/src/bin",
                "glob": "**.*",
                "output": "./mcp-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/mcp-functions/src/environments/environment.ts",
                  "with": "apps/mcp-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "mcp-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mcp-functions/tsconfig.app.json",
              "apps/mcp-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mcp-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mcp-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/mcp-functions"]
        }
      }
    },
    "relay-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/relay-console",
      "sourceRoot": "apps/relay-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/relay-console",
            "index": "apps/relay-console/src/index.html",
            "main": "apps/relay-console/src/main.ts",
            "polyfills": "apps/relay-console/src/polyfills.ts",
            "tsConfig": "apps/relay-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/relay-console/src/favicon.ico",
              "apps/relay-console/src/assets"
            ],
            "styles": ["apps/relay-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/relay-console/src/environments/environment.ts",
                  "with": "apps/relay-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "relay-console:build",
            "port": 4260
          },
          "configurations": {
            "production": {
              "browserTarget": "relay-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "relay-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/relay-console/tsconfig.app.json",
              "apps/relay-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/relay-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/relay-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/relay-console"]
        }
      }
    },
    "relay-console-e2e": {
      "root": "apps/relay-console-e2e",
      "sourceRoot": "apps/relay-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/relay-console-e2e/cypress.json",
            "tsConfig": "apps/relay-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "relay-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "relay-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/relay-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/relay-console-e2e/**/*"]
          }
        }
      }
    },
    "relay-functions": {
      "root": "apps/relay-functions",
      "sourceRoot": "apps/relay-functions/src",
      "projectType": "application",
      "prefix": "relay-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/relay-functions",
            "tsConfig": "apps/relay-functions/tsconfig.app.json",
            "webpackConfig": "apps/relay-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/relay-functions/src",
                "glob": "**/function.json",
                "output": "./relay-functions"
              },
              {
                "input": "./apps/relay-functions/src",
                "glob": "host.json",
                "output": "./relay-functions"
              },
              {
                "input": "./apps/relay-functions/src",
                "glob": "proxies.json",
                "output": "./relay-functions"
              },
              {
                "input": "./apps/relay-functions/src",
                "glob": "extensions.csproj",
                "output": "./relay-functions"
              },
              {
                "input": "./apps/relay-functions/src/bin",
                "glob": "**.*",
                "output": "./relay-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/relay-functions/src/environments/environment.ts",
                  "with": "apps/relay-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "relay-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/relay-functions/tsconfig.app.json",
              "apps/relay-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/relay-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/relay-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/relay-functions"]
        }
      }
    },
    "babbage-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/babbage-console",
      "sourceRoot": "apps/babbage-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/babbage-console",
            "index": "apps/babbage-console/src/index.html",
            "main": "apps/babbage-console/src/main.ts",
            "polyfills": "apps/babbage-console/src/polyfills.ts",
            "tsConfig": "apps/babbage-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/babbage-console/src/favicon.ico",
              "apps/babbage-console/src/assets"
            ],
            "styles": ["apps/babbage-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/babbage-console/src/environments/environment.ts",
                  "with": "apps/babbage-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "babbage-console:build",
            "port": 4205
          },
          "configurations": {
            "production": {
              "browserTarget": "babbage-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "babbage-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/babbage-console/tsconfig.app.json",
              "apps/babbage-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/babbage-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/babbage-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/babbage-console"]
        }
      }
    },
    "babbage-console-e2e": {
      "root": "apps/babbage-console-e2e",
      "sourceRoot": "apps/babbage-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/babbage-console-e2e/cypress.json",
            "tsConfig": "apps/babbage-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "babbage-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "babbage-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/babbage-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/babbage-console-e2e/**/*"]
          }
        }
      }
    },
    "babbage-functions": {
      "root": "apps/babbage-functions",
      "sourceRoot": "apps/babbage-functions/src",
      "projectType": "application",
      "prefix": "babbage-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/babbage-functions",
            "tsConfig": "apps/babbage-functions/tsconfig.app.json",
            "webpackConfig": "apps/babbage-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/babbage-functions/src",
                "glob": "**/function.json",
                "output": "./babbage-functions"
              },
              {
                "input": "./apps/babbage-functions/src",
                "glob": "host.json",
                "output": "./babbage-functions"
              },
              {
                "input": "./apps/babbage-functions/src",
                "glob": "proxies.json",
                "output": "./babbage-functions"
              },
              {
                "input": "./apps/babbage-functions/src",
                "glob": "extensions.csproj",
                "output": "./babbage-functions"
              },
              {
                "input": "./apps/babbage-functions/src/bin",
                "glob": "**.*",
                "output": "./babbage-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/babbage-functions/src/environments/environment.ts",
                  "with": "apps/babbage-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "babbage-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/babbage-functions/tsconfig.app.json",
              "apps/babbage-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/babbage-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/babbage-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/babbage-functions"]
        }
      }
    },
    "hedwig-console": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hedwig-console",
      "sourceRoot": "apps/hedwig-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hedwig-console",
            "index": "apps/hedwig-console/src/index.html",
            "main": "apps/hedwig-console/src/main.ts",
            "polyfills": "apps/hedwig-console/src/polyfills.ts",
            "tsConfig": "apps/hedwig-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hedwig-console/src/favicon.ico",
              "apps/hedwig-console/src/assets"
            ],
            "styles": ["apps/hedwig-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hedwig-console/src/environments/environment.ts",
                  "with": "apps/hedwig-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hedwig-console:build",
            "port": 4228
          },
          "configurations": {
            "production": {
              "browserTarget": "hedwig-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hedwig-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hedwig-console/tsconfig.app.json",
              "apps/hedwig-console/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hedwig-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hedwig-console/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/hedwig-console"]
        }
      }
    },
    "hedwig-console-e2e": {
      "root": "apps/hedwig-console-e2e",
      "sourceRoot": "apps/hedwig-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/hedwig-console-e2e/cypress.json",
            "tsConfig": "apps/hedwig-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "hedwig-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "hedwig-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/hedwig-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/hedwig-console-e2e/**/*"]
          }
        }
      }
    },
    "hedwig-functions": {
      "root": "apps/hedwig-functions",
      "sourceRoot": "apps/hedwig-functions/src",
      "projectType": "application",
      "prefix": "hedwig-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/hedwig-functions",
            "tsConfig": "apps/hedwig-functions/tsconfig.app.json",
            "webpackConfig": "apps/hedwig-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/hedwig-functions/src",
                "glob": "**/function.json",
                "output": "./hedwig-functions"
              },
              {
                "input": "./apps/hedwig-functions/src",
                "glob": "host.json",
                "output": "./hedwig-functions"
              },
              {
                "input": "./apps/hedwig-functions/src",
                "glob": "proxies.json",
                "output": "./hedwig-functions"
              },
              {
                "input": "./apps/hedwig-functions/src",
                "glob": "extensions.csproj",
                "output": "./hedwig-functions"
              },
              {
                "input": "./apps/hedwig-functions/src/bin",
                "glob": "**.*",
                "output": "./hedwig-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/hedwig-functions/src/environments/environment.ts",
                  "with": "apps/hedwig-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "hedwig-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hedwig-functions/tsconfig.app.json",
              "apps/hedwig-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hedwig-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hedwig-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/hedwig-functions"]
        }
      }
    },
    "ui-navigation": {
      "projectType": "library",
      "root": "libs/ui-navigation",
      "sourceRoot": "libs/ui-navigation/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui-navigation/tsconfig.lib.json",
              "libs/ui-navigation/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui-navigation/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui-navigation/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/ui-navigation"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "powder-coat": {
      "projectType": "library",
      "root": "libs/powder-coat",
      "sourceRoot": "libs/powder-coat/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/powder-coat/tsconfig.lib.json",
              "libs/powder-coat/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/powder-coat/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/powder-coat/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/powder-coat"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "chassis": {
      "projectType": "library",
      "root": "libs/chassis",
      "sourceRoot": "libs/chassis/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/chassis/tsconfig.lib.json",
              "libs/chassis/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/chassis/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/chassis/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/chassis"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "panels": {
      "projectType": "library",
      "root": "libs/panels",
      "sourceRoot": "libs/panels/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/panels/tsconfig.lib.json",
              "libs/panels/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/panels/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/panels/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/panels"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "app-settings": {
      "projectType": "library",
      "root": "libs/app-settings",
      "sourceRoot": "libs/app-settings/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/app-settings/tsconfig.lib.json",
              "libs/app-settings/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/app-settings/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/app-settings/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/app-settings"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "environment": {
      "projectType": "library",
      "root": "libs/environment",
      "sourceRoot": "libs/environment/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/environment/tsconfig.lib.json",
              "libs/environment/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/environment/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/environment/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/environment"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "types": {
      "root": "libs/types",
      "sourceRoot": "libs/types/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/types/tsconfig.lib.json",
              "libs/types/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/types/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/types/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/types"]
        }
      }
    },
    "people-sets": {
      "projectType": "library",
      "root": "libs/people-sets",
      "sourceRoot": "libs/people-sets/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/people-sets/tsconfig.lib.json",
              "libs/people-sets/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/people-sets/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/people-sets/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/people-sets"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "notifications": {
      "projectType": "library",
      "root": "libs/notifications",
      "sourceRoot": "libs/notifications/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/notifications/tsconfig.lib.json",
              "libs/notifications/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/notifications/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/notifications/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/notifications"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "user-profiles": {
      "projectType": "library",
      "root": "libs/user-profiles",
      "sourceRoot": "libs/user-profiles/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/user-profiles/tsconfig.lib.json",
              "libs/user-profiles/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/user-profiles/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/user-profiles/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/user-profiles"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "user-auth": {
      "projectType": "library",
      "root": "libs/user-auth",
      "sourceRoot": "libs/user-auth/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/user-auth/tsconfig.lib.json",
              "libs/user-auth/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/user-auth/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/user-auth/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/user-auth"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "crankcase-functions": {
      "root": "apps/crankcase-functions",
      "sourceRoot": "apps/crankcase-functions/src",
      "projectType": "application",
      "prefix": "crankcase-functions",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/crankcase-functions",
            "tsConfig": "apps/crankcase-functions/tsconfig.app.json",
            "webpackConfig": "apps/crankcase-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/crankcase-functions/src",
                "glob": "**/function.json",
                "output": "./crankcase-functions"
              },
              {
                "input": "./apps/crankcase-functions/src",
                "glob": "host.json",
                "output": "./crankcase-functions"
              },
              {
                "input": "./apps/crankcase-functions/src",
                "glob": "proxies.json",
                "output": "./crankcase-functions"
              },
              {
                "input": "./apps/crankcase-functions/src",
                "glob": "extensions.csproj",
                "output": "./crankcase-functions"
              },
              {
                "input": "./apps/crankcase-functions/src/bin",
                "glob": "**.*",
                "output": "./crankcase-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/crankcase-functions/src/environments/environment.ts",
                  "with": "apps/crankcase-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "crankcase-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/crankcase-functions/tsconfig.app.json",
              "apps/crankcase-functions/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/crankcase-functions/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/crankcase-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/crankcase-functions"]
        }
      }
    },
    "pages": {
      "projectType": "library",
      "root": "libs/pages",
      "sourceRoot": "libs/pages/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/pages/tsconfig.lib.json",
              "libs/pages/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/pages/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/pages/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/pages"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "codex-people": {
      "projectType": "library",
      "root": "libs/codex-people",
      "sourceRoot": "libs/codex-people/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/codex-people/tsconfig.lib.json",
              "libs/codex-people/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/codex-people/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/codex-people/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/codex-people"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "mocks": {
      "root": "libs/mocks",
      "sourceRoot": "libs/mocks/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/mocks/tsconfig.lib.json",
              "libs/mocks/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/mocks/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/mocks/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/mocks"]
        }
      }
    },
    "messages": {
      "projectType": "library",
      "root": "libs/messages",
      "sourceRoot": "libs/messages/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/messages/tsconfig.lib.json",
              "libs/messages/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/messages/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/messages/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/messages"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "signalr-loops": {
      "projectType": "library",
      "root": "libs/signalr-loops",
      "sourceRoot": "libs/signalr-loops/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/signalr-loops/tsconfig.lib.json",
              "libs/signalr-loops/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/signalr-loops/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/signalr-loops/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/signalr-loops"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "aad-users": {
      "projectType": "library",
      "root": "libs/aad-users",
      "sourceRoot": "libs/aad-users/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/aad-users/tsconfig.lib.json",
              "libs/aad-users/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/aad-users/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/aad-users/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/aad-users"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "aad-groups": {
      "projectType": "library",
      "root": "libs/aad-groups",
      "sourceRoot": "libs/aad-groups/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/aad-groups/tsconfig.lib.json",
              "libs/aad-groups/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/aad-groups/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/aad-groups/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/aad-groups"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "http-interceptors": {
      "projectType": "library",
      "root": "libs/http-interceptors",
      "sourceRoot": "libs/http-interceptors/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/http-interceptors/tsconfig.lib.json",
              "libs/http-interceptors/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/http-interceptors/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/http-interceptors/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/http-interceptors"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "user-roles": {
      "projectType": "library",
      "root": "libs/user-roles",
      "sourceRoot": "libs/user-roles/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/user-roles/tsconfig.lib.json",
              "libs/user-roles/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/user-roles/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/user-roles/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/user-roles"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "guards": {
      "projectType": "library",
      "root": "libs/guards",
      "sourceRoot": "libs/guards/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/guards/tsconfig.lib.json",
              "libs/guards/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/guards/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/guards/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/guards"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "codex-personality-matrix": {
      "root": "libs/codex-personality-matrix",
      "sourceRoot": "libs/codex-personality-matrix/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/codex-personality-matrix/tsconfig.lib.json",
              "libs/codex-personality-matrix/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/codex-personality-matrix/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/codex-personality-matrix/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/codex-personality-matrix"]
        }
      }
    },
    "releases": {
      "projectType": "library",
      "root": "libs/releases",
      "sourceRoot": "libs/releases/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/releases/tsconfig.lib.json",
              "libs/releases/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/releases/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/releases/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/releases"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "people": {
      "projectType": "library",
      "root": "libs/people",
      "sourceRoot": "libs/people/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/people/tsconfig.lib.json",
              "libs/people/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/people/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/people/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/people"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "schools": {
      "projectType": "library",
      "root": "libs/schools",
      "sourceRoot": "libs/schools/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/schools/tsconfig.lib.json",
              "libs/schools/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/schools/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/schools/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/schools"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "aad": {
      "projectType": "library",
      "root": "libs/aad",
      "sourceRoot": "libs/aad/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/aad/tsconfig.lib.json",
              "libs/aad/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/aad/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/aad/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/aad"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "teamviewer": {
      "projectType": "library",
      "root": "libs/teamviewer",
      "sourceRoot": "libs/teamviewer/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/teamviewer/tsconfig.lib.json",
              "libs/teamviewer/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/teamviewer/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/teamviewer/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/teamviewer"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "trillium": {
      "projectType": "library",
      "root": "libs/trillium",
      "sourceRoot": "libs/trillium/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/trillium/tsconfig.lib.json",
              "libs/trillium/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/trillium/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/trillium/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/trillium"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "devices": {
      "projectType": "library",
      "root": "libs/devices",
      "sourceRoot": "libs/devices/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/devices/tsconfig.lib.json",
              "libs/devices/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/devices/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/devices/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/devices"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "quartermaster-functions": {
      "root": "apps/quartermaster-functions",
      "sourceRoot": "apps/quartermaster-functions/src",
      "projectType": "application",
      "prefix": "quartermaster-functions",
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "options": {
            "outputPath": "dist/apps/quartermaster-functions",
            "tsConfig": "apps/quartermaster-functions/tsconfig.app.json",
            "webpackConfig": "apps/quartermaster-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/quartermaster-functions/src",
                "glob": "**/function.json",
                "output": "./quartermaster-functions"
              },
              {
                "input": "./apps/quartermaster-functions/src",
                "glob": "host.json",
                "output": "./quartermaster-functions"
              },
              {
                "input": "./apps/quartermaster-functions/src",
                "glob": "proxies.json",
                "output": "./quartermaster-functions"
              },
              {
                "input": "./apps/quartermaster-functions/src",
                "glob": "extensions.csproj",
                "output": "./quartermaster-functions"
              },
              {
                "input": "./apps/quartermaster-functions/src/bin",
                "glob": "**.*",
                "output": "./quartermaster-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/quartermaster-functions/src/environments/environment.ts",
                  "with": "apps/quartermaster-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "quartermaster-functions:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/quartermaster-functions/tsconfig.app.json",
              "apps/quartermaster-functions/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/quartermaster-functions/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/quartermaster-functions/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/quartermaster-functions"]
        }
      }
    },
    "quartermaster": {
      "projectType": "library",
      "root": "libs/quartermaster",
      "sourceRoot": "libs/quartermaster/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/quartermaster/tsconfig.lib.json",
              "libs/quartermaster/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/quartermaster/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/quartermaster"],
          "options": {
            "jestConfig": "libs/quartermaster/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ats": {
      "projectType": "library",
      "root": "libs/ats",
      "sourceRoot": "libs/ats/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ats/tsconfig.lib.json",
              "libs/ats/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ats/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ats"],
          "options": {
            "jestConfig": "libs/ats/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "spyglass-functions": {
      "root": "apps/spyglass-functions",
      "sourceRoot": "apps/spyglass-functions/src",
      "projectType": "application",
      "prefix": "spyglass-functions",
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/spyglass-functions",
            "tsConfig": "apps/spyglass-functions/tsconfig.app.json",
            "webpackConfig": "apps/spyglass-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/spyglass-functions/src",
                "glob": "**/function.json",
                "output": "./spyglass-functions"
              },
              {
                "input": "./apps/spyglass-functions/src",
                "glob": "host.json",
                "output": "./spyglass-functions"
              },
              {
                "input": "./apps/spyglass-functions/src",
                "glob": "proxies.json",
                "output": "./spyglass-functions"
              },
              {
                "input": "./apps/spyglass-functions/src",
                "glob": "extensions.csproj",
                "output": "./spyglass-functions"
              },
              {
                "input": "./apps/spyglass-functions/src/bin",
                "glob": "**.*",
                "output": "./spyglass-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/spyglass-functions/src/environments/environment.ts",
                  "with": "apps/spyglass-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "spyglass-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/spyglass-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/spyglass-functions"],
          "options": {
            "jestConfig": "apps/spyglass-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "pings-ui": {
      "projectType": "library",
      "root": "libs/pings-ui",
      "sourceRoot": "libs/pings-ui/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/pings-ui/tsconfig.lib.json",
              "libs/pings-ui/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/pings-ui/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/pings-ui"],
          "options": {
            "jestConfig": "libs/pings-ui/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "spectro-functions": {
      "root": "apps/spectro-functions",
      "sourceRoot": "apps/spectro-functions/src",
      "projectType": "application",
      "prefix": "spectro-functions",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/spectro-functions",
            "main": "apps/spectro-functions/src/main.ts",
            "tsConfig": "apps/spectro-functions/tsconfig.app.json",
            "assets": ["apps/spectro-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/spectro-functions/src/environments/environment.ts",
                  "with": "apps/spectro-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "spectro-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/spectro-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/spectro-functions"],
          "options": {
            "jestConfig": "apps/spectro-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "spectro-console": {
      "projectType": "application",
      "root": "apps/spectro-console",
      "sourceRoot": "apps/spectro-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/spectro-console",
            "index": "apps/spectro-console/src/index.html",
            "main": "apps/spectro-console/src/main.ts",
            "polyfills": "apps/spectro-console/src/polyfills.ts",
            "tsConfig": "apps/spectro-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/spectro-console/src/favicon.ico",
              "apps/spectro-console/src/assets"
            ],
            "styles": ["apps/spectro-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/spectro-console/src/environments/environment.ts",
                  "with": "apps/spectro-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "spectro-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "spectro-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "spectro-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/spectro-console/tsconfig.app.json",
              "apps/spectro-console/tsconfig.spec.json",
              "apps/spectro-console/tsconfig.editor.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/spectro-console/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/spectro-console"],
          "options": {
            "jestConfig": "apps/spectro-console/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "spectro-console-e2e": {
      "root": "apps/spectro-console-e2e",
      "sourceRoot": "apps/spectro-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/spectro-console-e2e/cypress.json",
            "tsConfig": "apps/spectro-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "spectro-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "spectro-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/spectro-console-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/spectro-console-e2e/**/*"]
          }
        }
      }
    },
    "bentley-functions": {
      "root": "apps/bentley-functions",
      "sourceRoot": "apps/bentley-functions/src",
      "projectType": "application",
      "prefix": "bentley-functions",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/bentley-functions",
            "main": "apps/bentley-functions/src/main.ts",
            "tsConfig": "apps/bentley-functions/tsconfig.app.json",
            "assets": ["apps/bentley-functions/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/bentley-functions/src/environments/environment.ts",
                  "with": "apps/bentley-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "bentley-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/bentley-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/bentley-functions"],
          "options": {
            "jestConfig": "apps/bentley-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "quartermaster-console": {
      "projectType": "application",
      "root": "apps/quartermaster-console",
      "sourceRoot": "apps/quartermaster-console/src",
      "prefix": "cosmos",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/quartermaster-console",
            "index": "apps/quartermaster-console/src/index.html",
            "main": "apps/quartermaster-console/src/main.ts",
            "polyfills": "apps/quartermaster-console/src/polyfills.ts",
            "tsConfig": "apps/quartermaster-console/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/quartermaster-console/src/favicon.ico",
              "apps/quartermaster-console/src/assets"
            ],
            "styles": ["apps/quartermaster-console/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/quartermaster-console/src/environments/environment.ts",
                  "with": "apps/quartermaster-console/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "15kb",
                  "maximumError": "20kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "quartermaster-console:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "quartermaster-console:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "quartermaster-console:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/quartermaster-console/tsconfig.app.json",
              "apps/quartermaster-console/tsconfig.spec.json",
              "apps/quartermaster-console/tsconfig.editor.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/quartermaster-console/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/quartermaster-console"],
          "options": {
            "jestConfig": "apps/quartermaster-console/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "quartermaster-console-e2e": {
      "root": "apps/quartermaster-console-e2e",
      "sourceRoot": "apps/quartermaster-console-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/quartermaster-console-e2e/cypress.json",
            "tsConfig": "apps/quartermaster-console-e2e/tsconfig.e2e.json",
            "devServerTarget": "quartermaster-console:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "quartermaster-console:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/quartermaster-console-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/quartermaster-console-e2e/**/*"
            ]
          }
        }
      }
    },
    "tollbooth-functions": {
      "root": "apps/tollbooth-functions",
      "sourceRoot": "apps/tollbooth-functions/src",
      "projectType": "application",
      "prefix": "tollbooth-functions",
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/tollbooth-functions",
            "tsConfig": "apps/tollbooth-functions/tsconfig.app.json",
            "webpackConfig": "apps/tollbooth-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/tollbooth-functions/src",
                "glob": "**/function.json",
                "output": "./tollbooth-functions"
              },
              {
                "input": "./apps/tollbooth-functions/src",
                "glob": "host.json",
                "output": "./tollbooth-functions"
              },
              {
                "input": "./apps/tollbooth-functions/src",
                "glob": "proxies.json",
                "output": "./tollbooth-functions"
              },
              {
                "input": "./apps/tollbooth-functions/src",
                "glob": "extensions.csproj",
                "output": "./tollbooth-functions"
              },
              {
                "input": "./apps/tollbooth-functions/src/bin",
                "glob": "**.*",
                "output": "./tollbooth-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/tollbooth-functions/src/environments/environment.ts",
                  "with": "apps/tollbooth-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "tollbooth-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/tollbooth-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/tollbooth-functions"],
          "options": {
            "jestConfig": "apps/tollbooth-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "friday-functions": {
      "root": "apps/friday-functions",
      "sourceRoot": "apps/friday-functions/src",
      "projectType": "application",
      "prefix": "friday-functions",
      "architect": {
        "build": {
          "builder": "./tools/executors/azfunc:azfunc",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/friday-functions",
            "tsConfig": "apps/friday-functions/tsconfig.app.json",
            "webpackConfig": "apps/friday-functions/webpack.config.js",
            "watch": false,
            "buildLibsFromSource": true,
            "externalDependencies": "none",
            "sourceMap": false,
            "assets": [
              {
                "input": "./apps/friday-functions/src",
                "glob": "**/function.json",
                "output": "./friday-functions"
              },
              {
                "input": "./apps/friday-functions/src",
                "glob": "host.json",
                "output": "./friday-functions"
              },
              {
                "input": "./apps/friday-functions/src",
                "glob": "proxies.json",
                "output": "./friday-functions"
              },
              {
                "input": "./apps/friday-functions/src",
                "glob": "extensions.csproj",
                "output": "./friday-functions"
              },
              {
                "input": "./apps/friday-functions/src/bin",
                "glob": "**.*",
                "output": "./friday-functions/bin"
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/friday-functions/src/environments/environment.ts",
                  "with": "apps/friday-functions/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "friday-functions:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/friday-functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/friday-functions"],
          "options": {
            "jestConfig": "apps/friday-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "friday-functions-lib": {
      "root": "libs/friday-functions-lib",
      "sourceRoot": "libs/friday-functions-lib/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/friday-functions-lib/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/friday-functions-lib"],
          "options": {
            "jestConfig": "libs/friday-functions-lib/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-hagar-service": {
      "projectType": "library",
      "root": "libs/angular-services/hagar-service",
      "sourceRoot": "libs/angular-services/hagar-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/hagar-service/tsconfig.lib.json",
              "libs/angular-services/hagar-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/hagar-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/hagar-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/hagar-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-codex-service": {
      "projectType": "library",
      "root": "libs/angular-services/codex-service",
      "sourceRoot": "libs/angular-services/codex-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/codex-service/tsconfig.lib.json",
              "libs/angular-services/codex-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/codex-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/codex-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/codex-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-viewfinder-service": {
      "projectType": "library",
      "root": "libs/angular-services/viewfinder-service",
      "sourceRoot": "libs/angular-services/viewfinder-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/viewfinder-service/tsconfig.lib.json",
              "libs/angular-services/viewfinder-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/viewfinder-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/viewfinder-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/viewfinder-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-sorting-hat-service": {
      "projectType": "library",
      "root": "libs/angular-services/sorting-hat-service",
      "sourceRoot": "libs/angular-services/sorting-hat-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/sorting-hat-service/tsconfig.lib.json",
              "libs/angular-services/sorting-hat-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/sorting-hat-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/sorting-hat-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/sorting-hat-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-houston-service": {
      "projectType": "library",
      "root": "libs/angular-services/houston-service",
      "sourceRoot": "libs/angular-services/houston-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/houston-service/tsconfig.lib.json",
              "libs/angular-services/houston-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/houston-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/houston-service"],
          "options": {
            "jestConfig": "libs/angular-services/houston-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-skinner-service": {
      "projectType": "library",
      "root": "libs/angular-services/skinner-service",
      "sourceRoot": "libs/angular-services/skinner-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/skinner-service/tsconfig.lib.json",
              "libs/angular-services/skinner-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/skinner-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/skinner-service"],
          "options": {
            "jestConfig": "libs/angular-services/skinner-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-igor-service": {
      "projectType": "library",
      "root": "libs/angular-services/igor-service",
      "sourceRoot": "libs/angular-services/igor-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/igor-service/tsconfig.lib.json",
              "libs/angular-services/igor-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/igor-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/igor-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/igor-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-flenderson-service": {
      "projectType": "library",
      "root": "libs/angular-services/flenderson-service",
      "sourceRoot": "libs/angular-services/flenderson-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/flenderson-service/tsconfig.lib.json",
              "libs/angular-services/flenderson-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/flenderson-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/flenderson-service"],
          "options": {
            "jestConfig": "libs/angular-services/flenderson-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-panama-service": {
      "projectType": "library",
      "root": "libs/angular-services/panama-service",
      "sourceRoot": "libs/angular-services/panama-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/panama-service/tsconfig.lib.json",
              "libs/angular-services/panama-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/panama-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/panama-service"],
          "options": {
            "jestConfig": "libs/angular-services/panama-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-quartermaster-service": {
      "projectType": "library",
      "root": "libs/angular-services/quartermaster-service",
      "sourceRoot": "libs/angular-services/quartermaster-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/quartermaster-service/tsconfig.lib.json",
              "libs/angular-services/quartermaster-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/quartermaster-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/quartermaster-service"],
          "options": {
            "jestConfig": "libs/angular-services/quartermaster-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-signalr-service": {
      "projectType": "library",
      "root": "libs/angular-services/signalr-service",
      "sourceRoot": "libs/angular-services/signalr-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/signalr-service/tsconfig.lib.json",
              "libs/angular-services/signalr-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/signalr-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/signalr-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/signalr-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "angular-services-pings-service": {
      "projectType": "library",
      "root": "libs/angular-services/pings-service",
      "sourceRoot": "libs/angular-services/pings-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/pings-service/tsconfig.lib.json",
              "libs/angular-services/pings-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/pings-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/angular-services/pings-service"],
          "options": {
            "jestConfig": "libs/angular-services/pings-service/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "angular-services-msgraph-service": {
      "projectType": "library",
      "root": "libs/angular-services/msgraph-service",
      "sourceRoot": "libs/angular-services/msgraph-service/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/angular-services/msgraph-service/tsconfig.lib.json",
              "libs/angular-services/msgraph-service/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/angular-services/msgraph-service/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/angular-services/msgraph-service/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/angular-services/msgraph-service"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "azure-functions-viewfinder-functions": {
      "root": "libs/azure-functions/viewfinder-functions",
      "sourceRoot": "libs/azure-functions/viewfinder-functions/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/azure-functions/viewfinder-functions/**/*.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/azure-functions/viewfinder-functions"],
          "options": {
            "jestConfig": "libs/azure-functions/viewfinder-functions/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "azure-functions-shared": {
      "root": "libs/azure-functions/shared",
      "sourceRoot": "libs/azure-functions/shared/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/azure-functions/shared/tsconfig.lib.json",
              "libs/azure-functions/shared/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/azure-functions/shared/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/azure-functions/shared/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/azure-functions/shared"]
        }
      }
    },
    "search-services": {
      "projectType": "library",
      "root": "libs/search-services",
      "sourceRoot": "libs/search-services/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/search-services/tsconfig.lib.json",
              "libs/search-services/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/search-services/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/search-services"],
          "options": {
            "jestConfig": "libs/search-services/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "screens-google-google": {
      "projectType": "library",
      "root": "libs/screens/google/google",
      "sourceRoot": "libs/screens/google/google/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/screens/google/google/tsconfig.lib.json",
              "libs/screens/google/google/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/screens/google/google/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/screens/google/google/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/screens/google/google"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "screens-google-groups": {
      "projectType": "library",
      "root": "libs/screens/google/groups",
      "sourceRoot": "libs/screens/google/groups/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/screens/google/groups/tsconfig.lib.json",
              "libs/screens/google/groups/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/screens/google/groups/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/screens/google/groups/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/screens/google/groups"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "screens-google-calendar": {
      "projectType": "library",
      "root": "libs/screens/google/calendar",
      "sourceRoot": "libs/screens/google/calendar/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/screens/google/calendar/tsconfig.lib.json",
              "libs/screens/google/calendar/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/screens/google/calendar/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/screens/google/calendar/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/screens/google/calendar"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "screens-ipps": {
      "projectType": "library",
      "root": "libs/screens/ipps",
      "sourceRoot": "libs/screens/ipps/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/screens/ipps/tsconfig.lib.json",
              "libs/screens/ipps/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/screens/ipps/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/screens/ipps/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/screens/ipps"]
        }
      },
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      }
    },
    "ui-shared-interaction-big-search": {
      "projectType": "library",
      "root": "libs/ui/shared/interaction/big-search",
      "sourceRoot": "libs/ui/shared/interaction/big-search/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/interaction/big-search/tsconfig.lib.json",
              "libs/ui/shared/interaction/big-search/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/interaction/big-search/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/shared/interaction/big-search"],
          "options": {
            "jestConfig": "libs/ui/shared/interaction/big-search/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-interaction-big-search-config": {
      "projectType": "library",
      "root": "libs/ui/shared/interaction/big-search-config",
      "sourceRoot": "libs/ui/shared/interaction/big-search-config/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/interaction/big-search-config/tsconfig.lib.json",
              "libs/ui/shared/interaction/big-search-config/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/interaction/big-search-config/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/shared/interaction/big-search-config"],
          "options": {
            "jestConfig": "libs/ui/shared/interaction/big-search-config/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-presentation-big-search-results": {
      "projectType": "library",
      "root": "libs/ui/shared/presentation/big-search-results",
      "sourceRoot": "libs/ui/shared/presentation/big-search-results/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/presentation/big-search-results/tsconfig.lib.json",
              "libs/ui/shared/presentation/big-search-results/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/presentation/big-search-results/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/shared/presentation/big-search-results"
          ],
          "options": {
            "jestConfig": "libs/ui/shared/presentation/big-search-results/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-interaction-big-search-query": {
      "projectType": "library",
      "root": "libs/ui/shared/interaction/big-search-query",
      "sourceRoot": "libs/ui/shared/interaction/big-search-query/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/interaction/big-search-query/tsconfig.lib.json",
              "libs/ui/shared/interaction/big-search-query/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/interaction/big-search-query/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/shared/interaction/big-search-query"],
          "options": {
            "jestConfig": "libs/ui/shared/interaction/big-search-query/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-groups-interaction-modify-group": {
      "projectType": "library",
      "root": "libs/ui/google/groups/interaction/modify-group",
      "sourceRoot": "libs/ui/google/groups/interaction/modify-group/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/groups/interaction/modify-group/tsconfig.lib.json",
              "libs/ui/google/groups/interaction/modify-group/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/groups/interaction/modify-group/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/groups/interaction/modify-group"
          ],
          "options": {
            "jestConfig": "libs/ui/google/groups/interaction/modify-group/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-groups-presentation-group-details": {
      "projectType": "library",
      "root": "libs/ui/google/groups/presentation/group-details",
      "sourceRoot": "libs/ui/google/groups/presentation/group-details/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/groups/presentation/group-details/tsconfig.lib.json",
              "libs/ui/google/groups/presentation/group-details/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/groups/presentation/group-details/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/groups/presentation/group-details"
          ],
          "options": {
            "jestConfig": "libs/ui/google/groups/presentation/group-details/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-groups-presentation-group-card": {
      "projectType": "library",
      "root": "libs/ui/google/groups/presentation/group-card",
      "sourceRoot": "libs/ui/google/groups/presentation/group-card/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/groups/presentation/group-card/tsconfig.lib.json",
              "libs/ui/google/groups/presentation/group-card/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/groups/presentation/group-card/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/google/groups/presentation/group-card"],
          "options": {
            "jestConfig": "libs/ui/google/groups/presentation/group-card/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-groups-presentation-group-summary": {
      "projectType": "library",
      "root": "libs/ui/google/groups/presentation/group-summary",
      "sourceRoot": "libs/ui/google/groups/presentation/group-summary/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/groups/presentation/group-summary/tsconfig.lib.json",
              "libs/ui/google/groups/presentation/group-summary/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/groups/presentation/group-summary/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/groups/presentation/group-summary"
          ],
          "options": {
            "jestConfig": "libs/ui/google/groups/presentation/group-summary/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-presentation-entity-summary-dialog": {
      "projectType": "library",
      "root": "libs/ui/shared/presentation/entity-summary-dialog",
      "sourceRoot": "libs/ui/shared/presentation/entity-summary-dialog/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/presentation/entity-summary-dialog/tsconfig.lib.json",
              "libs/ui/shared/presentation/entity-summary-dialog/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/presentation/entity-summary-dialog/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/shared/presentation/entity-summary-dialog"
          ],
          "options": {
            "jestConfig": "libs/ui/shared/presentation/entity-summary-dialog/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-presentation-entity-card": {
      "projectType": "library",
      "root": "libs/ui/shared/presentation/entity-card",
      "sourceRoot": "libs/ui/shared/presentation/entity-card/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/presentation/entity-card/tsconfig.lib.json",
              "libs/ui/shared/presentation/entity-card/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/presentation/entity-card/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/shared/presentation/entity-card"],
          "options": {
            "jestConfig": "libs/ui/shared/presentation/entity-card/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-presentation-entity-details": {
      "projectType": "library",
      "root": "libs/ui/shared/presentation/entity-details",
      "sourceRoot": "libs/ui/shared/presentation/entity-details/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/presentation/entity-details/tsconfig.lib.json",
              "libs/ui/shared/presentation/entity-details/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/presentation/entity-details/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui/shared/presentation/entity-details"],
          "options": {
            "jestConfig": "libs/ui/shared/presentation/entity-details/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-groups-interaction-modify-membership": {
      "projectType": "library",
      "root": "libs/ui/google/groups/interaction/modify-membership",
      "sourceRoot": "libs/ui/google/groups/interaction/modify-membership/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/groups/interaction/modify-membership/tsconfig.lib.json",
              "libs/ui/google/groups/interaction/modify-membership/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/groups/interaction/modify-membership/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/groups/interaction/modify-membership"
          ],
          "options": {
            "jestConfig": "libs/ui/google/groups/interaction/modify-membership/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-shared-interaction-big-search-query-pane": {
      "projectType": "library",
      "root": "libs/ui/shared/interaction/big-search-query-pane",
      "sourceRoot": "libs/ui/shared/interaction/big-search-query-pane/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/shared/interaction/big-search-query-pane/tsconfig.lib.json",
              "libs/ui/shared/interaction/big-search-query-pane/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/shared/interaction/big-search-query-pane/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/shared/interaction/big-search-query-pane"
          ],
          "options": {
            "jestConfig": "libs/ui/shared/interaction/big-search-query-pane/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-calendar-interaction-modify-membership": {
      "projectType": "library",
      "root": "libs/ui/google/calendar/interaction/modify-membership",
      "sourceRoot": "libs/ui/google/calendar/interaction/modify-membership/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/calendar/interaction/modify-membership/tsconfig.lib.json",
              "libs/ui/google/calendar/interaction/modify-membership/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/calendar/interaction/modify-membership/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/calendar/interaction/modify-membership"
          ],
          "options": {
            "jestConfig": "libs/ui/google/calendar/interaction/modify-membership/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-calendar-interaction-modify-calendar": {
      "projectType": "library",
      "root": "libs/ui/google/calendar/interaction/modify-calendar",
      "sourceRoot": "libs/ui/google/calendar/interaction/modify-calendar/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/calendar/interaction/modify-calendar/tsconfig.lib.json",
              "libs/ui/google/calendar/interaction/modify-calendar/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/calendar/interaction/modify-calendar/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/calendar/interaction/modify-calendar"
          ],
          "options": {
            "jestConfig": "libs/ui/google/calendar/interaction/modify-calendar/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-calendar-presentation-calendar-card": {
      "projectType": "library",
      "root": "libs/ui/google/calendar/presentation/calendar-card",
      "sourceRoot": "libs/ui/google/calendar/presentation/calendar-card/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/calendar/presentation/calendar-card/tsconfig.lib.json",
              "libs/ui/google/calendar/presentation/calendar-card/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/calendar/presentation/calendar-card/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/calendar/presentation/calendar-card"
          ],
          "options": {
            "jestConfig": "libs/ui/google/calendar/presentation/calendar-card/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-calendar-presentation-calendar-details": {
      "projectType": "library",
      "root": "libs/ui/google/calendar/presentation/calendar-details",
      "sourceRoot": "libs/ui/google/calendar/presentation/calendar-details/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/calendar/presentation/calendar-details/tsconfig.lib.json",
              "libs/ui/google/calendar/presentation/calendar-details/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/calendar/presentation/calendar-details/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/calendar/presentation/calendar-details"
          ],
          "options": {
            "jestConfig": "libs/ui/google/calendar/presentation/calendar-details/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "ui-google-calendar-presentation-calendar-summary": {
      "projectType": "library",
      "root": "libs/ui/google/calendar/presentation/calendar-summary",
      "sourceRoot": "libs/ui/google/calendar/presentation/calendar-summary/src",
      "prefix": "cosmos",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/google/calendar/presentation/calendar-summary/tsconfig.lib.json",
              "libs/ui/google/calendar/presentation/calendar-summary/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/ui/google/calendar/presentation/calendar-summary/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "coverage/libs/ui/google/calendar/presentation/calendar-summary"
          ],
          "options": {
            "jestConfig": "libs/ui/google/calendar/presentation/calendar-summary/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular",
    "analytics": false
  },
  "schematics": {
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  },
  "defaultProject": "panama-console"
}
